#include <map>

static_assert(sizeof(bool) == 1, "");


/*
function StdMap_new(key::Type{Bool}, type::Type{Bool})
    res = ccall(("std_map_bool_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Bool}}, ())
    return StdMap{Bool, Bool}(res)::STL.StdMaps.StdMap{Bool, Bool}
end
*/
extern "C" std::map<bool, bool> * std_map_bool_bool_new(
    
) {
    return new std::map<bool, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, Bool})
    res = ccall(("std_map_bool_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_bool_delete(
    std::map<bool, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, Bool})
    res = ccall(("std_map_bool_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Bool}}, (Ptr{STL.StdMaps.StdMap{Bool, Bool}},), map)
    return StdMap{Bool, Bool}(res)::STL.StdMaps.StdMap{Bool, Bool}
end
*/
extern "C" std::map<bool, bool> * std_map_bool_bool_copy(
    const std::map<bool, bool> * restrict map
) {
    return new std::map<bool, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, Bool})
    res = ccall(("std_map_bool_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_bool_length(
    const std::map<bool, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, Bool}, key::Any)
    res = ccall(("std_map_bool_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Bool}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_bool_haskey(
    const std::map<bool, bool> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, Bool}, key::Any)
    res = ccall(("std_map_bool_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{Bool, Bool}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_bool_bool_getindex(
    std::map<bool, bool> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_bool_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Bool}}, Ptr{Bool}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_bool_setindex_(
    std::map<bool, bool> * restrict map,
    bool const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, Bool}, key::Any)
    res = ccall(("std_map_bool_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Bool}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, Bool}
end
*/
extern "C" void std_map_bool_bool_delete_(
    std::map<bool, bool> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, Bool}, map2::STL.StdMaps.StdMap{Bool, Bool})
    res = ccall(("std_map_bool_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, Bool}}, Ptr{STL.StdMaps.StdMap{Bool, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_bool_equals(
    const std::map<bool, bool> * restrict map1,
    const std::map<bool, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, Bool})
    res = ccall(("std_map_bool_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}}, (Ptr{STL.StdMaps.StdMap{Bool, Bool}},), map)
    return StdMapIterator{Bool, Bool}(res)::STL.StdMaps.StdMapIterator{Bool, Bool}
end
*/
extern "C" std::map<bool, bool>::const_iterator * std_map_bool_bool_cbegin(
    const std::map<bool, bool> * restrict map
) {
    return new std::map<bool, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, Bool})
    res = ccall(("std_map_bool_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}}, (Ptr{STL.StdMaps.StdMap{Bool, Bool}},), map)
    return StdMapIterator{Bool, Bool}(res)::STL.StdMaps.StdMapIterator{Bool, Bool}
end
*/
extern "C" std::map<bool, bool>::const_iterator * std_map_bool_bool_cend(
    const std::map<bool, bool> * restrict map
) {
    return new std::map<bool, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{Bool})
    res = ccall(("std_map_bool_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Bool}}, ())
    return StdMapIterator{Bool, Bool}(res)::STL.StdMaps.StdMapIterator{Bool, Bool}
end
*/
extern "C" std::map<bool, bool>::const_iterator * std_map_bool_bool_const_iterator_new(
    
) {
    return new std::map<bool, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, Bool})
    res = ccall(("std_map_bool_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_bool_const_iterator_delete(
    std::map<bool, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, Bool}, iter2::STL.StdMaps.StdMapIterator{Bool, Bool})
    res = ccall(("std_map_bool_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}}, Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_bool_const_iterator_equals(
    const std::map<bool, bool>::const_iterator * restrict iter1,
    const std::map<bool, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, Bool})
    res = ccall(("std_map_bool_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}},), iter)
    return convert_result(Pair{Bool, Bool}, res)::Pair{Bool, Bool}
end
*/
extern "C" const std::pair<const bool, bool> * std_map_bool_bool_const_iterator_getindex(
    std::map<bool, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, Bool})
    res = ccall(("std_map_bool_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_bool_const_iterator_inc_(
    std::map<bool, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, Bool})
    res = ccall(("std_map_bool_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_bool_const_iterator_dec_(
    std::map<bool, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, Bool}, map::STL.StdMaps.StdMap{Bool, Bool})
    res = ccall(("std_map_bool_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}}, Ptr{STL.StdMaps.StdMap{Bool, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_bool_const_iterator_is_cbegin(
    const std::map<bool, bool>::const_iterator * restrict iter,
    const std::map<bool, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, Bool}, map::STL.StdMaps.StdMap{Bool, Bool})
    res = ccall(("std_map_bool_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Bool}}, Ptr{STL.StdMaps.StdMap{Bool, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_bool_const_iterator_is_cend(
    const std::map<bool, bool>::const_iterator * restrict iter,
    const std::map<bool, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{Float32})
    res = ccall(("std_map_bool_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Float32}}, ())
    return StdMap{Bool, Float32}(res)::STL.StdMaps.StdMap{Bool, Float32}
end
*/
extern "C" std::map<bool, float> * std_map_bool_float_new(
    
) {
    return new std::map<bool, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, Float32})
    res = ccall(("std_map_bool_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_float_delete(
    std::map<bool, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, Float32})
    res = ccall(("std_map_bool_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Float32}}, (Ptr{STL.StdMaps.StdMap{Bool, Float32}},), map)
    return StdMap{Bool, Float32}(res)::STL.StdMaps.StdMap{Bool, Float32}
end
*/
extern "C" std::map<bool, float> * std_map_bool_float_copy(
    const std::map<bool, float> * restrict map
) {
    return new std::map<bool, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, Float32})
    res = ccall(("std_map_bool_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_float_length(
    const std::map<bool, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, Float32}, key::Any)
    res = ccall(("std_map_bool_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Float32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_float_haskey(
    const std::map<bool, float> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, Float32}, key::Any)
    res = ccall(("std_map_bool_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{Bool, Float32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_bool_float_getindex(
    std::map<bool, float> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_bool_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Float32}}, Ptr{Float32}, Ptr{Bool}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_float_setindex_(
    std::map<bool, float> * restrict map,
    float const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, Float32}, key::Any)
    res = ccall(("std_map_bool_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Float32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, Float32}
end
*/
extern "C" void std_map_bool_float_delete_(
    std::map<bool, float> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, Float32}, map2::STL.StdMaps.StdMap{Bool, Float32})
    res = ccall(("std_map_bool_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, Float32}}, Ptr{STL.StdMaps.StdMap{Bool, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_float_equals(
    const std::map<bool, float> * restrict map1,
    const std::map<bool, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, Float32})
    res = ccall(("std_map_bool_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}}, (Ptr{STL.StdMaps.StdMap{Bool, Float32}},), map)
    return StdMapIterator{Bool, Float32}(res)::STL.StdMaps.StdMapIterator{Bool, Float32}
end
*/
extern "C" std::map<bool, float>::const_iterator * std_map_bool_float_cbegin(
    const std::map<bool, float> * restrict map
) {
    return new std::map<bool, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, Float32})
    res = ccall(("std_map_bool_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}}, (Ptr{STL.StdMaps.StdMap{Bool, Float32}},), map)
    return StdMapIterator{Bool, Float32}(res)::STL.StdMaps.StdMapIterator{Bool, Float32}
end
*/
extern "C" std::map<bool, float>::const_iterator * std_map_bool_float_cend(
    const std::map<bool, float> * restrict map
) {
    return new std::map<bool, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{Float32})
    res = ccall(("std_map_bool_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Float32}}, ())
    return StdMapIterator{Bool, Float32}(res)::STL.StdMaps.StdMapIterator{Bool, Float32}
end
*/
extern "C" std::map<bool, float>::const_iterator * std_map_bool_float_const_iterator_new(
    
) {
    return new std::map<bool, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, Float32})
    res = ccall(("std_map_bool_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_float_const_iterator_delete(
    std::map<bool, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, Float32}, iter2::STL.StdMaps.StdMapIterator{Bool, Float32})
    res = ccall(("std_map_bool_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}}, Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_float_const_iterator_equals(
    const std::map<bool, float>::const_iterator * restrict iter1,
    const std::map<bool, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, Float32})
    res = ccall(("std_map_bool_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}},), iter)
    return convert_result(Pair{Bool, Float32}, res)::Pair{Bool, Float32}
end
*/
extern "C" const std::pair<const bool, float> * std_map_bool_float_const_iterator_getindex(
    std::map<bool, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, Float32})
    res = ccall(("std_map_bool_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_float_const_iterator_inc_(
    std::map<bool, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, Float32})
    res = ccall(("std_map_bool_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_float_const_iterator_dec_(
    std::map<bool, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, Float32}, map::STL.StdMaps.StdMap{Bool, Float32})
    res = ccall(("std_map_bool_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}}, Ptr{STL.StdMaps.StdMap{Bool, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_float_const_iterator_is_cbegin(
    const std::map<bool, float>::const_iterator * restrict iter,
    const std::map<bool, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, Float32}, map::STL.StdMaps.StdMap{Bool, Float32})
    res = ccall(("std_map_bool_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float32}}, Ptr{STL.StdMaps.StdMap{Bool, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_float_const_iterator_is_cend(
    const std::map<bool, float>::const_iterator * restrict iter,
    const std::map<bool, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{Float64})
    res = ccall(("std_map_bool_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Float64}}, ())
    return StdMap{Bool, Float64}(res)::STL.StdMaps.StdMap{Bool, Float64}
end
*/
extern "C" std::map<bool, double> * std_map_bool_double_new(
    
) {
    return new std::map<bool, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, Float64})
    res = ccall(("std_map_bool_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_double_delete(
    std::map<bool, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, Float64})
    res = ccall(("std_map_bool_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Float64}}, (Ptr{STL.StdMaps.StdMap{Bool, Float64}},), map)
    return StdMap{Bool, Float64}(res)::STL.StdMaps.StdMap{Bool, Float64}
end
*/
extern "C" std::map<bool, double> * std_map_bool_double_copy(
    const std::map<bool, double> * restrict map
) {
    return new std::map<bool, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, Float64})
    res = ccall(("std_map_bool_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_double_length(
    const std::map<bool, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, Float64}, key::Any)
    res = ccall(("std_map_bool_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Float64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_double_haskey(
    const std::map<bool, double> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, Float64}, key::Any)
    res = ccall(("std_map_bool_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{Bool, Float64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_bool_double_getindex(
    std::map<bool, double> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_bool_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Float64}}, Ptr{Float64}, Ptr{Bool}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_double_setindex_(
    std::map<bool, double> * restrict map,
    double const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, Float64}, key::Any)
    res = ccall(("std_map_bool_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Float64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, Float64}
end
*/
extern "C" void std_map_bool_double_delete_(
    std::map<bool, double> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, Float64}, map2::STL.StdMaps.StdMap{Bool, Float64})
    res = ccall(("std_map_bool_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, Float64}}, Ptr{STL.StdMaps.StdMap{Bool, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_double_equals(
    const std::map<bool, double> * restrict map1,
    const std::map<bool, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, Float64})
    res = ccall(("std_map_bool_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}}, (Ptr{STL.StdMaps.StdMap{Bool, Float64}},), map)
    return StdMapIterator{Bool, Float64}(res)::STL.StdMaps.StdMapIterator{Bool, Float64}
end
*/
extern "C" std::map<bool, double>::const_iterator * std_map_bool_double_cbegin(
    const std::map<bool, double> * restrict map
) {
    return new std::map<bool, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, Float64})
    res = ccall(("std_map_bool_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}}, (Ptr{STL.StdMaps.StdMap{Bool, Float64}},), map)
    return StdMapIterator{Bool, Float64}(res)::STL.StdMaps.StdMapIterator{Bool, Float64}
end
*/
extern "C" std::map<bool, double>::const_iterator * std_map_bool_double_cend(
    const std::map<bool, double> * restrict map
) {
    return new std::map<bool, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{Float64})
    res = ccall(("std_map_bool_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Float64}}, ())
    return StdMapIterator{Bool, Float64}(res)::STL.StdMaps.StdMapIterator{Bool, Float64}
end
*/
extern "C" std::map<bool, double>::const_iterator * std_map_bool_double_const_iterator_new(
    
) {
    return new std::map<bool, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, Float64})
    res = ccall(("std_map_bool_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_double_const_iterator_delete(
    std::map<bool, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, Float64}, iter2::STL.StdMaps.StdMapIterator{Bool, Float64})
    res = ccall(("std_map_bool_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}}, Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_double_const_iterator_equals(
    const std::map<bool, double>::const_iterator * restrict iter1,
    const std::map<bool, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, Float64})
    res = ccall(("std_map_bool_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}},), iter)
    return convert_result(Pair{Bool, Float64}, res)::Pair{Bool, Float64}
end
*/
extern "C" const std::pair<const bool, double> * std_map_bool_double_const_iterator_getindex(
    std::map<bool, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, Float64})
    res = ccall(("std_map_bool_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_double_const_iterator_inc_(
    std::map<bool, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, Float64})
    res = ccall(("std_map_bool_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_double_const_iterator_dec_(
    std::map<bool, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, Float64}, map::STL.StdMaps.StdMap{Bool, Float64})
    res = ccall(("std_map_bool_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}}, Ptr{STL.StdMaps.StdMap{Bool, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_double_const_iterator_is_cbegin(
    const std::map<bool, double>::const_iterator * restrict iter,
    const std::map<bool, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, Float64}, map::STL.StdMaps.StdMap{Bool, Float64})
    res = ccall(("std_map_bool_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Float64}}, Ptr{STL.StdMaps.StdMap{Bool, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_double_const_iterator_is_cend(
    const std::map<bool, double>::const_iterator * restrict iter,
    const std::map<bool, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{Int16})
    res = ccall(("std_map_bool_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int16}}, ())
    return StdMap{Bool, Int16}(res)::STL.StdMaps.StdMap{Bool, Int16}
end
*/
extern "C" std::map<bool, int16_t> * std_map_bool_int16_t_new(
    
) {
    return new std::map<bool, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int16_t_delete(
    std::map<bool, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int16}}, (Ptr{STL.StdMaps.StdMap{Bool, Int16}},), map)
    return StdMap{Bool, Int16}(res)::STL.StdMaps.StdMap{Bool, Int16}
end
*/
extern "C" std::map<bool, int16_t> * std_map_bool_int16_t_copy(
    const std::map<bool, int16_t> * restrict map
) {
    return new std::map<bool, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_int16_t_length(
    const std::map<bool, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, Int16}, key::Any)
    res = ccall(("std_map_bool_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Int16}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_int16_t_haskey(
    const std::map<bool, int16_t> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, Int16}, key::Any)
    res = ccall(("std_map_bool_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{Bool, Int16}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_bool_int16_t_getindex(
    std::map<bool, int16_t> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_bool_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int16}}, Ptr{Int16}, Ptr{Bool}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_int16_t_setindex_(
    std::map<bool, int16_t> * restrict map,
    int16_t const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, Int16}, key::Any)
    res = ccall(("std_map_bool_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int16}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, Int16}
end
*/
extern "C" void std_map_bool_int16_t_delete_(
    std::map<bool, int16_t> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, Int16}, map2::STL.StdMaps.StdMap{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, Int16}}, Ptr{STL.StdMaps.StdMap{Bool, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int16_t_equals(
    const std::map<bool, int16_t> * restrict map1,
    const std::map<bool, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}}, (Ptr{STL.StdMaps.StdMap{Bool, Int16}},), map)
    return StdMapIterator{Bool, Int16}(res)::STL.StdMaps.StdMapIterator{Bool, Int16}
end
*/
extern "C" std::map<bool, int16_t>::const_iterator * std_map_bool_int16_t_cbegin(
    const std::map<bool, int16_t> * restrict map
) {
    return new std::map<bool, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}}, (Ptr{STL.StdMaps.StdMap{Bool, Int16}},), map)
    return StdMapIterator{Bool, Int16}(res)::STL.StdMaps.StdMapIterator{Bool, Int16}
end
*/
extern "C" std::map<bool, int16_t>::const_iterator * std_map_bool_int16_t_cend(
    const std::map<bool, int16_t> * restrict map
) {
    return new std::map<bool, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{Int16})
    res = ccall(("std_map_bool_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int16}}, ())
    return StdMapIterator{Bool, Int16}(res)::STL.StdMaps.StdMapIterator{Bool, Int16}
end
*/
extern "C" std::map<bool, int16_t>::const_iterator * std_map_bool_int16_t_const_iterator_new(
    
) {
    return new std::map<bool, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int16_t_const_iterator_delete(
    std::map<bool, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, Int16}, iter2::STL.StdMaps.StdMapIterator{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}}, Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int16_t_const_iterator_equals(
    const std::map<bool, int16_t>::const_iterator * restrict iter1,
    const std::map<bool, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}},), iter)
    return convert_result(Pair{Bool, Int16}, res)::Pair{Bool, Int16}
end
*/
extern "C" const std::pair<const bool, int16_t> * std_map_bool_int16_t_const_iterator_getindex(
    std::map<bool, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int16_t_const_iterator_inc_(
    std::map<bool, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int16_t_const_iterator_dec_(
    std::map<bool, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, Int16}, map::STL.StdMaps.StdMap{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}}, Ptr{STL.StdMaps.StdMap{Bool, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int16_t_const_iterator_is_cbegin(
    const std::map<bool, int16_t>::const_iterator * restrict iter,
    const std::map<bool, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, Int16}, map::STL.StdMaps.StdMap{Bool, Int16})
    res = ccall(("std_map_bool_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int16}}, Ptr{STL.StdMaps.StdMap{Bool, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int16_t_const_iterator_is_cend(
    const std::map<bool, int16_t>::const_iterator * restrict iter,
    const std::map<bool, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{Int32})
    res = ccall(("std_map_bool_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int32}}, ())
    return StdMap{Bool, Int32}(res)::STL.StdMaps.StdMap{Bool, Int32}
end
*/
extern "C" std::map<bool, int32_t> * std_map_bool_int32_t_new(
    
) {
    return new std::map<bool, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int32_t_delete(
    std::map<bool, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int32}}, (Ptr{STL.StdMaps.StdMap{Bool, Int32}},), map)
    return StdMap{Bool, Int32}(res)::STL.StdMaps.StdMap{Bool, Int32}
end
*/
extern "C" std::map<bool, int32_t> * std_map_bool_int32_t_copy(
    const std::map<bool, int32_t> * restrict map
) {
    return new std::map<bool, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_int32_t_length(
    const std::map<bool, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, Int32}, key::Any)
    res = ccall(("std_map_bool_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Int32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_int32_t_haskey(
    const std::map<bool, int32_t> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, Int32}, key::Any)
    res = ccall(("std_map_bool_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{Bool, Int32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_bool_int32_t_getindex(
    std::map<bool, int32_t> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_bool_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int32}}, Ptr{Int32}, Ptr{Bool}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_int32_t_setindex_(
    std::map<bool, int32_t> * restrict map,
    int32_t const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, Int32}, key::Any)
    res = ccall(("std_map_bool_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, Int32}
end
*/
extern "C" void std_map_bool_int32_t_delete_(
    std::map<bool, int32_t> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, Int32}, map2::STL.StdMaps.StdMap{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, Int32}}, Ptr{STL.StdMaps.StdMap{Bool, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int32_t_equals(
    const std::map<bool, int32_t> * restrict map1,
    const std::map<bool, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}}, (Ptr{STL.StdMaps.StdMap{Bool, Int32}},), map)
    return StdMapIterator{Bool, Int32}(res)::STL.StdMaps.StdMapIterator{Bool, Int32}
end
*/
extern "C" std::map<bool, int32_t>::const_iterator * std_map_bool_int32_t_cbegin(
    const std::map<bool, int32_t> * restrict map
) {
    return new std::map<bool, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}}, (Ptr{STL.StdMaps.StdMap{Bool, Int32}},), map)
    return StdMapIterator{Bool, Int32}(res)::STL.StdMaps.StdMapIterator{Bool, Int32}
end
*/
extern "C" std::map<bool, int32_t>::const_iterator * std_map_bool_int32_t_cend(
    const std::map<bool, int32_t> * restrict map
) {
    return new std::map<bool, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{Int32})
    res = ccall(("std_map_bool_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int32}}, ())
    return StdMapIterator{Bool, Int32}(res)::STL.StdMaps.StdMapIterator{Bool, Int32}
end
*/
extern "C" std::map<bool, int32_t>::const_iterator * std_map_bool_int32_t_const_iterator_new(
    
) {
    return new std::map<bool, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int32_t_const_iterator_delete(
    std::map<bool, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, Int32}, iter2::STL.StdMaps.StdMapIterator{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}}, Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int32_t_const_iterator_equals(
    const std::map<bool, int32_t>::const_iterator * restrict iter1,
    const std::map<bool, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}},), iter)
    return convert_result(Pair{Bool, Int32}, res)::Pair{Bool, Int32}
end
*/
extern "C" const std::pair<const bool, int32_t> * std_map_bool_int32_t_const_iterator_getindex(
    std::map<bool, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int32_t_const_iterator_inc_(
    std::map<bool, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int32_t_const_iterator_dec_(
    std::map<bool, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, Int32}, map::STL.StdMaps.StdMap{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}}, Ptr{STL.StdMaps.StdMap{Bool, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int32_t_const_iterator_is_cbegin(
    const std::map<bool, int32_t>::const_iterator * restrict iter,
    const std::map<bool, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, Int32}, map::STL.StdMaps.StdMap{Bool, Int32})
    res = ccall(("std_map_bool_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int32}}, Ptr{STL.StdMaps.StdMap{Bool, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int32_t_const_iterator_is_cend(
    const std::map<bool, int32_t>::const_iterator * restrict iter,
    const std::map<bool, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{Int64})
    res = ccall(("std_map_bool_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int64}}, ())
    return StdMap{Bool, Int64}(res)::STL.StdMaps.StdMap{Bool, Int64}
end
*/
extern "C" std::map<bool, int64_t> * std_map_bool_int64_t_new(
    
) {
    return new std::map<bool, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int64_t_delete(
    std::map<bool, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int64}}, (Ptr{STL.StdMaps.StdMap{Bool, Int64}},), map)
    return StdMap{Bool, Int64}(res)::STL.StdMaps.StdMap{Bool, Int64}
end
*/
extern "C" std::map<bool, int64_t> * std_map_bool_int64_t_copy(
    const std::map<bool, int64_t> * restrict map
) {
    return new std::map<bool, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_int64_t_length(
    const std::map<bool, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, Int64}, key::Any)
    res = ccall(("std_map_bool_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Int64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_int64_t_haskey(
    const std::map<bool, int64_t> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, Int64}, key::Any)
    res = ccall(("std_map_bool_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{Bool, Int64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_bool_int64_t_getindex(
    std::map<bool, int64_t> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_bool_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int64}}, Ptr{Int64}, Ptr{Bool}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_int64_t_setindex_(
    std::map<bool, int64_t> * restrict map,
    int64_t const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, Int64}, key::Any)
    res = ccall(("std_map_bool_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, Int64}
end
*/
extern "C" void std_map_bool_int64_t_delete_(
    std::map<bool, int64_t> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, Int64}, map2::STL.StdMaps.StdMap{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, Int64}}, Ptr{STL.StdMaps.StdMap{Bool, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int64_t_equals(
    const std::map<bool, int64_t> * restrict map1,
    const std::map<bool, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}}, (Ptr{STL.StdMaps.StdMap{Bool, Int64}},), map)
    return StdMapIterator{Bool, Int64}(res)::STL.StdMaps.StdMapIterator{Bool, Int64}
end
*/
extern "C" std::map<bool, int64_t>::const_iterator * std_map_bool_int64_t_cbegin(
    const std::map<bool, int64_t> * restrict map
) {
    return new std::map<bool, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}}, (Ptr{STL.StdMaps.StdMap{Bool, Int64}},), map)
    return StdMapIterator{Bool, Int64}(res)::STL.StdMaps.StdMapIterator{Bool, Int64}
end
*/
extern "C" std::map<bool, int64_t>::const_iterator * std_map_bool_int64_t_cend(
    const std::map<bool, int64_t> * restrict map
) {
    return new std::map<bool, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{Int64})
    res = ccall(("std_map_bool_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int64}}, ())
    return StdMapIterator{Bool, Int64}(res)::STL.StdMaps.StdMapIterator{Bool, Int64}
end
*/
extern "C" std::map<bool, int64_t>::const_iterator * std_map_bool_int64_t_const_iterator_new(
    
) {
    return new std::map<bool, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int64_t_const_iterator_delete(
    std::map<bool, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, Int64}, iter2::STL.StdMaps.StdMapIterator{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}}, Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int64_t_const_iterator_equals(
    const std::map<bool, int64_t>::const_iterator * restrict iter1,
    const std::map<bool, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}},), iter)
    return convert_result(Pair{Bool, Int64}, res)::Pair{Bool, Int64}
end
*/
extern "C" const std::pair<const bool, int64_t> * std_map_bool_int64_t_const_iterator_getindex(
    std::map<bool, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int64_t_const_iterator_inc_(
    std::map<bool, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int64_t_const_iterator_dec_(
    std::map<bool, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, Int64}, map::STL.StdMaps.StdMap{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}}, Ptr{STL.StdMaps.StdMap{Bool, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int64_t_const_iterator_is_cbegin(
    const std::map<bool, int64_t>::const_iterator * restrict iter,
    const std::map<bool, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, Int64}, map::STL.StdMaps.StdMap{Bool, Int64})
    res = ccall(("std_map_bool_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int64}}, Ptr{STL.StdMaps.StdMap{Bool, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int64_t_const_iterator_is_cend(
    const std::map<bool, int64_t>::const_iterator * restrict iter,
    const std::map<bool, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{Int8})
    res = ccall(("std_map_bool_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int8}}, ())
    return StdMap{Bool, Int8}(res)::STL.StdMaps.StdMap{Bool, Int8}
end
*/
extern "C" std::map<bool, int8_t> * std_map_bool_int8_t_new(
    
) {
    return new std::map<bool, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int8_t_delete(
    std::map<bool, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int8}}, (Ptr{STL.StdMaps.StdMap{Bool, Int8}},), map)
    return StdMap{Bool, Int8}(res)::STL.StdMaps.StdMap{Bool, Int8}
end
*/
extern "C" std::map<bool, int8_t> * std_map_bool_int8_t_copy(
    const std::map<bool, int8_t> * restrict map
) {
    return new std::map<bool, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_int8_t_length(
    const std::map<bool, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, Int8}, key::Any)
    res = ccall(("std_map_bool_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Int8}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_int8_t_haskey(
    const std::map<bool, int8_t> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, Int8}, key::Any)
    res = ccall(("std_map_bool_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{Bool, Int8}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_bool_int8_t_getindex(
    std::map<bool, int8_t> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_bool_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int8}}, Ptr{Int8}, Ptr{Bool}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_int8_t_setindex_(
    std::map<bool, int8_t> * restrict map,
    int8_t const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, Int8}, key::Any)
    res = ccall(("std_map_bool_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Int8}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, Int8}
end
*/
extern "C" void std_map_bool_int8_t_delete_(
    std::map<bool, int8_t> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, Int8}, map2::STL.StdMaps.StdMap{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, Int8}}, Ptr{STL.StdMaps.StdMap{Bool, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int8_t_equals(
    const std::map<bool, int8_t> * restrict map1,
    const std::map<bool, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}}, (Ptr{STL.StdMaps.StdMap{Bool, Int8}},), map)
    return StdMapIterator{Bool, Int8}(res)::STL.StdMaps.StdMapIterator{Bool, Int8}
end
*/
extern "C" std::map<bool, int8_t>::const_iterator * std_map_bool_int8_t_cbegin(
    const std::map<bool, int8_t> * restrict map
) {
    return new std::map<bool, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}}, (Ptr{STL.StdMaps.StdMap{Bool, Int8}},), map)
    return StdMapIterator{Bool, Int8}(res)::STL.StdMaps.StdMapIterator{Bool, Int8}
end
*/
extern "C" std::map<bool, int8_t>::const_iterator * std_map_bool_int8_t_cend(
    const std::map<bool, int8_t> * restrict map
) {
    return new std::map<bool, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{Int8})
    res = ccall(("std_map_bool_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Int8}}, ())
    return StdMapIterator{Bool, Int8}(res)::STL.StdMaps.StdMapIterator{Bool, Int8}
end
*/
extern "C" std::map<bool, int8_t>::const_iterator * std_map_bool_int8_t_const_iterator_new(
    
) {
    return new std::map<bool, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int8_t_const_iterator_delete(
    std::map<bool, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, Int8}, iter2::STL.StdMaps.StdMapIterator{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}}, Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int8_t_const_iterator_equals(
    const std::map<bool, int8_t>::const_iterator * restrict iter1,
    const std::map<bool, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}},), iter)
    return convert_result(Pair{Bool, Int8}, res)::Pair{Bool, Int8}
end
*/
extern "C" const std::pair<const bool, int8_t> * std_map_bool_int8_t_const_iterator_getindex(
    std::map<bool, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int8_t_const_iterator_inc_(
    std::map<bool, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_int8_t_const_iterator_dec_(
    std::map<bool, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, Int8}, map::STL.StdMaps.StdMap{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}}, Ptr{STL.StdMaps.StdMap{Bool, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int8_t_const_iterator_is_cbegin(
    const std::map<bool, int8_t>::const_iterator * restrict iter,
    const std::map<bool, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, Int8}, map::STL.StdMaps.StdMap{Bool, Int8})
    res = ccall(("std_map_bool_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Int8}}, Ptr{STL.StdMaps.StdMap{Bool, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_int8_t_const_iterator_is_cend(
    const std::map<bool, int8_t>::const_iterator * restrict iter,
    const std::map<bool, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_bool_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}, ())
    return StdMap{Bool, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Bool, Ptr{Nothing}}
end
*/
extern "C" std::map<bool, void *> * std_map_bool_void___new(
    
) {
    return new std::map<bool, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_void___delete(
    std::map<bool, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}},), map)
    return StdMap{Bool, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Bool, Ptr{Nothing}}
end
*/
extern "C" std::map<bool, void *> * std_map_bool_void___copy(
    const std::map<bool, void *> * restrict map
) {
    return new std::map<bool, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_void___length(
    const std::map<bool, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_bool_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_void___haskey(
    const std::map<bool, void *> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_bool_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_bool_void___getindex(
    std::map<bool, void *> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_bool_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{Bool}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_void___setindex_(
    std::map<bool, void *> * restrict map,
    void * const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_bool_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}}
end
*/
extern "C" void std_map_bool_void___delete_(
    std::map<bool, void *> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_void___equals(
    const std::map<bool, void *> * restrict map1,
    const std::map<bool, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}},), map)
    return StdMapIterator{Bool, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}
end
*/
extern "C" std::map<bool, void *>::const_iterator * std_map_bool_void___cbegin(
    const std::map<bool, void *> * restrict map
) {
    return new std::map<bool, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}},), map)
    return StdMapIterator{Bool, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}
end
*/
extern "C" std::map<bool, void *>::const_iterator * std_map_bool_void___cend(
    const std::map<bool, void *> * restrict map
) {
    return new std::map<bool, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_bool_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}, ())
    return StdMapIterator{Bool, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}
end
*/
extern "C" std::map<bool, void *>::const_iterator * std_map_bool_void___const_iterator_new(
    
) {
    return new std::map<bool, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_void___const_iterator_delete(
    std::map<bool, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_void___const_iterator_equals(
    const std::map<bool, void *>::const_iterator * restrict iter1,
    const std::map<bool, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}},), iter)
    return convert_result(Pair{Bool, Ptr{Nothing}}, res)::Pair{Bool, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const bool, void *> * std_map_bool_void___const_iterator_getindex(
    std::map<bool, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_void___const_iterator_inc_(
    std::map<bool, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_void___const_iterator_dec_(
    std::map<bool, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_void___const_iterator_is_cbegin(
    const std::map<bool, void *>::const_iterator * restrict iter,
    const std::map<bool, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Bool, Ptr{Nothing}})
    res = ccall(("std_map_bool_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Bool, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_void___const_iterator_is_cend(
    const std::map<bool, void *>::const_iterator * restrict iter,
    const std::map<bool, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{UInt16})
    res = ccall(("std_map_bool_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt16}}, ())
    return StdMap{Bool, UInt16}(res)::STL.StdMaps.StdMap{Bool, UInt16}
end
*/
extern "C" std::map<bool, uint16_t> * std_map_bool_uint16_t_new(
    
) {
    return new std::map<bool, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint16_t_delete(
    std::map<bool, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt16}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}},), map)
    return StdMap{Bool, UInt16}(res)::STL.StdMaps.StdMap{Bool, UInt16}
end
*/
extern "C" std::map<bool, uint16_t> * std_map_bool_uint16_t_copy(
    const std::map<bool, uint16_t> * restrict map
) {
    return new std::map<bool, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_uint16_t_length(
    const std::map<bool, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, UInt16}, key::Any)
    res = ccall(("std_map_bool_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_uint16_t_haskey(
    const std::map<bool, uint16_t> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, UInt16}, key::Any)
    res = ccall(("std_map_bool_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_bool_uint16_t_getindex(
    std::map<bool, uint16_t> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_bool_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}}, Ptr{UInt16}, Ptr{Bool}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint16_t_setindex_(
    std::map<bool, uint16_t> * restrict map,
    uint16_t const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, UInt16}, key::Any)
    res = ccall(("std_map_bool_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, UInt16}
end
*/
extern "C" void std_map_bool_uint16_t_delete_(
    std::map<bool, uint16_t> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, UInt16}, map2::STL.StdMaps.StdMap{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}}, Ptr{STL.StdMaps.StdMap{Bool, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint16_t_equals(
    const std::map<bool, uint16_t> * restrict map1,
    const std::map<bool, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}},), map)
    return StdMapIterator{Bool, UInt16}(res)::STL.StdMaps.StdMapIterator{Bool, UInt16}
end
*/
extern "C" std::map<bool, uint16_t>::const_iterator * std_map_bool_uint16_t_cbegin(
    const std::map<bool, uint16_t> * restrict map
) {
    return new std::map<bool, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt16}},), map)
    return StdMapIterator{Bool, UInt16}(res)::STL.StdMaps.StdMapIterator{Bool, UInt16}
end
*/
extern "C" std::map<bool, uint16_t>::const_iterator * std_map_bool_uint16_t_cend(
    const std::map<bool, uint16_t> * restrict map
) {
    return new std::map<bool, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{UInt16})
    res = ccall(("std_map_bool_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt16}}, ())
    return StdMapIterator{Bool, UInt16}(res)::STL.StdMaps.StdMapIterator{Bool, UInt16}
end
*/
extern "C" std::map<bool, uint16_t>::const_iterator * std_map_bool_uint16_t_const_iterator_new(
    
) {
    return new std::map<bool, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint16_t_const_iterator_delete(
    std::map<bool, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, UInt16}, iter2::STL.StdMaps.StdMapIterator{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint16_t_const_iterator_equals(
    const std::map<bool, uint16_t>::const_iterator * restrict iter1,
    const std::map<bool, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}},), iter)
    return convert_result(Pair{Bool, UInt16}, res)::Pair{Bool, UInt16}
end
*/
extern "C" const std::pair<const bool, uint16_t> * std_map_bool_uint16_t_const_iterator_getindex(
    std::map<bool, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint16_t_const_iterator_inc_(
    std::map<bool, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint16_t_const_iterator_dec_(
    std::map<bool, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, UInt16}, map::STL.StdMaps.StdMap{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}}, Ptr{STL.StdMaps.StdMap{Bool, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint16_t_const_iterator_is_cbegin(
    const std::map<bool, uint16_t>::const_iterator * restrict iter,
    const std::map<bool, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, UInt16}, map::STL.StdMaps.StdMap{Bool, UInt16})
    res = ccall(("std_map_bool_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt16}}, Ptr{STL.StdMaps.StdMap{Bool, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint16_t_const_iterator_is_cend(
    const std::map<bool, uint16_t>::const_iterator * restrict iter,
    const std::map<bool, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{UInt32})
    res = ccall(("std_map_bool_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt32}}, ())
    return StdMap{Bool, UInt32}(res)::STL.StdMaps.StdMap{Bool, UInt32}
end
*/
extern "C" std::map<bool, uint32_t> * std_map_bool_uint32_t_new(
    
) {
    return new std::map<bool, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint32_t_delete(
    std::map<bool, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt32}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}},), map)
    return StdMap{Bool, UInt32}(res)::STL.StdMaps.StdMap{Bool, UInt32}
end
*/
extern "C" std::map<bool, uint32_t> * std_map_bool_uint32_t_copy(
    const std::map<bool, uint32_t> * restrict map
) {
    return new std::map<bool, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_uint32_t_length(
    const std::map<bool, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, UInt32}, key::Any)
    res = ccall(("std_map_bool_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_uint32_t_haskey(
    const std::map<bool, uint32_t> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, UInt32}, key::Any)
    res = ccall(("std_map_bool_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_bool_uint32_t_getindex(
    std::map<bool, uint32_t> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_bool_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}}, Ptr{UInt32}, Ptr{Bool}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint32_t_setindex_(
    std::map<bool, uint32_t> * restrict map,
    uint32_t const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, UInt32}, key::Any)
    res = ccall(("std_map_bool_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, UInt32}
end
*/
extern "C" void std_map_bool_uint32_t_delete_(
    std::map<bool, uint32_t> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, UInt32}, map2::STL.StdMaps.StdMap{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}}, Ptr{STL.StdMaps.StdMap{Bool, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint32_t_equals(
    const std::map<bool, uint32_t> * restrict map1,
    const std::map<bool, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}},), map)
    return StdMapIterator{Bool, UInt32}(res)::STL.StdMaps.StdMapIterator{Bool, UInt32}
end
*/
extern "C" std::map<bool, uint32_t>::const_iterator * std_map_bool_uint32_t_cbegin(
    const std::map<bool, uint32_t> * restrict map
) {
    return new std::map<bool, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt32}},), map)
    return StdMapIterator{Bool, UInt32}(res)::STL.StdMaps.StdMapIterator{Bool, UInt32}
end
*/
extern "C" std::map<bool, uint32_t>::const_iterator * std_map_bool_uint32_t_cend(
    const std::map<bool, uint32_t> * restrict map
) {
    return new std::map<bool, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{UInt32})
    res = ccall(("std_map_bool_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt32}}, ())
    return StdMapIterator{Bool, UInt32}(res)::STL.StdMaps.StdMapIterator{Bool, UInt32}
end
*/
extern "C" std::map<bool, uint32_t>::const_iterator * std_map_bool_uint32_t_const_iterator_new(
    
) {
    return new std::map<bool, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint32_t_const_iterator_delete(
    std::map<bool, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, UInt32}, iter2::STL.StdMaps.StdMapIterator{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint32_t_const_iterator_equals(
    const std::map<bool, uint32_t>::const_iterator * restrict iter1,
    const std::map<bool, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}},), iter)
    return convert_result(Pair{Bool, UInt32}, res)::Pair{Bool, UInt32}
end
*/
extern "C" const std::pair<const bool, uint32_t> * std_map_bool_uint32_t_const_iterator_getindex(
    std::map<bool, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint32_t_const_iterator_inc_(
    std::map<bool, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint32_t_const_iterator_dec_(
    std::map<bool, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, UInt32}, map::STL.StdMaps.StdMap{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}}, Ptr{STL.StdMaps.StdMap{Bool, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint32_t_const_iterator_is_cbegin(
    const std::map<bool, uint32_t>::const_iterator * restrict iter,
    const std::map<bool, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, UInt32}, map::STL.StdMaps.StdMap{Bool, UInt32})
    res = ccall(("std_map_bool_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt32}}, Ptr{STL.StdMaps.StdMap{Bool, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint32_t_const_iterator_is_cend(
    const std::map<bool, uint32_t>::const_iterator * restrict iter,
    const std::map<bool, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{UInt64})
    res = ccall(("std_map_bool_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt64}}, ())
    return StdMap{Bool, UInt64}(res)::STL.StdMaps.StdMap{Bool, UInt64}
end
*/
extern "C" std::map<bool, uint64_t> * std_map_bool_uint64_t_new(
    
) {
    return new std::map<bool, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint64_t_delete(
    std::map<bool, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt64}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}},), map)
    return StdMap{Bool, UInt64}(res)::STL.StdMaps.StdMap{Bool, UInt64}
end
*/
extern "C" std::map<bool, uint64_t> * std_map_bool_uint64_t_copy(
    const std::map<bool, uint64_t> * restrict map
) {
    return new std::map<bool, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_uint64_t_length(
    const std::map<bool, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, UInt64}, key::Any)
    res = ccall(("std_map_bool_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_uint64_t_haskey(
    const std::map<bool, uint64_t> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, UInt64}, key::Any)
    res = ccall(("std_map_bool_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_bool_uint64_t_getindex(
    std::map<bool, uint64_t> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_bool_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}}, Ptr{UInt64}, Ptr{Bool}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint64_t_setindex_(
    std::map<bool, uint64_t> * restrict map,
    uint64_t const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, UInt64}, key::Any)
    res = ccall(("std_map_bool_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, UInt64}
end
*/
extern "C" void std_map_bool_uint64_t_delete_(
    std::map<bool, uint64_t> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, UInt64}, map2::STL.StdMaps.StdMap{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}}, Ptr{STL.StdMaps.StdMap{Bool, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint64_t_equals(
    const std::map<bool, uint64_t> * restrict map1,
    const std::map<bool, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}},), map)
    return StdMapIterator{Bool, UInt64}(res)::STL.StdMaps.StdMapIterator{Bool, UInt64}
end
*/
extern "C" std::map<bool, uint64_t>::const_iterator * std_map_bool_uint64_t_cbegin(
    const std::map<bool, uint64_t> * restrict map
) {
    return new std::map<bool, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt64}},), map)
    return StdMapIterator{Bool, UInt64}(res)::STL.StdMaps.StdMapIterator{Bool, UInt64}
end
*/
extern "C" std::map<bool, uint64_t>::const_iterator * std_map_bool_uint64_t_cend(
    const std::map<bool, uint64_t> * restrict map
) {
    return new std::map<bool, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{UInt64})
    res = ccall(("std_map_bool_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt64}}, ())
    return StdMapIterator{Bool, UInt64}(res)::STL.StdMaps.StdMapIterator{Bool, UInt64}
end
*/
extern "C" std::map<bool, uint64_t>::const_iterator * std_map_bool_uint64_t_const_iterator_new(
    
) {
    return new std::map<bool, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint64_t_const_iterator_delete(
    std::map<bool, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, UInt64}, iter2::STL.StdMaps.StdMapIterator{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint64_t_const_iterator_equals(
    const std::map<bool, uint64_t>::const_iterator * restrict iter1,
    const std::map<bool, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}},), iter)
    return convert_result(Pair{Bool, UInt64}, res)::Pair{Bool, UInt64}
end
*/
extern "C" const std::pair<const bool, uint64_t> * std_map_bool_uint64_t_const_iterator_getindex(
    std::map<bool, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint64_t_const_iterator_inc_(
    std::map<bool, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint64_t_const_iterator_dec_(
    std::map<bool, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, UInt64}, map::STL.StdMaps.StdMap{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}}, Ptr{STL.StdMaps.StdMap{Bool, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint64_t_const_iterator_is_cbegin(
    const std::map<bool, uint64_t>::const_iterator * restrict iter,
    const std::map<bool, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, UInt64}, map::STL.StdMaps.StdMap{Bool, UInt64})
    res = ccall(("std_map_bool_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt64}}, Ptr{STL.StdMaps.StdMap{Bool, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint64_t_const_iterator_is_cend(
    const std::map<bool, uint64_t>::const_iterator * restrict iter,
    const std::map<bool, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Bool}, type::Type{UInt8})
    res = ccall(("std_map_bool_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt8}}, ())
    return StdMap{Bool, UInt8}(res)::STL.StdMaps.StdMap{Bool, UInt8}
end
*/
extern "C" std::map<bool, uint8_t> * std_map_bool_uint8_t_new(
    
) {
    return new std::map<bool, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint8_t_delete(
    std::map<bool, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt8}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}},), map)
    return StdMap{Bool, UInt8}(res)::STL.StdMaps.StdMap{Bool, UInt8}
end
*/
extern "C" std::map<bool, uint8_t> * std_map_bool_uint8_t_copy(
    const std::map<bool, uint8_t> * restrict map
) {
    return new std::map<bool, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_bool_uint8_t_length(
    const std::map<bool, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Bool, UInt8}, key::Any)
    res = ccall(("std_map_bool_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_bool_uint8_t_haskey(
    const std::map<bool, uint8_t> * restrict map,
    bool const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Bool, UInt8}, key::Any)
    res = ccall(("std_map_bool_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_bool_uint8_t_getindex(
    std::map<bool, uint8_t> * restrict map,
    bool const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Bool, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_bool_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}}, Ptr{UInt8}, Ptr{Bool}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{Bool}, convert(Bool, key)))
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint8_t_setindex_(
    std::map<bool, uint8_t> * restrict map,
    uint8_t const * elt,
    bool const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Bool, UInt8}, key::Any)
    res = ccall(("std_map_bool_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}}, Ptr{Bool}), map, convert_arg(Ptr{Bool}, convert(Bool, key)))
    return map::STL.StdMaps.StdMap{Bool, UInt8}
end
*/
extern "C" void std_map_bool_uint8_t_delete_(
    std::map<bool, uint8_t> * restrict map,
    bool const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Bool, UInt8}, map2::STL.StdMaps.StdMap{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}}, Ptr{STL.StdMaps.StdMap{Bool, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint8_t_equals(
    const std::map<bool, uint8_t> * restrict map1,
    const std::map<bool, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}},), map)
    return StdMapIterator{Bool, UInt8}(res)::STL.StdMaps.StdMapIterator{Bool, UInt8}
end
*/
extern "C" std::map<bool, uint8_t>::const_iterator * std_map_bool_uint8_t_cbegin(
    const std::map<bool, uint8_t> * restrict map
) {
    return new std::map<bool, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}}, (Ptr{STL.StdMaps.StdMap{Bool, UInt8}},), map)
    return StdMapIterator{Bool, UInt8}(res)::STL.StdMaps.StdMapIterator{Bool, UInt8}
end
*/
extern "C" std::map<bool, uint8_t>::const_iterator * std_map_bool_uint8_t_cend(
    const std::map<bool, uint8_t> * restrict map
) {
    return new std::map<bool, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Bool}, type::Type{UInt8})
    res = ccall(("std_map_bool_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Bool, UInt8}}, ())
    return StdMapIterator{Bool, UInt8}(res)::STL.StdMaps.StdMapIterator{Bool, UInt8}
end
*/
extern "C" std::map<bool, uint8_t>::const_iterator * std_map_bool_uint8_t_const_iterator_new(
    
) {
    return new std::map<bool, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint8_t_const_iterator_delete(
    std::map<bool, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Bool, UInt8}, iter2::STL.StdMaps.StdMapIterator{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint8_t_const_iterator_equals(
    const std::map<bool, uint8_t>::const_iterator * restrict iter1,
    const std::map<bool, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Bool, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}},), iter)
    return convert_result(Pair{Bool, UInt8}, res)::Pair{Bool, UInt8}
end
*/
extern "C" const std::pair<const bool, uint8_t> * std_map_bool_uint8_t_const_iterator_getindex(
    std::map<bool, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint8_t_const_iterator_inc_(
    std::map<bool, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_bool_uint8_t_const_iterator_dec_(
    std::map<bool, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Bool, UInt8}, map::STL.StdMaps.StdMap{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}}, Ptr{STL.StdMaps.StdMap{Bool, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint8_t_const_iterator_is_cbegin(
    const std::map<bool, uint8_t>::const_iterator * restrict iter,
    const std::map<bool, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Bool, UInt8}, map::STL.StdMaps.StdMap{Bool, UInt8})
    res = ccall(("std_map_bool_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Bool, UInt8}}, Ptr{STL.StdMaps.StdMap{Bool, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_bool_uint8_t_const_iterator_is_cend(
    const std::map<bool, uint8_t>::const_iterator * restrict iter,
    const std::map<bool, uint8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{Bool})
    res = ccall(("std_map_int16_t_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Bool}}, ())
    return StdMap{Int16, Bool}(res)::STL.StdMaps.StdMap{Int16, Bool}
end
*/
extern "C" std::map<int16_t, bool> * std_map_int16_t_bool_new(
    
) {
    return new std::map<int16_t, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_bool_delete(
    std::map<int16_t, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Bool}}, (Ptr{STL.StdMaps.StdMap{Int16, Bool}},), map)
    return StdMap{Int16, Bool}(res)::STL.StdMaps.StdMap{Int16, Bool}
end
*/
extern "C" std::map<int16_t, bool> * std_map_int16_t_bool_copy(
    const std::map<int16_t, bool> * restrict map
) {
    return new std::map<int16_t, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_bool_length(
    const std::map<int16_t, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, Bool}, key::Any)
    res = ccall(("std_map_int16_t_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Bool}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_bool_haskey(
    const std::map<int16_t, bool> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, Bool}, key::Any)
    res = ccall(("std_map_int16_t_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{Int16, Bool}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_int16_t_bool_getindex(
    std::map<int16_t, bool> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Bool}}, Ptr{Bool}, Ptr{Int16}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_bool_setindex_(
    std::map<int16_t, bool> * restrict map,
    bool const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, Bool}, key::Any)
    res = ccall(("std_map_int16_t_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Bool}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, Bool}
end
*/
extern "C" void std_map_int16_t_bool_delete_(
    std::map<int16_t, bool> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, Bool}, map2::STL.StdMaps.StdMap{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, Bool}}, Ptr{STL.StdMaps.StdMap{Int16, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_bool_equals(
    const std::map<int16_t, bool> * restrict map1,
    const std::map<int16_t, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}}, (Ptr{STL.StdMaps.StdMap{Int16, Bool}},), map)
    return StdMapIterator{Int16, Bool}(res)::STL.StdMaps.StdMapIterator{Int16, Bool}
end
*/
extern "C" std::map<int16_t, bool>::const_iterator * std_map_int16_t_bool_cbegin(
    const std::map<int16_t, bool> * restrict map
) {
    return new std::map<int16_t, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}}, (Ptr{STL.StdMaps.StdMap{Int16, Bool}},), map)
    return StdMapIterator{Int16, Bool}(res)::STL.StdMaps.StdMapIterator{Int16, Bool}
end
*/
extern "C" std::map<int16_t, bool>::const_iterator * std_map_int16_t_bool_cend(
    const std::map<int16_t, bool> * restrict map
) {
    return new std::map<int16_t, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{Bool})
    res = ccall(("std_map_int16_t_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Bool}}, ())
    return StdMapIterator{Int16, Bool}(res)::STL.StdMaps.StdMapIterator{Int16, Bool}
end
*/
extern "C" std::map<int16_t, bool>::const_iterator * std_map_int16_t_bool_const_iterator_new(
    
) {
    return new std::map<int16_t, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_bool_const_iterator_delete(
    std::map<int16_t, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, Bool}, iter2::STL.StdMaps.StdMapIterator{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}}, Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_bool_const_iterator_equals(
    const std::map<int16_t, bool>::const_iterator * restrict iter1,
    const std::map<int16_t, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}},), iter)
    return convert_result(Pair{Int16, Bool}, res)::Pair{Int16, Bool}
end
*/
extern "C" const std::pair<const int16_t, bool> * std_map_int16_t_bool_const_iterator_getindex(
    std::map<int16_t, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_bool_const_iterator_inc_(
    std::map<int16_t, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_bool_const_iterator_dec_(
    std::map<int16_t, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, Bool}, map::STL.StdMaps.StdMap{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}}, Ptr{STL.StdMaps.StdMap{Int16, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_bool_const_iterator_is_cbegin(
    const std::map<int16_t, bool>::const_iterator * restrict iter,
    const std::map<int16_t, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, Bool}, map::STL.StdMaps.StdMap{Int16, Bool})
    res = ccall(("std_map_int16_t_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Bool}}, Ptr{STL.StdMaps.StdMap{Int16, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_bool_const_iterator_is_cend(
    const std::map<int16_t, bool>::const_iterator * restrict iter,
    const std::map<int16_t, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{Float32})
    res = ccall(("std_map_int16_t_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Float32}}, ())
    return StdMap{Int16, Float32}(res)::STL.StdMaps.StdMap{Int16, Float32}
end
*/
extern "C" std::map<int16_t, float> * std_map_int16_t_float_new(
    
) {
    return new std::map<int16_t, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, Float32})
    res = ccall(("std_map_int16_t_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_float_delete(
    std::map<int16_t, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, Float32})
    res = ccall(("std_map_int16_t_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Float32}}, (Ptr{STL.StdMaps.StdMap{Int16, Float32}},), map)
    return StdMap{Int16, Float32}(res)::STL.StdMaps.StdMap{Int16, Float32}
end
*/
extern "C" std::map<int16_t, float> * std_map_int16_t_float_copy(
    const std::map<int16_t, float> * restrict map
) {
    return new std::map<int16_t, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, Float32})
    res = ccall(("std_map_int16_t_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_float_length(
    const std::map<int16_t, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, Float32}, key::Any)
    res = ccall(("std_map_int16_t_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Float32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_float_haskey(
    const std::map<int16_t, float> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, Float32}, key::Any)
    res = ccall(("std_map_int16_t_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{Int16, Float32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_int16_t_float_getindex(
    std::map<int16_t, float> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Float32}}, Ptr{Float32}, Ptr{Int16}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_float_setindex_(
    std::map<int16_t, float> * restrict map,
    float const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, Float32}, key::Any)
    res = ccall(("std_map_int16_t_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Float32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, Float32}
end
*/
extern "C" void std_map_int16_t_float_delete_(
    std::map<int16_t, float> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, Float32}, map2::STL.StdMaps.StdMap{Int16, Float32})
    res = ccall(("std_map_int16_t_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, Float32}}, Ptr{STL.StdMaps.StdMap{Int16, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_float_equals(
    const std::map<int16_t, float> * restrict map1,
    const std::map<int16_t, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, Float32})
    res = ccall(("std_map_int16_t_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}}, (Ptr{STL.StdMaps.StdMap{Int16, Float32}},), map)
    return StdMapIterator{Int16, Float32}(res)::STL.StdMaps.StdMapIterator{Int16, Float32}
end
*/
extern "C" std::map<int16_t, float>::const_iterator * std_map_int16_t_float_cbegin(
    const std::map<int16_t, float> * restrict map
) {
    return new std::map<int16_t, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, Float32})
    res = ccall(("std_map_int16_t_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}}, (Ptr{STL.StdMaps.StdMap{Int16, Float32}},), map)
    return StdMapIterator{Int16, Float32}(res)::STL.StdMaps.StdMapIterator{Int16, Float32}
end
*/
extern "C" std::map<int16_t, float>::const_iterator * std_map_int16_t_float_cend(
    const std::map<int16_t, float> * restrict map
) {
    return new std::map<int16_t, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{Float32})
    res = ccall(("std_map_int16_t_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Float32}}, ())
    return StdMapIterator{Int16, Float32}(res)::STL.StdMaps.StdMapIterator{Int16, Float32}
end
*/
extern "C" std::map<int16_t, float>::const_iterator * std_map_int16_t_float_const_iterator_new(
    
) {
    return new std::map<int16_t, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, Float32})
    res = ccall(("std_map_int16_t_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_float_const_iterator_delete(
    std::map<int16_t, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, Float32}, iter2::STL.StdMaps.StdMapIterator{Int16, Float32})
    res = ccall(("std_map_int16_t_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}}, Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_float_const_iterator_equals(
    const std::map<int16_t, float>::const_iterator * restrict iter1,
    const std::map<int16_t, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, Float32})
    res = ccall(("std_map_int16_t_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}},), iter)
    return convert_result(Pair{Int16, Float32}, res)::Pair{Int16, Float32}
end
*/
extern "C" const std::pair<const int16_t, float> * std_map_int16_t_float_const_iterator_getindex(
    std::map<int16_t, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, Float32})
    res = ccall(("std_map_int16_t_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_float_const_iterator_inc_(
    std::map<int16_t, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, Float32})
    res = ccall(("std_map_int16_t_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_float_const_iterator_dec_(
    std::map<int16_t, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, Float32}, map::STL.StdMaps.StdMap{Int16, Float32})
    res = ccall(("std_map_int16_t_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}}, Ptr{STL.StdMaps.StdMap{Int16, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_float_const_iterator_is_cbegin(
    const std::map<int16_t, float>::const_iterator * restrict iter,
    const std::map<int16_t, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, Float32}, map::STL.StdMaps.StdMap{Int16, Float32})
    res = ccall(("std_map_int16_t_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float32}}, Ptr{STL.StdMaps.StdMap{Int16, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_float_const_iterator_is_cend(
    const std::map<int16_t, float>::const_iterator * restrict iter,
    const std::map<int16_t, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{Float64})
    res = ccall(("std_map_int16_t_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Float64}}, ())
    return StdMap{Int16, Float64}(res)::STL.StdMaps.StdMap{Int16, Float64}
end
*/
extern "C" std::map<int16_t, double> * std_map_int16_t_double_new(
    
) {
    return new std::map<int16_t, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, Float64})
    res = ccall(("std_map_int16_t_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_double_delete(
    std::map<int16_t, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, Float64})
    res = ccall(("std_map_int16_t_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Float64}}, (Ptr{STL.StdMaps.StdMap{Int16, Float64}},), map)
    return StdMap{Int16, Float64}(res)::STL.StdMaps.StdMap{Int16, Float64}
end
*/
extern "C" std::map<int16_t, double> * std_map_int16_t_double_copy(
    const std::map<int16_t, double> * restrict map
) {
    return new std::map<int16_t, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, Float64})
    res = ccall(("std_map_int16_t_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_double_length(
    const std::map<int16_t, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, Float64}, key::Any)
    res = ccall(("std_map_int16_t_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Float64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_double_haskey(
    const std::map<int16_t, double> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, Float64}, key::Any)
    res = ccall(("std_map_int16_t_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{Int16, Float64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_int16_t_double_getindex(
    std::map<int16_t, double> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Float64}}, Ptr{Float64}, Ptr{Int16}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_double_setindex_(
    std::map<int16_t, double> * restrict map,
    double const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, Float64}, key::Any)
    res = ccall(("std_map_int16_t_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Float64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, Float64}
end
*/
extern "C" void std_map_int16_t_double_delete_(
    std::map<int16_t, double> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, Float64}, map2::STL.StdMaps.StdMap{Int16, Float64})
    res = ccall(("std_map_int16_t_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, Float64}}, Ptr{STL.StdMaps.StdMap{Int16, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_double_equals(
    const std::map<int16_t, double> * restrict map1,
    const std::map<int16_t, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, Float64})
    res = ccall(("std_map_int16_t_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}}, (Ptr{STL.StdMaps.StdMap{Int16, Float64}},), map)
    return StdMapIterator{Int16, Float64}(res)::STL.StdMaps.StdMapIterator{Int16, Float64}
end
*/
extern "C" std::map<int16_t, double>::const_iterator * std_map_int16_t_double_cbegin(
    const std::map<int16_t, double> * restrict map
) {
    return new std::map<int16_t, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, Float64})
    res = ccall(("std_map_int16_t_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}}, (Ptr{STL.StdMaps.StdMap{Int16, Float64}},), map)
    return StdMapIterator{Int16, Float64}(res)::STL.StdMaps.StdMapIterator{Int16, Float64}
end
*/
extern "C" std::map<int16_t, double>::const_iterator * std_map_int16_t_double_cend(
    const std::map<int16_t, double> * restrict map
) {
    return new std::map<int16_t, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{Float64})
    res = ccall(("std_map_int16_t_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Float64}}, ())
    return StdMapIterator{Int16, Float64}(res)::STL.StdMaps.StdMapIterator{Int16, Float64}
end
*/
extern "C" std::map<int16_t, double>::const_iterator * std_map_int16_t_double_const_iterator_new(
    
) {
    return new std::map<int16_t, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, Float64})
    res = ccall(("std_map_int16_t_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_double_const_iterator_delete(
    std::map<int16_t, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, Float64}, iter2::STL.StdMaps.StdMapIterator{Int16, Float64})
    res = ccall(("std_map_int16_t_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}}, Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_double_const_iterator_equals(
    const std::map<int16_t, double>::const_iterator * restrict iter1,
    const std::map<int16_t, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, Float64})
    res = ccall(("std_map_int16_t_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}},), iter)
    return convert_result(Pair{Int16, Float64}, res)::Pair{Int16, Float64}
end
*/
extern "C" const std::pair<const int16_t, double> * std_map_int16_t_double_const_iterator_getindex(
    std::map<int16_t, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, Float64})
    res = ccall(("std_map_int16_t_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_double_const_iterator_inc_(
    std::map<int16_t, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, Float64})
    res = ccall(("std_map_int16_t_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_double_const_iterator_dec_(
    std::map<int16_t, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, Float64}, map::STL.StdMaps.StdMap{Int16, Float64})
    res = ccall(("std_map_int16_t_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}}, Ptr{STL.StdMaps.StdMap{Int16, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_double_const_iterator_is_cbegin(
    const std::map<int16_t, double>::const_iterator * restrict iter,
    const std::map<int16_t, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, Float64}, map::STL.StdMaps.StdMap{Int16, Float64})
    res = ccall(("std_map_int16_t_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Float64}}, Ptr{STL.StdMaps.StdMap{Int16, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_double_const_iterator_is_cend(
    const std::map<int16_t, double>::const_iterator * restrict iter,
    const std::map<int16_t, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{Int16})
    res = ccall(("std_map_int16_t_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int16}}, ())
    return StdMap{Int16, Int16}(res)::STL.StdMaps.StdMap{Int16, Int16}
end
*/
extern "C" std::map<int16_t, int16_t> * std_map_int16_t_int16_t_new(
    
) {
    return new std::map<int16_t, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int16_t_delete(
    std::map<int16_t, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int16}}, (Ptr{STL.StdMaps.StdMap{Int16, Int16}},), map)
    return StdMap{Int16, Int16}(res)::STL.StdMaps.StdMap{Int16, Int16}
end
*/
extern "C" std::map<int16_t, int16_t> * std_map_int16_t_int16_t_copy(
    const std::map<int16_t, int16_t> * restrict map
) {
    return new std::map<int16_t, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_int16_t_length(
    const std::map<int16_t, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, Int16}, key::Any)
    res = ccall(("std_map_int16_t_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Int16}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_int16_t_haskey(
    const std::map<int16_t, int16_t> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, Int16}, key::Any)
    res = ccall(("std_map_int16_t_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{Int16, Int16}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_int16_t_int16_t_getindex(
    std::map<int16_t, int16_t> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int16}}, Ptr{Int16}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int16_t_setindex_(
    std::map<int16_t, int16_t> * restrict map,
    int16_t const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, Int16}, key::Any)
    res = ccall(("std_map_int16_t_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int16}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, Int16}
end
*/
extern "C" void std_map_int16_t_int16_t_delete_(
    std::map<int16_t, int16_t> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, Int16}, map2::STL.StdMaps.StdMap{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, Int16}}, Ptr{STL.StdMaps.StdMap{Int16, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int16_t_equals(
    const std::map<int16_t, int16_t> * restrict map1,
    const std::map<int16_t, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}}, (Ptr{STL.StdMaps.StdMap{Int16, Int16}},), map)
    return StdMapIterator{Int16, Int16}(res)::STL.StdMaps.StdMapIterator{Int16, Int16}
end
*/
extern "C" std::map<int16_t, int16_t>::const_iterator * std_map_int16_t_int16_t_cbegin(
    const std::map<int16_t, int16_t> * restrict map
) {
    return new std::map<int16_t, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}}, (Ptr{STL.StdMaps.StdMap{Int16, Int16}},), map)
    return StdMapIterator{Int16, Int16}(res)::STL.StdMaps.StdMapIterator{Int16, Int16}
end
*/
extern "C" std::map<int16_t, int16_t>::const_iterator * std_map_int16_t_int16_t_cend(
    const std::map<int16_t, int16_t> * restrict map
) {
    return new std::map<int16_t, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{Int16})
    res = ccall(("std_map_int16_t_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int16}}, ())
    return StdMapIterator{Int16, Int16}(res)::STL.StdMaps.StdMapIterator{Int16, Int16}
end
*/
extern "C" std::map<int16_t, int16_t>::const_iterator * std_map_int16_t_int16_t_const_iterator_new(
    
) {
    return new std::map<int16_t, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int16_t_const_iterator_delete(
    std::map<int16_t, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, Int16}, iter2::STL.StdMaps.StdMapIterator{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}}, Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int16_t_const_iterator_equals(
    const std::map<int16_t, int16_t>::const_iterator * restrict iter1,
    const std::map<int16_t, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}},), iter)
    return convert_result(Pair{Int16, Int16}, res)::Pair{Int16, Int16}
end
*/
extern "C" const std::pair<const int16_t, int16_t> * std_map_int16_t_int16_t_const_iterator_getindex(
    std::map<int16_t, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int16_t_const_iterator_inc_(
    std::map<int16_t, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int16_t_const_iterator_dec_(
    std::map<int16_t, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, Int16}, map::STL.StdMaps.StdMap{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}}, Ptr{STL.StdMaps.StdMap{Int16, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int16_t_const_iterator_is_cbegin(
    const std::map<int16_t, int16_t>::const_iterator * restrict iter,
    const std::map<int16_t, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, Int16}, map::STL.StdMaps.StdMap{Int16, Int16})
    res = ccall(("std_map_int16_t_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int16}}, Ptr{STL.StdMaps.StdMap{Int16, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int16_t_const_iterator_is_cend(
    const std::map<int16_t, int16_t>::const_iterator * restrict iter,
    const std::map<int16_t, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{Int32})
    res = ccall(("std_map_int16_t_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int32}}, ())
    return StdMap{Int16, Int32}(res)::STL.StdMaps.StdMap{Int16, Int32}
end
*/
extern "C" std::map<int16_t, int32_t> * std_map_int16_t_int32_t_new(
    
) {
    return new std::map<int16_t, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int32_t_delete(
    std::map<int16_t, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int32}}, (Ptr{STL.StdMaps.StdMap{Int16, Int32}},), map)
    return StdMap{Int16, Int32}(res)::STL.StdMaps.StdMap{Int16, Int32}
end
*/
extern "C" std::map<int16_t, int32_t> * std_map_int16_t_int32_t_copy(
    const std::map<int16_t, int32_t> * restrict map
) {
    return new std::map<int16_t, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_int32_t_length(
    const std::map<int16_t, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, Int32}, key::Any)
    res = ccall(("std_map_int16_t_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Int32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_int32_t_haskey(
    const std::map<int16_t, int32_t> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, Int32}, key::Any)
    res = ccall(("std_map_int16_t_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{Int16, Int32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_int16_t_int32_t_getindex(
    std::map<int16_t, int32_t> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int32}}, Ptr{Int32}, Ptr{Int16}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int32_t_setindex_(
    std::map<int16_t, int32_t> * restrict map,
    int32_t const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, Int32}, key::Any)
    res = ccall(("std_map_int16_t_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, Int32}
end
*/
extern "C" void std_map_int16_t_int32_t_delete_(
    std::map<int16_t, int32_t> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, Int32}, map2::STL.StdMaps.StdMap{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, Int32}}, Ptr{STL.StdMaps.StdMap{Int16, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int32_t_equals(
    const std::map<int16_t, int32_t> * restrict map1,
    const std::map<int16_t, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}}, (Ptr{STL.StdMaps.StdMap{Int16, Int32}},), map)
    return StdMapIterator{Int16, Int32}(res)::STL.StdMaps.StdMapIterator{Int16, Int32}
end
*/
extern "C" std::map<int16_t, int32_t>::const_iterator * std_map_int16_t_int32_t_cbegin(
    const std::map<int16_t, int32_t> * restrict map
) {
    return new std::map<int16_t, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}}, (Ptr{STL.StdMaps.StdMap{Int16, Int32}},), map)
    return StdMapIterator{Int16, Int32}(res)::STL.StdMaps.StdMapIterator{Int16, Int32}
end
*/
extern "C" std::map<int16_t, int32_t>::const_iterator * std_map_int16_t_int32_t_cend(
    const std::map<int16_t, int32_t> * restrict map
) {
    return new std::map<int16_t, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{Int32})
    res = ccall(("std_map_int16_t_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int32}}, ())
    return StdMapIterator{Int16, Int32}(res)::STL.StdMaps.StdMapIterator{Int16, Int32}
end
*/
extern "C" std::map<int16_t, int32_t>::const_iterator * std_map_int16_t_int32_t_const_iterator_new(
    
) {
    return new std::map<int16_t, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int32_t_const_iterator_delete(
    std::map<int16_t, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, Int32}, iter2::STL.StdMaps.StdMapIterator{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}}, Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int32_t_const_iterator_equals(
    const std::map<int16_t, int32_t>::const_iterator * restrict iter1,
    const std::map<int16_t, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}},), iter)
    return convert_result(Pair{Int16, Int32}, res)::Pair{Int16, Int32}
end
*/
extern "C" const std::pair<const int16_t, int32_t> * std_map_int16_t_int32_t_const_iterator_getindex(
    std::map<int16_t, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int32_t_const_iterator_inc_(
    std::map<int16_t, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int32_t_const_iterator_dec_(
    std::map<int16_t, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, Int32}, map::STL.StdMaps.StdMap{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}}, Ptr{STL.StdMaps.StdMap{Int16, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int32_t_const_iterator_is_cbegin(
    const std::map<int16_t, int32_t>::const_iterator * restrict iter,
    const std::map<int16_t, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, Int32}, map::STL.StdMaps.StdMap{Int16, Int32})
    res = ccall(("std_map_int16_t_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int32}}, Ptr{STL.StdMaps.StdMap{Int16, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int32_t_const_iterator_is_cend(
    const std::map<int16_t, int32_t>::const_iterator * restrict iter,
    const std::map<int16_t, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{Int64})
    res = ccall(("std_map_int16_t_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int64}}, ())
    return StdMap{Int16, Int64}(res)::STL.StdMaps.StdMap{Int16, Int64}
end
*/
extern "C" std::map<int16_t, int64_t> * std_map_int16_t_int64_t_new(
    
) {
    return new std::map<int16_t, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int64_t_delete(
    std::map<int16_t, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int64}}, (Ptr{STL.StdMaps.StdMap{Int16, Int64}},), map)
    return StdMap{Int16, Int64}(res)::STL.StdMaps.StdMap{Int16, Int64}
end
*/
extern "C" std::map<int16_t, int64_t> * std_map_int16_t_int64_t_copy(
    const std::map<int16_t, int64_t> * restrict map
) {
    return new std::map<int16_t, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_int64_t_length(
    const std::map<int16_t, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, Int64}, key::Any)
    res = ccall(("std_map_int16_t_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Int64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_int64_t_haskey(
    const std::map<int16_t, int64_t> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, Int64}, key::Any)
    res = ccall(("std_map_int16_t_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{Int16, Int64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_int16_t_int64_t_getindex(
    std::map<int16_t, int64_t> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int64}}, Ptr{Int64}, Ptr{Int16}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int64_t_setindex_(
    std::map<int16_t, int64_t> * restrict map,
    int64_t const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, Int64}, key::Any)
    res = ccall(("std_map_int16_t_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, Int64}
end
*/
extern "C" void std_map_int16_t_int64_t_delete_(
    std::map<int16_t, int64_t> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, Int64}, map2::STL.StdMaps.StdMap{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, Int64}}, Ptr{STL.StdMaps.StdMap{Int16, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int64_t_equals(
    const std::map<int16_t, int64_t> * restrict map1,
    const std::map<int16_t, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}}, (Ptr{STL.StdMaps.StdMap{Int16, Int64}},), map)
    return StdMapIterator{Int16, Int64}(res)::STL.StdMaps.StdMapIterator{Int16, Int64}
end
*/
extern "C" std::map<int16_t, int64_t>::const_iterator * std_map_int16_t_int64_t_cbegin(
    const std::map<int16_t, int64_t> * restrict map
) {
    return new std::map<int16_t, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}}, (Ptr{STL.StdMaps.StdMap{Int16, Int64}},), map)
    return StdMapIterator{Int16, Int64}(res)::STL.StdMaps.StdMapIterator{Int16, Int64}
end
*/
extern "C" std::map<int16_t, int64_t>::const_iterator * std_map_int16_t_int64_t_cend(
    const std::map<int16_t, int64_t> * restrict map
) {
    return new std::map<int16_t, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{Int64})
    res = ccall(("std_map_int16_t_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int64}}, ())
    return StdMapIterator{Int16, Int64}(res)::STL.StdMaps.StdMapIterator{Int16, Int64}
end
*/
extern "C" std::map<int16_t, int64_t>::const_iterator * std_map_int16_t_int64_t_const_iterator_new(
    
) {
    return new std::map<int16_t, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int64_t_const_iterator_delete(
    std::map<int16_t, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, Int64}, iter2::STL.StdMaps.StdMapIterator{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}}, Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int64_t_const_iterator_equals(
    const std::map<int16_t, int64_t>::const_iterator * restrict iter1,
    const std::map<int16_t, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}},), iter)
    return convert_result(Pair{Int16, Int64}, res)::Pair{Int16, Int64}
end
*/
extern "C" const std::pair<const int16_t, int64_t> * std_map_int16_t_int64_t_const_iterator_getindex(
    std::map<int16_t, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int64_t_const_iterator_inc_(
    std::map<int16_t, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int64_t_const_iterator_dec_(
    std::map<int16_t, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, Int64}, map::STL.StdMaps.StdMap{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}}, Ptr{STL.StdMaps.StdMap{Int16, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int64_t_const_iterator_is_cbegin(
    const std::map<int16_t, int64_t>::const_iterator * restrict iter,
    const std::map<int16_t, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, Int64}, map::STL.StdMaps.StdMap{Int16, Int64})
    res = ccall(("std_map_int16_t_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int64}}, Ptr{STL.StdMaps.StdMap{Int16, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int64_t_const_iterator_is_cend(
    const std::map<int16_t, int64_t>::const_iterator * restrict iter,
    const std::map<int16_t, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{Int8})
    res = ccall(("std_map_int16_t_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int8}}, ())
    return StdMap{Int16, Int8}(res)::STL.StdMaps.StdMap{Int16, Int8}
end
*/
extern "C" std::map<int16_t, int8_t> * std_map_int16_t_int8_t_new(
    
) {
    return new std::map<int16_t, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int8_t_delete(
    std::map<int16_t, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int8}}, (Ptr{STL.StdMaps.StdMap{Int16, Int8}},), map)
    return StdMap{Int16, Int8}(res)::STL.StdMaps.StdMap{Int16, Int8}
end
*/
extern "C" std::map<int16_t, int8_t> * std_map_int16_t_int8_t_copy(
    const std::map<int16_t, int8_t> * restrict map
) {
    return new std::map<int16_t, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_int8_t_length(
    const std::map<int16_t, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, Int8}, key::Any)
    res = ccall(("std_map_int16_t_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Int8}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_int8_t_haskey(
    const std::map<int16_t, int8_t> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, Int8}, key::Any)
    res = ccall(("std_map_int16_t_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{Int16, Int8}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_int16_t_int8_t_getindex(
    std::map<int16_t, int8_t> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int8}}, Ptr{Int8}, Ptr{Int16}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int8_t_setindex_(
    std::map<int16_t, int8_t> * restrict map,
    int8_t const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, Int8}, key::Any)
    res = ccall(("std_map_int16_t_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Int8}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, Int8}
end
*/
extern "C" void std_map_int16_t_int8_t_delete_(
    std::map<int16_t, int8_t> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, Int8}, map2::STL.StdMaps.StdMap{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, Int8}}, Ptr{STL.StdMaps.StdMap{Int16, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int8_t_equals(
    const std::map<int16_t, int8_t> * restrict map1,
    const std::map<int16_t, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}}, (Ptr{STL.StdMaps.StdMap{Int16, Int8}},), map)
    return StdMapIterator{Int16, Int8}(res)::STL.StdMaps.StdMapIterator{Int16, Int8}
end
*/
extern "C" std::map<int16_t, int8_t>::const_iterator * std_map_int16_t_int8_t_cbegin(
    const std::map<int16_t, int8_t> * restrict map
) {
    return new std::map<int16_t, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}}, (Ptr{STL.StdMaps.StdMap{Int16, Int8}},), map)
    return StdMapIterator{Int16, Int8}(res)::STL.StdMaps.StdMapIterator{Int16, Int8}
end
*/
extern "C" std::map<int16_t, int8_t>::const_iterator * std_map_int16_t_int8_t_cend(
    const std::map<int16_t, int8_t> * restrict map
) {
    return new std::map<int16_t, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{Int8})
    res = ccall(("std_map_int16_t_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Int8}}, ())
    return StdMapIterator{Int16, Int8}(res)::STL.StdMaps.StdMapIterator{Int16, Int8}
end
*/
extern "C" std::map<int16_t, int8_t>::const_iterator * std_map_int16_t_int8_t_const_iterator_new(
    
) {
    return new std::map<int16_t, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int8_t_const_iterator_delete(
    std::map<int16_t, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, Int8}, iter2::STL.StdMaps.StdMapIterator{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}}, Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int8_t_const_iterator_equals(
    const std::map<int16_t, int8_t>::const_iterator * restrict iter1,
    const std::map<int16_t, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}},), iter)
    return convert_result(Pair{Int16, Int8}, res)::Pair{Int16, Int8}
end
*/
extern "C" const std::pair<const int16_t, int8_t> * std_map_int16_t_int8_t_const_iterator_getindex(
    std::map<int16_t, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int8_t_const_iterator_inc_(
    std::map<int16_t, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_int8_t_const_iterator_dec_(
    std::map<int16_t, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, Int8}, map::STL.StdMaps.StdMap{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}}, Ptr{STL.StdMaps.StdMap{Int16, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int8_t_const_iterator_is_cbegin(
    const std::map<int16_t, int8_t>::const_iterator * restrict iter,
    const std::map<int16_t, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, Int8}, map::STL.StdMaps.StdMap{Int16, Int8})
    res = ccall(("std_map_int16_t_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Int8}}, Ptr{STL.StdMaps.StdMap{Int16, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_int8_t_const_iterator_is_cend(
    const std::map<int16_t, int8_t>::const_iterator * restrict iter,
    const std::map<int16_t, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}, ())
    return StdMap{Int16, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Int16, Ptr{Nothing}}
end
*/
extern "C" std::map<int16_t, void *> * std_map_int16_t_void___new(
    
) {
    return new std::map<int16_t, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_void___delete(
    std::map<int16_t, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}},), map)
    return StdMap{Int16, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Int16, Ptr{Nothing}}
end
*/
extern "C" std::map<int16_t, void *> * std_map_int16_t_void___copy(
    const std::map<int16_t, void *> * restrict map
) {
    return new std::map<int16_t, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_void___length(
    const std::map<int16_t, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int16_t_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_void___haskey(
    const std::map<int16_t, void *> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int16_t_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_int16_t_void___getindex(
    std::map<int16_t, void *> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{Int16}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_void___setindex_(
    std::map<int16_t, void *> * restrict map,
    void * const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int16_t_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}}
end
*/
extern "C" void std_map_int16_t_void___delete_(
    std::map<int16_t, void *> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_void___equals(
    const std::map<int16_t, void *> * restrict map1,
    const std::map<int16_t, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}},), map)
    return StdMapIterator{Int16, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}
end
*/
extern "C" std::map<int16_t, void *>::const_iterator * std_map_int16_t_void___cbegin(
    const std::map<int16_t, void *> * restrict map
) {
    return new std::map<int16_t, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}},), map)
    return StdMapIterator{Int16, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}
end
*/
extern "C" std::map<int16_t, void *>::const_iterator * std_map_int16_t_void___cend(
    const std::map<int16_t, void *> * restrict map
) {
    return new std::map<int16_t, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}, ())
    return StdMapIterator{Int16, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}
end
*/
extern "C" std::map<int16_t, void *>::const_iterator * std_map_int16_t_void___const_iterator_new(
    
) {
    return new std::map<int16_t, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_void___const_iterator_delete(
    std::map<int16_t, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_void___const_iterator_equals(
    const std::map<int16_t, void *>::const_iterator * restrict iter1,
    const std::map<int16_t, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}},), iter)
    return convert_result(Pair{Int16, Ptr{Nothing}}, res)::Pair{Int16, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const int16_t, void *> * std_map_int16_t_void___const_iterator_getindex(
    std::map<int16_t, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_void___const_iterator_inc_(
    std::map<int16_t, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_void___const_iterator_dec_(
    std::map<int16_t, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_void___const_iterator_is_cbegin(
    const std::map<int16_t, void *>::const_iterator * restrict iter,
    const std::map<int16_t, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Int16, Ptr{Nothing}})
    res = ccall(("std_map_int16_t_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int16, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_void___const_iterator_is_cend(
    const std::map<int16_t, void *>::const_iterator * restrict iter,
    const std::map<int16_t, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{UInt16})
    res = ccall(("std_map_int16_t_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt16}}, ())
    return StdMap{Int16, UInt16}(res)::STL.StdMaps.StdMap{Int16, UInt16}
end
*/
extern "C" std::map<int16_t, uint16_t> * std_map_int16_t_uint16_t_new(
    
) {
    return new std::map<int16_t, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint16_t_delete(
    std::map<int16_t, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}},), map)
    return StdMap{Int16, UInt16}(res)::STL.StdMaps.StdMap{Int16, UInt16}
end
*/
extern "C" std::map<int16_t, uint16_t> * std_map_int16_t_uint16_t_copy(
    const std::map<int16_t, uint16_t> * restrict map
) {
    return new std::map<int16_t, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_uint16_t_length(
    const std::map<int16_t, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, UInt16}, key::Any)
    res = ccall(("std_map_int16_t_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_uint16_t_haskey(
    const std::map<int16_t, uint16_t> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, UInt16}, key::Any)
    res = ccall(("std_map_int16_t_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_int16_t_uint16_t_getindex(
    std::map<int16_t, uint16_t> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}}, Ptr{UInt16}, Ptr{Int16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint16_t_setindex_(
    std::map<int16_t, uint16_t> * restrict map,
    uint16_t const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, UInt16}, key::Any)
    res = ccall(("std_map_int16_t_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, UInt16}
end
*/
extern "C" void std_map_int16_t_uint16_t_delete_(
    std::map<int16_t, uint16_t> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, UInt16}, map2::STL.StdMaps.StdMap{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}}, Ptr{STL.StdMaps.StdMap{Int16, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint16_t_equals(
    const std::map<int16_t, uint16_t> * restrict map1,
    const std::map<int16_t, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}},), map)
    return StdMapIterator{Int16, UInt16}(res)::STL.StdMaps.StdMapIterator{Int16, UInt16}
end
*/
extern "C" std::map<int16_t, uint16_t>::const_iterator * std_map_int16_t_uint16_t_cbegin(
    const std::map<int16_t, uint16_t> * restrict map
) {
    return new std::map<int16_t, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt16}},), map)
    return StdMapIterator{Int16, UInt16}(res)::STL.StdMaps.StdMapIterator{Int16, UInt16}
end
*/
extern "C" std::map<int16_t, uint16_t>::const_iterator * std_map_int16_t_uint16_t_cend(
    const std::map<int16_t, uint16_t> * restrict map
) {
    return new std::map<int16_t, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{UInt16})
    res = ccall(("std_map_int16_t_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt16}}, ())
    return StdMapIterator{Int16, UInt16}(res)::STL.StdMaps.StdMapIterator{Int16, UInt16}
end
*/
extern "C" std::map<int16_t, uint16_t>::const_iterator * std_map_int16_t_uint16_t_const_iterator_new(
    
) {
    return new std::map<int16_t, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint16_t_const_iterator_delete(
    std::map<int16_t, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, UInt16}, iter2::STL.StdMaps.StdMapIterator{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint16_t_const_iterator_equals(
    const std::map<int16_t, uint16_t>::const_iterator * restrict iter1,
    const std::map<int16_t, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}},), iter)
    return convert_result(Pair{Int16, UInt16}, res)::Pair{Int16, UInt16}
end
*/
extern "C" const std::pair<const int16_t, uint16_t> * std_map_int16_t_uint16_t_const_iterator_getindex(
    std::map<int16_t, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint16_t_const_iterator_inc_(
    std::map<int16_t, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint16_t_const_iterator_dec_(
    std::map<int16_t, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, UInt16}, map::STL.StdMaps.StdMap{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}}, Ptr{STL.StdMaps.StdMap{Int16, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint16_t_const_iterator_is_cbegin(
    const std::map<int16_t, uint16_t>::const_iterator * restrict iter,
    const std::map<int16_t, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, UInt16}, map::STL.StdMaps.StdMap{Int16, UInt16})
    res = ccall(("std_map_int16_t_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt16}}, Ptr{STL.StdMaps.StdMap{Int16, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint16_t_const_iterator_is_cend(
    const std::map<int16_t, uint16_t>::const_iterator * restrict iter,
    const std::map<int16_t, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{UInt32})
    res = ccall(("std_map_int16_t_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt32}}, ())
    return StdMap{Int16, UInt32}(res)::STL.StdMaps.StdMap{Int16, UInt32}
end
*/
extern "C" std::map<int16_t, uint32_t> * std_map_int16_t_uint32_t_new(
    
) {
    return new std::map<int16_t, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint32_t_delete(
    std::map<int16_t, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}},), map)
    return StdMap{Int16, UInt32}(res)::STL.StdMaps.StdMap{Int16, UInt32}
end
*/
extern "C" std::map<int16_t, uint32_t> * std_map_int16_t_uint32_t_copy(
    const std::map<int16_t, uint32_t> * restrict map
) {
    return new std::map<int16_t, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_uint32_t_length(
    const std::map<int16_t, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, UInt32}, key::Any)
    res = ccall(("std_map_int16_t_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_uint32_t_haskey(
    const std::map<int16_t, uint32_t> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, UInt32}, key::Any)
    res = ccall(("std_map_int16_t_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_int16_t_uint32_t_getindex(
    std::map<int16_t, uint32_t> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}}, Ptr{UInt32}, Ptr{Int16}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint32_t_setindex_(
    std::map<int16_t, uint32_t> * restrict map,
    uint32_t const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, UInt32}, key::Any)
    res = ccall(("std_map_int16_t_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, UInt32}
end
*/
extern "C" void std_map_int16_t_uint32_t_delete_(
    std::map<int16_t, uint32_t> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, UInt32}, map2::STL.StdMaps.StdMap{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}}, Ptr{STL.StdMaps.StdMap{Int16, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint32_t_equals(
    const std::map<int16_t, uint32_t> * restrict map1,
    const std::map<int16_t, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}},), map)
    return StdMapIterator{Int16, UInt32}(res)::STL.StdMaps.StdMapIterator{Int16, UInt32}
end
*/
extern "C" std::map<int16_t, uint32_t>::const_iterator * std_map_int16_t_uint32_t_cbegin(
    const std::map<int16_t, uint32_t> * restrict map
) {
    return new std::map<int16_t, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt32}},), map)
    return StdMapIterator{Int16, UInt32}(res)::STL.StdMaps.StdMapIterator{Int16, UInt32}
end
*/
extern "C" std::map<int16_t, uint32_t>::const_iterator * std_map_int16_t_uint32_t_cend(
    const std::map<int16_t, uint32_t> * restrict map
) {
    return new std::map<int16_t, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{UInt32})
    res = ccall(("std_map_int16_t_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt32}}, ())
    return StdMapIterator{Int16, UInt32}(res)::STL.StdMaps.StdMapIterator{Int16, UInt32}
end
*/
extern "C" std::map<int16_t, uint32_t>::const_iterator * std_map_int16_t_uint32_t_const_iterator_new(
    
) {
    return new std::map<int16_t, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint32_t_const_iterator_delete(
    std::map<int16_t, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, UInt32}, iter2::STL.StdMaps.StdMapIterator{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint32_t_const_iterator_equals(
    const std::map<int16_t, uint32_t>::const_iterator * restrict iter1,
    const std::map<int16_t, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}},), iter)
    return convert_result(Pair{Int16, UInt32}, res)::Pair{Int16, UInt32}
end
*/
extern "C" const std::pair<const int16_t, uint32_t> * std_map_int16_t_uint32_t_const_iterator_getindex(
    std::map<int16_t, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint32_t_const_iterator_inc_(
    std::map<int16_t, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint32_t_const_iterator_dec_(
    std::map<int16_t, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, UInt32}, map::STL.StdMaps.StdMap{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}}, Ptr{STL.StdMaps.StdMap{Int16, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint32_t_const_iterator_is_cbegin(
    const std::map<int16_t, uint32_t>::const_iterator * restrict iter,
    const std::map<int16_t, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, UInt32}, map::STL.StdMaps.StdMap{Int16, UInt32})
    res = ccall(("std_map_int16_t_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt32}}, Ptr{STL.StdMaps.StdMap{Int16, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint32_t_const_iterator_is_cend(
    const std::map<int16_t, uint32_t>::const_iterator * restrict iter,
    const std::map<int16_t, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{UInt64})
    res = ccall(("std_map_int16_t_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt64}}, ())
    return StdMap{Int16, UInt64}(res)::STL.StdMaps.StdMap{Int16, UInt64}
end
*/
extern "C" std::map<int16_t, uint64_t> * std_map_int16_t_uint64_t_new(
    
) {
    return new std::map<int16_t, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint64_t_delete(
    std::map<int16_t, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}},), map)
    return StdMap{Int16, UInt64}(res)::STL.StdMaps.StdMap{Int16, UInt64}
end
*/
extern "C" std::map<int16_t, uint64_t> * std_map_int16_t_uint64_t_copy(
    const std::map<int16_t, uint64_t> * restrict map
) {
    return new std::map<int16_t, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_uint64_t_length(
    const std::map<int16_t, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, UInt64}, key::Any)
    res = ccall(("std_map_int16_t_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_uint64_t_haskey(
    const std::map<int16_t, uint64_t> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, UInt64}, key::Any)
    res = ccall(("std_map_int16_t_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_int16_t_uint64_t_getindex(
    std::map<int16_t, uint64_t> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}}, Ptr{UInt64}, Ptr{Int16}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint64_t_setindex_(
    std::map<int16_t, uint64_t> * restrict map,
    uint64_t const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, UInt64}, key::Any)
    res = ccall(("std_map_int16_t_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, UInt64}
end
*/
extern "C" void std_map_int16_t_uint64_t_delete_(
    std::map<int16_t, uint64_t> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, UInt64}, map2::STL.StdMaps.StdMap{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}}, Ptr{STL.StdMaps.StdMap{Int16, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint64_t_equals(
    const std::map<int16_t, uint64_t> * restrict map1,
    const std::map<int16_t, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}},), map)
    return StdMapIterator{Int16, UInt64}(res)::STL.StdMaps.StdMapIterator{Int16, UInt64}
end
*/
extern "C" std::map<int16_t, uint64_t>::const_iterator * std_map_int16_t_uint64_t_cbegin(
    const std::map<int16_t, uint64_t> * restrict map
) {
    return new std::map<int16_t, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt64}},), map)
    return StdMapIterator{Int16, UInt64}(res)::STL.StdMaps.StdMapIterator{Int16, UInt64}
end
*/
extern "C" std::map<int16_t, uint64_t>::const_iterator * std_map_int16_t_uint64_t_cend(
    const std::map<int16_t, uint64_t> * restrict map
) {
    return new std::map<int16_t, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{UInt64})
    res = ccall(("std_map_int16_t_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt64}}, ())
    return StdMapIterator{Int16, UInt64}(res)::STL.StdMaps.StdMapIterator{Int16, UInt64}
end
*/
extern "C" std::map<int16_t, uint64_t>::const_iterator * std_map_int16_t_uint64_t_const_iterator_new(
    
) {
    return new std::map<int16_t, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint64_t_const_iterator_delete(
    std::map<int16_t, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, UInt64}, iter2::STL.StdMaps.StdMapIterator{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint64_t_const_iterator_equals(
    const std::map<int16_t, uint64_t>::const_iterator * restrict iter1,
    const std::map<int16_t, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}},), iter)
    return convert_result(Pair{Int16, UInt64}, res)::Pair{Int16, UInt64}
end
*/
extern "C" const std::pair<const int16_t, uint64_t> * std_map_int16_t_uint64_t_const_iterator_getindex(
    std::map<int16_t, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint64_t_const_iterator_inc_(
    std::map<int16_t, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint64_t_const_iterator_dec_(
    std::map<int16_t, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, UInt64}, map::STL.StdMaps.StdMap{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}}, Ptr{STL.StdMaps.StdMap{Int16, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint64_t_const_iterator_is_cbegin(
    const std::map<int16_t, uint64_t>::const_iterator * restrict iter,
    const std::map<int16_t, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, UInt64}, map::STL.StdMaps.StdMap{Int16, UInt64})
    res = ccall(("std_map_int16_t_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt64}}, Ptr{STL.StdMaps.StdMap{Int16, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint64_t_const_iterator_is_cend(
    const std::map<int16_t, uint64_t>::const_iterator * restrict iter,
    const std::map<int16_t, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int16}, type::Type{UInt8})
    res = ccall(("std_map_int16_t_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt8}}, ())
    return StdMap{Int16, UInt8}(res)::STL.StdMaps.StdMap{Int16, UInt8}
end
*/
extern "C" std::map<int16_t, uint8_t> * std_map_int16_t_uint8_t_new(
    
) {
    return new std::map<int16_t, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint8_t_delete(
    std::map<int16_t, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}},), map)
    return StdMap{Int16, UInt8}(res)::STL.StdMaps.StdMap{Int16, UInt8}
end
*/
extern "C" std::map<int16_t, uint8_t> * std_map_int16_t_uint8_t_copy(
    const std::map<int16_t, uint8_t> * restrict map
) {
    return new std::map<int16_t, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int16_t_uint8_t_length(
    const std::map<int16_t, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int16, UInt8}, key::Any)
    res = ccall(("std_map_int16_t_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int16_t_uint8_t_haskey(
    const std::map<int16_t, uint8_t> * restrict map,
    int16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int16, UInt8}, key::Any)
    res = ccall(("std_map_int16_t_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_int16_t_uint8_t_getindex(
    std::map<int16_t, uint8_t> * restrict map,
    int16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int16, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_int16_t_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}}, Ptr{UInt8}, Ptr{Int16}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{Int16}, convert(Int16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint8_t_setindex_(
    std::map<int16_t, uint8_t> * restrict map,
    uint8_t const * elt,
    int16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int16, UInt8}, key::Any)
    res = ccall(("std_map_int16_t_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}}, Ptr{Int16}), map, convert_arg(Ptr{Int16}, convert(Int16, key)))
    return map::STL.StdMaps.StdMap{Int16, UInt8}
end
*/
extern "C" void std_map_int16_t_uint8_t_delete_(
    std::map<int16_t, uint8_t> * restrict map,
    int16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int16, UInt8}, map2::STL.StdMaps.StdMap{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}}, Ptr{STL.StdMaps.StdMap{Int16, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint8_t_equals(
    const std::map<int16_t, uint8_t> * restrict map1,
    const std::map<int16_t, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}},), map)
    return StdMapIterator{Int16, UInt8}(res)::STL.StdMaps.StdMapIterator{Int16, UInt8}
end
*/
extern "C" std::map<int16_t, uint8_t>::const_iterator * std_map_int16_t_uint8_t_cbegin(
    const std::map<int16_t, uint8_t> * restrict map
) {
    return new std::map<int16_t, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int16, UInt8}},), map)
    return StdMapIterator{Int16, UInt8}(res)::STL.StdMaps.StdMapIterator{Int16, UInt8}
end
*/
extern "C" std::map<int16_t, uint8_t>::const_iterator * std_map_int16_t_uint8_t_cend(
    const std::map<int16_t, uint8_t> * restrict map
) {
    return new std::map<int16_t, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int16}, type::Type{UInt8})
    res = ccall(("std_map_int16_t_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int16, UInt8}}, ())
    return StdMapIterator{Int16, UInt8}(res)::STL.StdMaps.StdMapIterator{Int16, UInt8}
end
*/
extern "C" std::map<int16_t, uint8_t>::const_iterator * std_map_int16_t_uint8_t_const_iterator_new(
    
) {
    return new std::map<int16_t, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint8_t_const_iterator_delete(
    std::map<int16_t, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int16, UInt8}, iter2::STL.StdMaps.StdMapIterator{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint8_t_const_iterator_equals(
    const std::map<int16_t, uint8_t>::const_iterator * restrict iter1,
    const std::map<int16_t, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int16, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}},), iter)
    return convert_result(Pair{Int16, UInt8}, res)::Pair{Int16, UInt8}
end
*/
extern "C" const std::pair<const int16_t, uint8_t> * std_map_int16_t_uint8_t_const_iterator_getindex(
    std::map<int16_t, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint8_t_const_iterator_inc_(
    std::map<int16_t, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int16_t_uint8_t_const_iterator_dec_(
    std::map<int16_t, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int16, UInt8}, map::STL.StdMaps.StdMap{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}}, Ptr{STL.StdMaps.StdMap{Int16, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint8_t_const_iterator_is_cbegin(
    const std::map<int16_t, uint8_t>::const_iterator * restrict iter,
    const std::map<int16_t, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int16, UInt8}, map::STL.StdMaps.StdMap{Int16, UInt8})
    res = ccall(("std_map_int16_t_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int16, UInt8}}, Ptr{STL.StdMaps.StdMap{Int16, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int16_t_uint8_t_const_iterator_is_cend(
    const std::map<int16_t, uint8_t>::const_iterator * restrict iter,
    const std::map<int16_t, uint8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{Bool})
    res = ccall(("std_map_int32_t_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Bool}}, ())
    return StdMap{Int32, Bool}(res)::STL.StdMaps.StdMap{Int32, Bool}
end
*/
extern "C" std::map<int32_t, bool> * std_map_int32_t_bool_new(
    
) {
    return new std::map<int32_t, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_bool_delete(
    std::map<int32_t, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Bool}}, (Ptr{STL.StdMaps.StdMap{Int32, Bool}},), map)
    return StdMap{Int32, Bool}(res)::STL.StdMaps.StdMap{Int32, Bool}
end
*/
extern "C" std::map<int32_t, bool> * std_map_int32_t_bool_copy(
    const std::map<int32_t, bool> * restrict map
) {
    return new std::map<int32_t, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_bool_length(
    const std::map<int32_t, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, Bool}, key::Any)
    res = ccall(("std_map_int32_t_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Bool}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_bool_haskey(
    const std::map<int32_t, bool> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, Bool}, key::Any)
    res = ccall(("std_map_int32_t_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{Int32, Bool}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_int32_t_bool_getindex(
    std::map<int32_t, bool> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Bool}}, Ptr{Bool}, Ptr{Int32}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_bool_setindex_(
    std::map<int32_t, bool> * restrict map,
    bool const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, Bool}, key::Any)
    res = ccall(("std_map_int32_t_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Bool}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, Bool}
end
*/
extern "C" void std_map_int32_t_bool_delete_(
    std::map<int32_t, bool> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, Bool}, map2::STL.StdMaps.StdMap{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, Bool}}, Ptr{STL.StdMaps.StdMap{Int32, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_bool_equals(
    const std::map<int32_t, bool> * restrict map1,
    const std::map<int32_t, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}}, (Ptr{STL.StdMaps.StdMap{Int32, Bool}},), map)
    return StdMapIterator{Int32, Bool}(res)::STL.StdMaps.StdMapIterator{Int32, Bool}
end
*/
extern "C" std::map<int32_t, bool>::const_iterator * std_map_int32_t_bool_cbegin(
    const std::map<int32_t, bool> * restrict map
) {
    return new std::map<int32_t, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}}, (Ptr{STL.StdMaps.StdMap{Int32, Bool}},), map)
    return StdMapIterator{Int32, Bool}(res)::STL.StdMaps.StdMapIterator{Int32, Bool}
end
*/
extern "C" std::map<int32_t, bool>::const_iterator * std_map_int32_t_bool_cend(
    const std::map<int32_t, bool> * restrict map
) {
    return new std::map<int32_t, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{Bool})
    res = ccall(("std_map_int32_t_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Bool}}, ())
    return StdMapIterator{Int32, Bool}(res)::STL.StdMaps.StdMapIterator{Int32, Bool}
end
*/
extern "C" std::map<int32_t, bool>::const_iterator * std_map_int32_t_bool_const_iterator_new(
    
) {
    return new std::map<int32_t, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_bool_const_iterator_delete(
    std::map<int32_t, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, Bool}, iter2::STL.StdMaps.StdMapIterator{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}}, Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_bool_const_iterator_equals(
    const std::map<int32_t, bool>::const_iterator * restrict iter1,
    const std::map<int32_t, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}},), iter)
    return convert_result(Pair{Int32, Bool}, res)::Pair{Int32, Bool}
end
*/
extern "C" const std::pair<const int32_t, bool> * std_map_int32_t_bool_const_iterator_getindex(
    std::map<int32_t, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_bool_const_iterator_inc_(
    std::map<int32_t, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_bool_const_iterator_dec_(
    std::map<int32_t, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, Bool}, map::STL.StdMaps.StdMap{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}}, Ptr{STL.StdMaps.StdMap{Int32, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_bool_const_iterator_is_cbegin(
    const std::map<int32_t, bool>::const_iterator * restrict iter,
    const std::map<int32_t, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, Bool}, map::STL.StdMaps.StdMap{Int32, Bool})
    res = ccall(("std_map_int32_t_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Bool}}, Ptr{STL.StdMaps.StdMap{Int32, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_bool_const_iterator_is_cend(
    const std::map<int32_t, bool>::const_iterator * restrict iter,
    const std::map<int32_t, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{Float32})
    res = ccall(("std_map_int32_t_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Float32}}, ())
    return StdMap{Int32, Float32}(res)::STL.StdMaps.StdMap{Int32, Float32}
end
*/
extern "C" std::map<int32_t, float> * std_map_int32_t_float_new(
    
) {
    return new std::map<int32_t, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, Float32})
    res = ccall(("std_map_int32_t_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_float_delete(
    std::map<int32_t, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, Float32})
    res = ccall(("std_map_int32_t_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Float32}}, (Ptr{STL.StdMaps.StdMap{Int32, Float32}},), map)
    return StdMap{Int32, Float32}(res)::STL.StdMaps.StdMap{Int32, Float32}
end
*/
extern "C" std::map<int32_t, float> * std_map_int32_t_float_copy(
    const std::map<int32_t, float> * restrict map
) {
    return new std::map<int32_t, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, Float32})
    res = ccall(("std_map_int32_t_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_float_length(
    const std::map<int32_t, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, Float32}, key::Any)
    res = ccall(("std_map_int32_t_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Float32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_float_haskey(
    const std::map<int32_t, float> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, Float32}, key::Any)
    res = ccall(("std_map_int32_t_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{Int32, Float32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_int32_t_float_getindex(
    std::map<int32_t, float> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Float32}}, Ptr{Float32}, Ptr{Int32}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_float_setindex_(
    std::map<int32_t, float> * restrict map,
    float const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, Float32}, key::Any)
    res = ccall(("std_map_int32_t_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Float32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, Float32}
end
*/
extern "C" void std_map_int32_t_float_delete_(
    std::map<int32_t, float> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, Float32}, map2::STL.StdMaps.StdMap{Int32, Float32})
    res = ccall(("std_map_int32_t_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, Float32}}, Ptr{STL.StdMaps.StdMap{Int32, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_float_equals(
    const std::map<int32_t, float> * restrict map1,
    const std::map<int32_t, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, Float32})
    res = ccall(("std_map_int32_t_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}}, (Ptr{STL.StdMaps.StdMap{Int32, Float32}},), map)
    return StdMapIterator{Int32, Float32}(res)::STL.StdMaps.StdMapIterator{Int32, Float32}
end
*/
extern "C" std::map<int32_t, float>::const_iterator * std_map_int32_t_float_cbegin(
    const std::map<int32_t, float> * restrict map
) {
    return new std::map<int32_t, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, Float32})
    res = ccall(("std_map_int32_t_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}}, (Ptr{STL.StdMaps.StdMap{Int32, Float32}},), map)
    return StdMapIterator{Int32, Float32}(res)::STL.StdMaps.StdMapIterator{Int32, Float32}
end
*/
extern "C" std::map<int32_t, float>::const_iterator * std_map_int32_t_float_cend(
    const std::map<int32_t, float> * restrict map
) {
    return new std::map<int32_t, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{Float32})
    res = ccall(("std_map_int32_t_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Float32}}, ())
    return StdMapIterator{Int32, Float32}(res)::STL.StdMaps.StdMapIterator{Int32, Float32}
end
*/
extern "C" std::map<int32_t, float>::const_iterator * std_map_int32_t_float_const_iterator_new(
    
) {
    return new std::map<int32_t, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, Float32})
    res = ccall(("std_map_int32_t_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_float_const_iterator_delete(
    std::map<int32_t, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, Float32}, iter2::STL.StdMaps.StdMapIterator{Int32, Float32})
    res = ccall(("std_map_int32_t_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}}, Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_float_const_iterator_equals(
    const std::map<int32_t, float>::const_iterator * restrict iter1,
    const std::map<int32_t, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, Float32})
    res = ccall(("std_map_int32_t_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}},), iter)
    return convert_result(Pair{Int32, Float32}, res)::Pair{Int32, Float32}
end
*/
extern "C" const std::pair<const int32_t, float> * std_map_int32_t_float_const_iterator_getindex(
    std::map<int32_t, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, Float32})
    res = ccall(("std_map_int32_t_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_float_const_iterator_inc_(
    std::map<int32_t, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, Float32})
    res = ccall(("std_map_int32_t_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_float_const_iterator_dec_(
    std::map<int32_t, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, Float32}, map::STL.StdMaps.StdMap{Int32, Float32})
    res = ccall(("std_map_int32_t_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}}, Ptr{STL.StdMaps.StdMap{Int32, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_float_const_iterator_is_cbegin(
    const std::map<int32_t, float>::const_iterator * restrict iter,
    const std::map<int32_t, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, Float32}, map::STL.StdMaps.StdMap{Int32, Float32})
    res = ccall(("std_map_int32_t_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float32}}, Ptr{STL.StdMaps.StdMap{Int32, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_float_const_iterator_is_cend(
    const std::map<int32_t, float>::const_iterator * restrict iter,
    const std::map<int32_t, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{Float64})
    res = ccall(("std_map_int32_t_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Float64}}, ())
    return StdMap{Int32, Float64}(res)::STL.StdMaps.StdMap{Int32, Float64}
end
*/
extern "C" std::map<int32_t, double> * std_map_int32_t_double_new(
    
) {
    return new std::map<int32_t, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, Float64})
    res = ccall(("std_map_int32_t_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_double_delete(
    std::map<int32_t, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, Float64})
    res = ccall(("std_map_int32_t_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Float64}}, (Ptr{STL.StdMaps.StdMap{Int32, Float64}},), map)
    return StdMap{Int32, Float64}(res)::STL.StdMaps.StdMap{Int32, Float64}
end
*/
extern "C" std::map<int32_t, double> * std_map_int32_t_double_copy(
    const std::map<int32_t, double> * restrict map
) {
    return new std::map<int32_t, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, Float64})
    res = ccall(("std_map_int32_t_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_double_length(
    const std::map<int32_t, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, Float64}, key::Any)
    res = ccall(("std_map_int32_t_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Float64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_double_haskey(
    const std::map<int32_t, double> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, Float64}, key::Any)
    res = ccall(("std_map_int32_t_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{Int32, Float64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_int32_t_double_getindex(
    std::map<int32_t, double> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Float64}}, Ptr{Float64}, Ptr{Int32}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_double_setindex_(
    std::map<int32_t, double> * restrict map,
    double const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, Float64}, key::Any)
    res = ccall(("std_map_int32_t_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Float64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, Float64}
end
*/
extern "C" void std_map_int32_t_double_delete_(
    std::map<int32_t, double> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, Float64}, map2::STL.StdMaps.StdMap{Int32, Float64})
    res = ccall(("std_map_int32_t_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, Float64}}, Ptr{STL.StdMaps.StdMap{Int32, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_double_equals(
    const std::map<int32_t, double> * restrict map1,
    const std::map<int32_t, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, Float64})
    res = ccall(("std_map_int32_t_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}}, (Ptr{STL.StdMaps.StdMap{Int32, Float64}},), map)
    return StdMapIterator{Int32, Float64}(res)::STL.StdMaps.StdMapIterator{Int32, Float64}
end
*/
extern "C" std::map<int32_t, double>::const_iterator * std_map_int32_t_double_cbegin(
    const std::map<int32_t, double> * restrict map
) {
    return new std::map<int32_t, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, Float64})
    res = ccall(("std_map_int32_t_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}}, (Ptr{STL.StdMaps.StdMap{Int32, Float64}},), map)
    return StdMapIterator{Int32, Float64}(res)::STL.StdMaps.StdMapIterator{Int32, Float64}
end
*/
extern "C" std::map<int32_t, double>::const_iterator * std_map_int32_t_double_cend(
    const std::map<int32_t, double> * restrict map
) {
    return new std::map<int32_t, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{Float64})
    res = ccall(("std_map_int32_t_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Float64}}, ())
    return StdMapIterator{Int32, Float64}(res)::STL.StdMaps.StdMapIterator{Int32, Float64}
end
*/
extern "C" std::map<int32_t, double>::const_iterator * std_map_int32_t_double_const_iterator_new(
    
) {
    return new std::map<int32_t, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, Float64})
    res = ccall(("std_map_int32_t_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_double_const_iterator_delete(
    std::map<int32_t, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, Float64}, iter2::STL.StdMaps.StdMapIterator{Int32, Float64})
    res = ccall(("std_map_int32_t_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}}, Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_double_const_iterator_equals(
    const std::map<int32_t, double>::const_iterator * restrict iter1,
    const std::map<int32_t, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, Float64})
    res = ccall(("std_map_int32_t_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}},), iter)
    return convert_result(Pair{Int32, Float64}, res)::Pair{Int32, Float64}
end
*/
extern "C" const std::pair<const int32_t, double> * std_map_int32_t_double_const_iterator_getindex(
    std::map<int32_t, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, Float64})
    res = ccall(("std_map_int32_t_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_double_const_iterator_inc_(
    std::map<int32_t, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, Float64})
    res = ccall(("std_map_int32_t_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_double_const_iterator_dec_(
    std::map<int32_t, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, Float64}, map::STL.StdMaps.StdMap{Int32, Float64})
    res = ccall(("std_map_int32_t_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}}, Ptr{STL.StdMaps.StdMap{Int32, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_double_const_iterator_is_cbegin(
    const std::map<int32_t, double>::const_iterator * restrict iter,
    const std::map<int32_t, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, Float64}, map::STL.StdMaps.StdMap{Int32, Float64})
    res = ccall(("std_map_int32_t_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Float64}}, Ptr{STL.StdMaps.StdMap{Int32, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_double_const_iterator_is_cend(
    const std::map<int32_t, double>::const_iterator * restrict iter,
    const std::map<int32_t, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{Int16})
    res = ccall(("std_map_int32_t_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int16}}, ())
    return StdMap{Int32, Int16}(res)::STL.StdMaps.StdMap{Int32, Int16}
end
*/
extern "C" std::map<int32_t, int16_t> * std_map_int32_t_int16_t_new(
    
) {
    return new std::map<int32_t, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int16_t_delete(
    std::map<int32_t, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int16}}, (Ptr{STL.StdMaps.StdMap{Int32, Int16}},), map)
    return StdMap{Int32, Int16}(res)::STL.StdMaps.StdMap{Int32, Int16}
end
*/
extern "C" std::map<int32_t, int16_t> * std_map_int32_t_int16_t_copy(
    const std::map<int32_t, int16_t> * restrict map
) {
    return new std::map<int32_t, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_int16_t_length(
    const std::map<int32_t, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, Int16}, key::Any)
    res = ccall(("std_map_int32_t_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Int16}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_int16_t_haskey(
    const std::map<int32_t, int16_t> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, Int16}, key::Any)
    res = ccall(("std_map_int32_t_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{Int32, Int16}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_int32_t_int16_t_getindex(
    std::map<int32_t, int16_t> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int16}}, Ptr{Int16}, Ptr{Int32}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int16_t_setindex_(
    std::map<int32_t, int16_t> * restrict map,
    int16_t const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, Int16}, key::Any)
    res = ccall(("std_map_int32_t_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int16}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, Int16}
end
*/
extern "C" void std_map_int32_t_int16_t_delete_(
    std::map<int32_t, int16_t> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, Int16}, map2::STL.StdMaps.StdMap{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, Int16}}, Ptr{STL.StdMaps.StdMap{Int32, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int16_t_equals(
    const std::map<int32_t, int16_t> * restrict map1,
    const std::map<int32_t, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}}, (Ptr{STL.StdMaps.StdMap{Int32, Int16}},), map)
    return StdMapIterator{Int32, Int16}(res)::STL.StdMaps.StdMapIterator{Int32, Int16}
end
*/
extern "C" std::map<int32_t, int16_t>::const_iterator * std_map_int32_t_int16_t_cbegin(
    const std::map<int32_t, int16_t> * restrict map
) {
    return new std::map<int32_t, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}}, (Ptr{STL.StdMaps.StdMap{Int32, Int16}},), map)
    return StdMapIterator{Int32, Int16}(res)::STL.StdMaps.StdMapIterator{Int32, Int16}
end
*/
extern "C" std::map<int32_t, int16_t>::const_iterator * std_map_int32_t_int16_t_cend(
    const std::map<int32_t, int16_t> * restrict map
) {
    return new std::map<int32_t, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{Int16})
    res = ccall(("std_map_int32_t_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int16}}, ())
    return StdMapIterator{Int32, Int16}(res)::STL.StdMaps.StdMapIterator{Int32, Int16}
end
*/
extern "C" std::map<int32_t, int16_t>::const_iterator * std_map_int32_t_int16_t_const_iterator_new(
    
) {
    return new std::map<int32_t, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int16_t_const_iterator_delete(
    std::map<int32_t, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, Int16}, iter2::STL.StdMaps.StdMapIterator{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}}, Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int16_t_const_iterator_equals(
    const std::map<int32_t, int16_t>::const_iterator * restrict iter1,
    const std::map<int32_t, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}},), iter)
    return convert_result(Pair{Int32, Int16}, res)::Pair{Int32, Int16}
end
*/
extern "C" const std::pair<const int32_t, int16_t> * std_map_int32_t_int16_t_const_iterator_getindex(
    std::map<int32_t, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int16_t_const_iterator_inc_(
    std::map<int32_t, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int16_t_const_iterator_dec_(
    std::map<int32_t, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, Int16}, map::STL.StdMaps.StdMap{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}}, Ptr{STL.StdMaps.StdMap{Int32, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int16_t_const_iterator_is_cbegin(
    const std::map<int32_t, int16_t>::const_iterator * restrict iter,
    const std::map<int32_t, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, Int16}, map::STL.StdMaps.StdMap{Int32, Int16})
    res = ccall(("std_map_int32_t_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int16}}, Ptr{STL.StdMaps.StdMap{Int32, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int16_t_const_iterator_is_cend(
    const std::map<int32_t, int16_t>::const_iterator * restrict iter,
    const std::map<int32_t, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{Int32})
    res = ccall(("std_map_int32_t_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int32}}, ())
    return StdMap{Int32, Int32}(res)::STL.StdMaps.StdMap{Int32, Int32}
end
*/
extern "C" std::map<int32_t, int32_t> * std_map_int32_t_int32_t_new(
    
) {
    return new std::map<int32_t, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int32_t_delete(
    std::map<int32_t, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int32}}, (Ptr{STL.StdMaps.StdMap{Int32, Int32}},), map)
    return StdMap{Int32, Int32}(res)::STL.StdMaps.StdMap{Int32, Int32}
end
*/
extern "C" std::map<int32_t, int32_t> * std_map_int32_t_int32_t_copy(
    const std::map<int32_t, int32_t> * restrict map
) {
    return new std::map<int32_t, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_int32_t_length(
    const std::map<int32_t, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, Int32}, key::Any)
    res = ccall(("std_map_int32_t_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Int32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_int32_t_haskey(
    const std::map<int32_t, int32_t> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, Int32}, key::Any)
    res = ccall(("std_map_int32_t_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{Int32, Int32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_int32_t_int32_t_getindex(
    std::map<int32_t, int32_t> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int32}}, Ptr{Int32}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int32_t_setindex_(
    std::map<int32_t, int32_t> * restrict map,
    int32_t const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, Int32}, key::Any)
    res = ccall(("std_map_int32_t_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, Int32}
end
*/
extern "C" void std_map_int32_t_int32_t_delete_(
    std::map<int32_t, int32_t> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, Int32}, map2::STL.StdMaps.StdMap{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, Int32}}, Ptr{STL.StdMaps.StdMap{Int32, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int32_t_equals(
    const std::map<int32_t, int32_t> * restrict map1,
    const std::map<int32_t, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}}, (Ptr{STL.StdMaps.StdMap{Int32, Int32}},), map)
    return StdMapIterator{Int32, Int32}(res)::STL.StdMaps.StdMapIterator{Int32, Int32}
end
*/
extern "C" std::map<int32_t, int32_t>::const_iterator * std_map_int32_t_int32_t_cbegin(
    const std::map<int32_t, int32_t> * restrict map
) {
    return new std::map<int32_t, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}}, (Ptr{STL.StdMaps.StdMap{Int32, Int32}},), map)
    return StdMapIterator{Int32, Int32}(res)::STL.StdMaps.StdMapIterator{Int32, Int32}
end
*/
extern "C" std::map<int32_t, int32_t>::const_iterator * std_map_int32_t_int32_t_cend(
    const std::map<int32_t, int32_t> * restrict map
) {
    return new std::map<int32_t, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{Int32})
    res = ccall(("std_map_int32_t_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int32}}, ())
    return StdMapIterator{Int32, Int32}(res)::STL.StdMaps.StdMapIterator{Int32, Int32}
end
*/
extern "C" std::map<int32_t, int32_t>::const_iterator * std_map_int32_t_int32_t_const_iterator_new(
    
) {
    return new std::map<int32_t, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int32_t_const_iterator_delete(
    std::map<int32_t, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, Int32}, iter2::STL.StdMaps.StdMapIterator{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}}, Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int32_t_const_iterator_equals(
    const std::map<int32_t, int32_t>::const_iterator * restrict iter1,
    const std::map<int32_t, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}},), iter)
    return convert_result(Pair{Int32, Int32}, res)::Pair{Int32, Int32}
end
*/
extern "C" const std::pair<const int32_t, int32_t> * std_map_int32_t_int32_t_const_iterator_getindex(
    std::map<int32_t, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int32_t_const_iterator_inc_(
    std::map<int32_t, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int32_t_const_iterator_dec_(
    std::map<int32_t, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, Int32}, map::STL.StdMaps.StdMap{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}}, Ptr{STL.StdMaps.StdMap{Int32, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int32_t_const_iterator_is_cbegin(
    const std::map<int32_t, int32_t>::const_iterator * restrict iter,
    const std::map<int32_t, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, Int32}, map::STL.StdMaps.StdMap{Int32, Int32})
    res = ccall(("std_map_int32_t_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int32}}, Ptr{STL.StdMaps.StdMap{Int32, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int32_t_const_iterator_is_cend(
    const std::map<int32_t, int32_t>::const_iterator * restrict iter,
    const std::map<int32_t, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{Int64})
    res = ccall(("std_map_int32_t_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int64}}, ())
    return StdMap{Int32, Int64}(res)::STL.StdMaps.StdMap{Int32, Int64}
end
*/
extern "C" std::map<int32_t, int64_t> * std_map_int32_t_int64_t_new(
    
) {
    return new std::map<int32_t, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int64_t_delete(
    std::map<int32_t, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int64}}, (Ptr{STL.StdMaps.StdMap{Int32, Int64}},), map)
    return StdMap{Int32, Int64}(res)::STL.StdMaps.StdMap{Int32, Int64}
end
*/
extern "C" std::map<int32_t, int64_t> * std_map_int32_t_int64_t_copy(
    const std::map<int32_t, int64_t> * restrict map
) {
    return new std::map<int32_t, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_int64_t_length(
    const std::map<int32_t, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, Int64}, key::Any)
    res = ccall(("std_map_int32_t_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Int64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_int64_t_haskey(
    const std::map<int32_t, int64_t> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, Int64}, key::Any)
    res = ccall(("std_map_int32_t_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{Int32, Int64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_int32_t_int64_t_getindex(
    std::map<int32_t, int64_t> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int64}}, Ptr{Int64}, Ptr{Int32}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int64_t_setindex_(
    std::map<int32_t, int64_t> * restrict map,
    int64_t const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, Int64}, key::Any)
    res = ccall(("std_map_int32_t_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, Int64}
end
*/
extern "C" void std_map_int32_t_int64_t_delete_(
    std::map<int32_t, int64_t> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, Int64}, map2::STL.StdMaps.StdMap{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, Int64}}, Ptr{STL.StdMaps.StdMap{Int32, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int64_t_equals(
    const std::map<int32_t, int64_t> * restrict map1,
    const std::map<int32_t, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}}, (Ptr{STL.StdMaps.StdMap{Int32, Int64}},), map)
    return StdMapIterator{Int32, Int64}(res)::STL.StdMaps.StdMapIterator{Int32, Int64}
end
*/
extern "C" std::map<int32_t, int64_t>::const_iterator * std_map_int32_t_int64_t_cbegin(
    const std::map<int32_t, int64_t> * restrict map
) {
    return new std::map<int32_t, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}}, (Ptr{STL.StdMaps.StdMap{Int32, Int64}},), map)
    return StdMapIterator{Int32, Int64}(res)::STL.StdMaps.StdMapIterator{Int32, Int64}
end
*/
extern "C" std::map<int32_t, int64_t>::const_iterator * std_map_int32_t_int64_t_cend(
    const std::map<int32_t, int64_t> * restrict map
) {
    return new std::map<int32_t, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{Int64})
    res = ccall(("std_map_int32_t_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int64}}, ())
    return StdMapIterator{Int32, Int64}(res)::STL.StdMaps.StdMapIterator{Int32, Int64}
end
*/
extern "C" std::map<int32_t, int64_t>::const_iterator * std_map_int32_t_int64_t_const_iterator_new(
    
) {
    return new std::map<int32_t, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int64_t_const_iterator_delete(
    std::map<int32_t, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, Int64}, iter2::STL.StdMaps.StdMapIterator{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}}, Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int64_t_const_iterator_equals(
    const std::map<int32_t, int64_t>::const_iterator * restrict iter1,
    const std::map<int32_t, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}},), iter)
    return convert_result(Pair{Int32, Int64}, res)::Pair{Int32, Int64}
end
*/
extern "C" const std::pair<const int32_t, int64_t> * std_map_int32_t_int64_t_const_iterator_getindex(
    std::map<int32_t, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int64_t_const_iterator_inc_(
    std::map<int32_t, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int64_t_const_iterator_dec_(
    std::map<int32_t, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, Int64}, map::STL.StdMaps.StdMap{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}}, Ptr{STL.StdMaps.StdMap{Int32, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int64_t_const_iterator_is_cbegin(
    const std::map<int32_t, int64_t>::const_iterator * restrict iter,
    const std::map<int32_t, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, Int64}, map::STL.StdMaps.StdMap{Int32, Int64})
    res = ccall(("std_map_int32_t_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int64}}, Ptr{STL.StdMaps.StdMap{Int32, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int64_t_const_iterator_is_cend(
    const std::map<int32_t, int64_t>::const_iterator * restrict iter,
    const std::map<int32_t, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{Int8})
    res = ccall(("std_map_int32_t_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int8}}, ())
    return StdMap{Int32, Int8}(res)::STL.StdMaps.StdMap{Int32, Int8}
end
*/
extern "C" std::map<int32_t, int8_t> * std_map_int32_t_int8_t_new(
    
) {
    return new std::map<int32_t, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int8_t_delete(
    std::map<int32_t, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int8}}, (Ptr{STL.StdMaps.StdMap{Int32, Int8}},), map)
    return StdMap{Int32, Int8}(res)::STL.StdMaps.StdMap{Int32, Int8}
end
*/
extern "C" std::map<int32_t, int8_t> * std_map_int32_t_int8_t_copy(
    const std::map<int32_t, int8_t> * restrict map
) {
    return new std::map<int32_t, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_int8_t_length(
    const std::map<int32_t, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, Int8}, key::Any)
    res = ccall(("std_map_int32_t_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Int8}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_int8_t_haskey(
    const std::map<int32_t, int8_t> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, Int8}, key::Any)
    res = ccall(("std_map_int32_t_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{Int32, Int8}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_int32_t_int8_t_getindex(
    std::map<int32_t, int8_t> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int8}}, Ptr{Int8}, Ptr{Int32}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int8_t_setindex_(
    std::map<int32_t, int8_t> * restrict map,
    int8_t const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, Int8}, key::Any)
    res = ccall(("std_map_int32_t_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Int8}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, Int8}
end
*/
extern "C" void std_map_int32_t_int8_t_delete_(
    std::map<int32_t, int8_t> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, Int8}, map2::STL.StdMaps.StdMap{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, Int8}}, Ptr{STL.StdMaps.StdMap{Int32, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int8_t_equals(
    const std::map<int32_t, int8_t> * restrict map1,
    const std::map<int32_t, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}}, (Ptr{STL.StdMaps.StdMap{Int32, Int8}},), map)
    return StdMapIterator{Int32, Int8}(res)::STL.StdMaps.StdMapIterator{Int32, Int8}
end
*/
extern "C" std::map<int32_t, int8_t>::const_iterator * std_map_int32_t_int8_t_cbegin(
    const std::map<int32_t, int8_t> * restrict map
) {
    return new std::map<int32_t, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}}, (Ptr{STL.StdMaps.StdMap{Int32, Int8}},), map)
    return StdMapIterator{Int32, Int8}(res)::STL.StdMaps.StdMapIterator{Int32, Int8}
end
*/
extern "C" std::map<int32_t, int8_t>::const_iterator * std_map_int32_t_int8_t_cend(
    const std::map<int32_t, int8_t> * restrict map
) {
    return new std::map<int32_t, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{Int8})
    res = ccall(("std_map_int32_t_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Int8}}, ())
    return StdMapIterator{Int32, Int8}(res)::STL.StdMaps.StdMapIterator{Int32, Int8}
end
*/
extern "C" std::map<int32_t, int8_t>::const_iterator * std_map_int32_t_int8_t_const_iterator_new(
    
) {
    return new std::map<int32_t, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int8_t_const_iterator_delete(
    std::map<int32_t, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, Int8}, iter2::STL.StdMaps.StdMapIterator{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}}, Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int8_t_const_iterator_equals(
    const std::map<int32_t, int8_t>::const_iterator * restrict iter1,
    const std::map<int32_t, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}},), iter)
    return convert_result(Pair{Int32, Int8}, res)::Pair{Int32, Int8}
end
*/
extern "C" const std::pair<const int32_t, int8_t> * std_map_int32_t_int8_t_const_iterator_getindex(
    std::map<int32_t, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int8_t_const_iterator_inc_(
    std::map<int32_t, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_int8_t_const_iterator_dec_(
    std::map<int32_t, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, Int8}, map::STL.StdMaps.StdMap{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}}, Ptr{STL.StdMaps.StdMap{Int32, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int8_t_const_iterator_is_cbegin(
    const std::map<int32_t, int8_t>::const_iterator * restrict iter,
    const std::map<int32_t, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, Int8}, map::STL.StdMaps.StdMap{Int32, Int8})
    res = ccall(("std_map_int32_t_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Int8}}, Ptr{STL.StdMaps.StdMap{Int32, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_int8_t_const_iterator_is_cend(
    const std::map<int32_t, int8_t>::const_iterator * restrict iter,
    const std::map<int32_t, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}, ())
    return StdMap{Int32, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Int32, Ptr{Nothing}}
end
*/
extern "C" std::map<int32_t, void *> * std_map_int32_t_void___new(
    
) {
    return new std::map<int32_t, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_void___delete(
    std::map<int32_t, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}},), map)
    return StdMap{Int32, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Int32, Ptr{Nothing}}
end
*/
extern "C" std::map<int32_t, void *> * std_map_int32_t_void___copy(
    const std::map<int32_t, void *> * restrict map
) {
    return new std::map<int32_t, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_void___length(
    const std::map<int32_t, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int32_t_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_void___haskey(
    const std::map<int32_t, void *> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int32_t_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_int32_t_void___getindex(
    std::map<int32_t, void *> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{Int32}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_void___setindex_(
    std::map<int32_t, void *> * restrict map,
    void * const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int32_t_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}}
end
*/
extern "C" void std_map_int32_t_void___delete_(
    std::map<int32_t, void *> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_void___equals(
    const std::map<int32_t, void *> * restrict map1,
    const std::map<int32_t, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}},), map)
    return StdMapIterator{Int32, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}
end
*/
extern "C" std::map<int32_t, void *>::const_iterator * std_map_int32_t_void___cbegin(
    const std::map<int32_t, void *> * restrict map
) {
    return new std::map<int32_t, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}},), map)
    return StdMapIterator{Int32, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}
end
*/
extern "C" std::map<int32_t, void *>::const_iterator * std_map_int32_t_void___cend(
    const std::map<int32_t, void *> * restrict map
) {
    return new std::map<int32_t, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}, ())
    return StdMapIterator{Int32, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}
end
*/
extern "C" std::map<int32_t, void *>::const_iterator * std_map_int32_t_void___const_iterator_new(
    
) {
    return new std::map<int32_t, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_void___const_iterator_delete(
    std::map<int32_t, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_void___const_iterator_equals(
    const std::map<int32_t, void *>::const_iterator * restrict iter1,
    const std::map<int32_t, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}},), iter)
    return convert_result(Pair{Int32, Ptr{Nothing}}, res)::Pair{Int32, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const int32_t, void *> * std_map_int32_t_void___const_iterator_getindex(
    std::map<int32_t, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_void___const_iterator_inc_(
    std::map<int32_t, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_void___const_iterator_dec_(
    std::map<int32_t, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_void___const_iterator_is_cbegin(
    const std::map<int32_t, void *>::const_iterator * restrict iter,
    const std::map<int32_t, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Int32, Ptr{Nothing}})
    res = ccall(("std_map_int32_t_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int32, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_void___const_iterator_is_cend(
    const std::map<int32_t, void *>::const_iterator * restrict iter,
    const std::map<int32_t, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{UInt16})
    res = ccall(("std_map_int32_t_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt16}}, ())
    return StdMap{Int32, UInt16}(res)::STL.StdMaps.StdMap{Int32, UInt16}
end
*/
extern "C" std::map<int32_t, uint16_t> * std_map_int32_t_uint16_t_new(
    
) {
    return new std::map<int32_t, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint16_t_delete(
    std::map<int32_t, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}},), map)
    return StdMap{Int32, UInt16}(res)::STL.StdMaps.StdMap{Int32, UInt16}
end
*/
extern "C" std::map<int32_t, uint16_t> * std_map_int32_t_uint16_t_copy(
    const std::map<int32_t, uint16_t> * restrict map
) {
    return new std::map<int32_t, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_uint16_t_length(
    const std::map<int32_t, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, UInt16}, key::Any)
    res = ccall(("std_map_int32_t_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_uint16_t_haskey(
    const std::map<int32_t, uint16_t> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, UInt16}, key::Any)
    res = ccall(("std_map_int32_t_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_int32_t_uint16_t_getindex(
    std::map<int32_t, uint16_t> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}}, Ptr{UInt16}, Ptr{Int32}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint16_t_setindex_(
    std::map<int32_t, uint16_t> * restrict map,
    uint16_t const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, UInt16}, key::Any)
    res = ccall(("std_map_int32_t_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, UInt16}
end
*/
extern "C" void std_map_int32_t_uint16_t_delete_(
    std::map<int32_t, uint16_t> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, UInt16}, map2::STL.StdMaps.StdMap{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}}, Ptr{STL.StdMaps.StdMap{Int32, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint16_t_equals(
    const std::map<int32_t, uint16_t> * restrict map1,
    const std::map<int32_t, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}},), map)
    return StdMapIterator{Int32, UInt16}(res)::STL.StdMaps.StdMapIterator{Int32, UInt16}
end
*/
extern "C" std::map<int32_t, uint16_t>::const_iterator * std_map_int32_t_uint16_t_cbegin(
    const std::map<int32_t, uint16_t> * restrict map
) {
    return new std::map<int32_t, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt16}},), map)
    return StdMapIterator{Int32, UInt16}(res)::STL.StdMaps.StdMapIterator{Int32, UInt16}
end
*/
extern "C" std::map<int32_t, uint16_t>::const_iterator * std_map_int32_t_uint16_t_cend(
    const std::map<int32_t, uint16_t> * restrict map
) {
    return new std::map<int32_t, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{UInt16})
    res = ccall(("std_map_int32_t_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt16}}, ())
    return StdMapIterator{Int32, UInt16}(res)::STL.StdMaps.StdMapIterator{Int32, UInt16}
end
*/
extern "C" std::map<int32_t, uint16_t>::const_iterator * std_map_int32_t_uint16_t_const_iterator_new(
    
) {
    return new std::map<int32_t, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint16_t_const_iterator_delete(
    std::map<int32_t, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, UInt16}, iter2::STL.StdMaps.StdMapIterator{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint16_t_const_iterator_equals(
    const std::map<int32_t, uint16_t>::const_iterator * restrict iter1,
    const std::map<int32_t, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}},), iter)
    return convert_result(Pair{Int32, UInt16}, res)::Pair{Int32, UInt16}
end
*/
extern "C" const std::pair<const int32_t, uint16_t> * std_map_int32_t_uint16_t_const_iterator_getindex(
    std::map<int32_t, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint16_t_const_iterator_inc_(
    std::map<int32_t, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint16_t_const_iterator_dec_(
    std::map<int32_t, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, UInt16}, map::STL.StdMaps.StdMap{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}}, Ptr{STL.StdMaps.StdMap{Int32, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint16_t_const_iterator_is_cbegin(
    const std::map<int32_t, uint16_t>::const_iterator * restrict iter,
    const std::map<int32_t, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, UInt16}, map::STL.StdMaps.StdMap{Int32, UInt16})
    res = ccall(("std_map_int32_t_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt16}}, Ptr{STL.StdMaps.StdMap{Int32, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint16_t_const_iterator_is_cend(
    const std::map<int32_t, uint16_t>::const_iterator * restrict iter,
    const std::map<int32_t, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{UInt32})
    res = ccall(("std_map_int32_t_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt32}}, ())
    return StdMap{Int32, UInt32}(res)::STL.StdMaps.StdMap{Int32, UInt32}
end
*/
extern "C" std::map<int32_t, uint32_t> * std_map_int32_t_uint32_t_new(
    
) {
    return new std::map<int32_t, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint32_t_delete(
    std::map<int32_t, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}},), map)
    return StdMap{Int32, UInt32}(res)::STL.StdMaps.StdMap{Int32, UInt32}
end
*/
extern "C" std::map<int32_t, uint32_t> * std_map_int32_t_uint32_t_copy(
    const std::map<int32_t, uint32_t> * restrict map
) {
    return new std::map<int32_t, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_uint32_t_length(
    const std::map<int32_t, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, UInt32}, key::Any)
    res = ccall(("std_map_int32_t_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_uint32_t_haskey(
    const std::map<int32_t, uint32_t> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, UInt32}, key::Any)
    res = ccall(("std_map_int32_t_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_int32_t_uint32_t_getindex(
    std::map<int32_t, uint32_t> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}}, Ptr{UInt32}, Ptr{Int32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint32_t_setindex_(
    std::map<int32_t, uint32_t> * restrict map,
    uint32_t const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, UInt32}, key::Any)
    res = ccall(("std_map_int32_t_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, UInt32}
end
*/
extern "C" void std_map_int32_t_uint32_t_delete_(
    std::map<int32_t, uint32_t> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, UInt32}, map2::STL.StdMaps.StdMap{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}}, Ptr{STL.StdMaps.StdMap{Int32, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint32_t_equals(
    const std::map<int32_t, uint32_t> * restrict map1,
    const std::map<int32_t, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}},), map)
    return StdMapIterator{Int32, UInt32}(res)::STL.StdMaps.StdMapIterator{Int32, UInt32}
end
*/
extern "C" std::map<int32_t, uint32_t>::const_iterator * std_map_int32_t_uint32_t_cbegin(
    const std::map<int32_t, uint32_t> * restrict map
) {
    return new std::map<int32_t, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt32}},), map)
    return StdMapIterator{Int32, UInt32}(res)::STL.StdMaps.StdMapIterator{Int32, UInt32}
end
*/
extern "C" std::map<int32_t, uint32_t>::const_iterator * std_map_int32_t_uint32_t_cend(
    const std::map<int32_t, uint32_t> * restrict map
) {
    return new std::map<int32_t, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{UInt32})
    res = ccall(("std_map_int32_t_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt32}}, ())
    return StdMapIterator{Int32, UInt32}(res)::STL.StdMaps.StdMapIterator{Int32, UInt32}
end
*/
extern "C" std::map<int32_t, uint32_t>::const_iterator * std_map_int32_t_uint32_t_const_iterator_new(
    
) {
    return new std::map<int32_t, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint32_t_const_iterator_delete(
    std::map<int32_t, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, UInt32}, iter2::STL.StdMaps.StdMapIterator{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint32_t_const_iterator_equals(
    const std::map<int32_t, uint32_t>::const_iterator * restrict iter1,
    const std::map<int32_t, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}},), iter)
    return convert_result(Pair{Int32, UInt32}, res)::Pair{Int32, UInt32}
end
*/
extern "C" const std::pair<const int32_t, uint32_t> * std_map_int32_t_uint32_t_const_iterator_getindex(
    std::map<int32_t, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint32_t_const_iterator_inc_(
    std::map<int32_t, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint32_t_const_iterator_dec_(
    std::map<int32_t, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, UInt32}, map::STL.StdMaps.StdMap{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}}, Ptr{STL.StdMaps.StdMap{Int32, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint32_t_const_iterator_is_cbegin(
    const std::map<int32_t, uint32_t>::const_iterator * restrict iter,
    const std::map<int32_t, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, UInt32}, map::STL.StdMaps.StdMap{Int32, UInt32})
    res = ccall(("std_map_int32_t_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt32}}, Ptr{STL.StdMaps.StdMap{Int32, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint32_t_const_iterator_is_cend(
    const std::map<int32_t, uint32_t>::const_iterator * restrict iter,
    const std::map<int32_t, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{UInt64})
    res = ccall(("std_map_int32_t_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt64}}, ())
    return StdMap{Int32, UInt64}(res)::STL.StdMaps.StdMap{Int32, UInt64}
end
*/
extern "C" std::map<int32_t, uint64_t> * std_map_int32_t_uint64_t_new(
    
) {
    return new std::map<int32_t, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint64_t_delete(
    std::map<int32_t, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}},), map)
    return StdMap{Int32, UInt64}(res)::STL.StdMaps.StdMap{Int32, UInt64}
end
*/
extern "C" std::map<int32_t, uint64_t> * std_map_int32_t_uint64_t_copy(
    const std::map<int32_t, uint64_t> * restrict map
) {
    return new std::map<int32_t, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_uint64_t_length(
    const std::map<int32_t, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, UInt64}, key::Any)
    res = ccall(("std_map_int32_t_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_uint64_t_haskey(
    const std::map<int32_t, uint64_t> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, UInt64}, key::Any)
    res = ccall(("std_map_int32_t_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_int32_t_uint64_t_getindex(
    std::map<int32_t, uint64_t> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}}, Ptr{UInt64}, Ptr{Int32}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint64_t_setindex_(
    std::map<int32_t, uint64_t> * restrict map,
    uint64_t const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, UInt64}, key::Any)
    res = ccall(("std_map_int32_t_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, UInt64}
end
*/
extern "C" void std_map_int32_t_uint64_t_delete_(
    std::map<int32_t, uint64_t> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, UInt64}, map2::STL.StdMaps.StdMap{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}}, Ptr{STL.StdMaps.StdMap{Int32, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint64_t_equals(
    const std::map<int32_t, uint64_t> * restrict map1,
    const std::map<int32_t, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}},), map)
    return StdMapIterator{Int32, UInt64}(res)::STL.StdMaps.StdMapIterator{Int32, UInt64}
end
*/
extern "C" std::map<int32_t, uint64_t>::const_iterator * std_map_int32_t_uint64_t_cbegin(
    const std::map<int32_t, uint64_t> * restrict map
) {
    return new std::map<int32_t, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt64}},), map)
    return StdMapIterator{Int32, UInt64}(res)::STL.StdMaps.StdMapIterator{Int32, UInt64}
end
*/
extern "C" std::map<int32_t, uint64_t>::const_iterator * std_map_int32_t_uint64_t_cend(
    const std::map<int32_t, uint64_t> * restrict map
) {
    return new std::map<int32_t, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{UInt64})
    res = ccall(("std_map_int32_t_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt64}}, ())
    return StdMapIterator{Int32, UInt64}(res)::STL.StdMaps.StdMapIterator{Int32, UInt64}
end
*/
extern "C" std::map<int32_t, uint64_t>::const_iterator * std_map_int32_t_uint64_t_const_iterator_new(
    
) {
    return new std::map<int32_t, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint64_t_const_iterator_delete(
    std::map<int32_t, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, UInt64}, iter2::STL.StdMaps.StdMapIterator{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint64_t_const_iterator_equals(
    const std::map<int32_t, uint64_t>::const_iterator * restrict iter1,
    const std::map<int32_t, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}},), iter)
    return convert_result(Pair{Int32, UInt64}, res)::Pair{Int32, UInt64}
end
*/
extern "C" const std::pair<const int32_t, uint64_t> * std_map_int32_t_uint64_t_const_iterator_getindex(
    std::map<int32_t, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint64_t_const_iterator_inc_(
    std::map<int32_t, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint64_t_const_iterator_dec_(
    std::map<int32_t, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, UInt64}, map::STL.StdMaps.StdMap{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}}, Ptr{STL.StdMaps.StdMap{Int32, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint64_t_const_iterator_is_cbegin(
    const std::map<int32_t, uint64_t>::const_iterator * restrict iter,
    const std::map<int32_t, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, UInt64}, map::STL.StdMaps.StdMap{Int32, UInt64})
    res = ccall(("std_map_int32_t_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt64}}, Ptr{STL.StdMaps.StdMap{Int32, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint64_t_const_iterator_is_cend(
    const std::map<int32_t, uint64_t>::const_iterator * restrict iter,
    const std::map<int32_t, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int32}, type::Type{UInt8})
    res = ccall(("std_map_int32_t_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt8}}, ())
    return StdMap{Int32, UInt8}(res)::STL.StdMaps.StdMap{Int32, UInt8}
end
*/
extern "C" std::map<int32_t, uint8_t> * std_map_int32_t_uint8_t_new(
    
) {
    return new std::map<int32_t, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint8_t_delete(
    std::map<int32_t, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}},), map)
    return StdMap{Int32, UInt8}(res)::STL.StdMaps.StdMap{Int32, UInt8}
end
*/
extern "C" std::map<int32_t, uint8_t> * std_map_int32_t_uint8_t_copy(
    const std::map<int32_t, uint8_t> * restrict map
) {
    return new std::map<int32_t, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int32_t_uint8_t_length(
    const std::map<int32_t, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int32, UInt8}, key::Any)
    res = ccall(("std_map_int32_t_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int32_t_uint8_t_haskey(
    const std::map<int32_t, uint8_t> * restrict map,
    int32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int32, UInt8}, key::Any)
    res = ccall(("std_map_int32_t_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_int32_t_uint8_t_getindex(
    std::map<int32_t, uint8_t> * restrict map,
    int32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int32, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_int32_t_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}}, Ptr{UInt8}, Ptr{Int32}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{Int32}, convert(Int32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint8_t_setindex_(
    std::map<int32_t, uint8_t> * restrict map,
    uint8_t const * elt,
    int32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int32, UInt8}, key::Any)
    res = ccall(("std_map_int32_t_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}}, Ptr{Int32}), map, convert_arg(Ptr{Int32}, convert(Int32, key)))
    return map::STL.StdMaps.StdMap{Int32, UInt8}
end
*/
extern "C" void std_map_int32_t_uint8_t_delete_(
    std::map<int32_t, uint8_t> * restrict map,
    int32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int32, UInt8}, map2::STL.StdMaps.StdMap{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}}, Ptr{STL.StdMaps.StdMap{Int32, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint8_t_equals(
    const std::map<int32_t, uint8_t> * restrict map1,
    const std::map<int32_t, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}},), map)
    return StdMapIterator{Int32, UInt8}(res)::STL.StdMaps.StdMapIterator{Int32, UInt8}
end
*/
extern "C" std::map<int32_t, uint8_t>::const_iterator * std_map_int32_t_uint8_t_cbegin(
    const std::map<int32_t, uint8_t> * restrict map
) {
    return new std::map<int32_t, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int32, UInt8}},), map)
    return StdMapIterator{Int32, UInt8}(res)::STL.StdMaps.StdMapIterator{Int32, UInt8}
end
*/
extern "C" std::map<int32_t, uint8_t>::const_iterator * std_map_int32_t_uint8_t_cend(
    const std::map<int32_t, uint8_t> * restrict map
) {
    return new std::map<int32_t, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int32}, type::Type{UInt8})
    res = ccall(("std_map_int32_t_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int32, UInt8}}, ())
    return StdMapIterator{Int32, UInt8}(res)::STL.StdMaps.StdMapIterator{Int32, UInt8}
end
*/
extern "C" std::map<int32_t, uint8_t>::const_iterator * std_map_int32_t_uint8_t_const_iterator_new(
    
) {
    return new std::map<int32_t, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint8_t_const_iterator_delete(
    std::map<int32_t, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int32, UInt8}, iter2::STL.StdMaps.StdMapIterator{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint8_t_const_iterator_equals(
    const std::map<int32_t, uint8_t>::const_iterator * restrict iter1,
    const std::map<int32_t, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int32, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}},), iter)
    return convert_result(Pair{Int32, UInt8}, res)::Pair{Int32, UInt8}
end
*/
extern "C" const std::pair<const int32_t, uint8_t> * std_map_int32_t_uint8_t_const_iterator_getindex(
    std::map<int32_t, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint8_t_const_iterator_inc_(
    std::map<int32_t, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int32_t_uint8_t_const_iterator_dec_(
    std::map<int32_t, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int32, UInt8}, map::STL.StdMaps.StdMap{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}}, Ptr{STL.StdMaps.StdMap{Int32, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint8_t_const_iterator_is_cbegin(
    const std::map<int32_t, uint8_t>::const_iterator * restrict iter,
    const std::map<int32_t, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int32, UInt8}, map::STL.StdMaps.StdMap{Int32, UInt8})
    res = ccall(("std_map_int32_t_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int32, UInt8}}, Ptr{STL.StdMaps.StdMap{Int32, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int32_t_uint8_t_const_iterator_is_cend(
    const std::map<int32_t, uint8_t>::const_iterator * restrict iter,
    const std::map<int32_t, uint8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{Bool})
    res = ccall(("std_map_int64_t_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Bool}}, ())
    return StdMap{Int64, Bool}(res)::STL.StdMaps.StdMap{Int64, Bool}
end
*/
extern "C" std::map<int64_t, bool> * std_map_int64_t_bool_new(
    
) {
    return new std::map<int64_t, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_bool_delete(
    std::map<int64_t, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Bool}}, (Ptr{STL.StdMaps.StdMap{Int64, Bool}},), map)
    return StdMap{Int64, Bool}(res)::STL.StdMaps.StdMap{Int64, Bool}
end
*/
extern "C" std::map<int64_t, bool> * std_map_int64_t_bool_copy(
    const std::map<int64_t, bool> * restrict map
) {
    return new std::map<int64_t, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_bool_length(
    const std::map<int64_t, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, Bool}, key::Any)
    res = ccall(("std_map_int64_t_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Bool}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_bool_haskey(
    const std::map<int64_t, bool> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, Bool}, key::Any)
    res = ccall(("std_map_int64_t_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{Int64, Bool}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_int64_t_bool_getindex(
    std::map<int64_t, bool> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Bool}}, Ptr{Bool}, Ptr{Int64}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_bool_setindex_(
    std::map<int64_t, bool> * restrict map,
    bool const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, Bool}, key::Any)
    res = ccall(("std_map_int64_t_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Bool}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, Bool}
end
*/
extern "C" void std_map_int64_t_bool_delete_(
    std::map<int64_t, bool> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, Bool}, map2::STL.StdMaps.StdMap{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, Bool}}, Ptr{STL.StdMaps.StdMap{Int64, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_bool_equals(
    const std::map<int64_t, bool> * restrict map1,
    const std::map<int64_t, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}}, (Ptr{STL.StdMaps.StdMap{Int64, Bool}},), map)
    return StdMapIterator{Int64, Bool}(res)::STL.StdMaps.StdMapIterator{Int64, Bool}
end
*/
extern "C" std::map<int64_t, bool>::const_iterator * std_map_int64_t_bool_cbegin(
    const std::map<int64_t, bool> * restrict map
) {
    return new std::map<int64_t, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}}, (Ptr{STL.StdMaps.StdMap{Int64, Bool}},), map)
    return StdMapIterator{Int64, Bool}(res)::STL.StdMaps.StdMapIterator{Int64, Bool}
end
*/
extern "C" std::map<int64_t, bool>::const_iterator * std_map_int64_t_bool_cend(
    const std::map<int64_t, bool> * restrict map
) {
    return new std::map<int64_t, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{Bool})
    res = ccall(("std_map_int64_t_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Bool}}, ())
    return StdMapIterator{Int64, Bool}(res)::STL.StdMaps.StdMapIterator{Int64, Bool}
end
*/
extern "C" std::map<int64_t, bool>::const_iterator * std_map_int64_t_bool_const_iterator_new(
    
) {
    return new std::map<int64_t, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_bool_const_iterator_delete(
    std::map<int64_t, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, Bool}, iter2::STL.StdMaps.StdMapIterator{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}}, Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_bool_const_iterator_equals(
    const std::map<int64_t, bool>::const_iterator * restrict iter1,
    const std::map<int64_t, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}},), iter)
    return convert_result(Pair{Int64, Bool}, res)::Pair{Int64, Bool}
end
*/
extern "C" const std::pair<const int64_t, bool> * std_map_int64_t_bool_const_iterator_getindex(
    std::map<int64_t, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_bool_const_iterator_inc_(
    std::map<int64_t, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_bool_const_iterator_dec_(
    std::map<int64_t, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, Bool}, map::STL.StdMaps.StdMap{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}}, Ptr{STL.StdMaps.StdMap{Int64, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_bool_const_iterator_is_cbegin(
    const std::map<int64_t, bool>::const_iterator * restrict iter,
    const std::map<int64_t, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, Bool}, map::STL.StdMaps.StdMap{Int64, Bool})
    res = ccall(("std_map_int64_t_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Bool}}, Ptr{STL.StdMaps.StdMap{Int64, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_bool_const_iterator_is_cend(
    const std::map<int64_t, bool>::const_iterator * restrict iter,
    const std::map<int64_t, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{Float32})
    res = ccall(("std_map_int64_t_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Float32}}, ())
    return StdMap{Int64, Float32}(res)::STL.StdMaps.StdMap{Int64, Float32}
end
*/
extern "C" std::map<int64_t, float> * std_map_int64_t_float_new(
    
) {
    return new std::map<int64_t, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, Float32})
    res = ccall(("std_map_int64_t_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_float_delete(
    std::map<int64_t, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, Float32})
    res = ccall(("std_map_int64_t_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Float32}}, (Ptr{STL.StdMaps.StdMap{Int64, Float32}},), map)
    return StdMap{Int64, Float32}(res)::STL.StdMaps.StdMap{Int64, Float32}
end
*/
extern "C" std::map<int64_t, float> * std_map_int64_t_float_copy(
    const std::map<int64_t, float> * restrict map
) {
    return new std::map<int64_t, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, Float32})
    res = ccall(("std_map_int64_t_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_float_length(
    const std::map<int64_t, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, Float32}, key::Any)
    res = ccall(("std_map_int64_t_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Float32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_float_haskey(
    const std::map<int64_t, float> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, Float32}, key::Any)
    res = ccall(("std_map_int64_t_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{Int64, Float32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_int64_t_float_getindex(
    std::map<int64_t, float> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Float32}}, Ptr{Float32}, Ptr{Int64}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_float_setindex_(
    std::map<int64_t, float> * restrict map,
    float const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, Float32}, key::Any)
    res = ccall(("std_map_int64_t_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Float32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, Float32}
end
*/
extern "C" void std_map_int64_t_float_delete_(
    std::map<int64_t, float> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, Float32}, map2::STL.StdMaps.StdMap{Int64, Float32})
    res = ccall(("std_map_int64_t_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, Float32}}, Ptr{STL.StdMaps.StdMap{Int64, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_float_equals(
    const std::map<int64_t, float> * restrict map1,
    const std::map<int64_t, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, Float32})
    res = ccall(("std_map_int64_t_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}}, (Ptr{STL.StdMaps.StdMap{Int64, Float32}},), map)
    return StdMapIterator{Int64, Float32}(res)::STL.StdMaps.StdMapIterator{Int64, Float32}
end
*/
extern "C" std::map<int64_t, float>::const_iterator * std_map_int64_t_float_cbegin(
    const std::map<int64_t, float> * restrict map
) {
    return new std::map<int64_t, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, Float32})
    res = ccall(("std_map_int64_t_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}}, (Ptr{STL.StdMaps.StdMap{Int64, Float32}},), map)
    return StdMapIterator{Int64, Float32}(res)::STL.StdMaps.StdMapIterator{Int64, Float32}
end
*/
extern "C" std::map<int64_t, float>::const_iterator * std_map_int64_t_float_cend(
    const std::map<int64_t, float> * restrict map
) {
    return new std::map<int64_t, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{Float32})
    res = ccall(("std_map_int64_t_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Float32}}, ())
    return StdMapIterator{Int64, Float32}(res)::STL.StdMaps.StdMapIterator{Int64, Float32}
end
*/
extern "C" std::map<int64_t, float>::const_iterator * std_map_int64_t_float_const_iterator_new(
    
) {
    return new std::map<int64_t, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, Float32})
    res = ccall(("std_map_int64_t_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_float_const_iterator_delete(
    std::map<int64_t, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, Float32}, iter2::STL.StdMaps.StdMapIterator{Int64, Float32})
    res = ccall(("std_map_int64_t_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}}, Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_float_const_iterator_equals(
    const std::map<int64_t, float>::const_iterator * restrict iter1,
    const std::map<int64_t, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, Float32})
    res = ccall(("std_map_int64_t_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}},), iter)
    return convert_result(Pair{Int64, Float32}, res)::Pair{Int64, Float32}
end
*/
extern "C" const std::pair<const int64_t, float> * std_map_int64_t_float_const_iterator_getindex(
    std::map<int64_t, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, Float32})
    res = ccall(("std_map_int64_t_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_float_const_iterator_inc_(
    std::map<int64_t, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, Float32})
    res = ccall(("std_map_int64_t_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_float_const_iterator_dec_(
    std::map<int64_t, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, Float32}, map::STL.StdMaps.StdMap{Int64, Float32})
    res = ccall(("std_map_int64_t_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}}, Ptr{STL.StdMaps.StdMap{Int64, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_float_const_iterator_is_cbegin(
    const std::map<int64_t, float>::const_iterator * restrict iter,
    const std::map<int64_t, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, Float32}, map::STL.StdMaps.StdMap{Int64, Float32})
    res = ccall(("std_map_int64_t_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float32}}, Ptr{STL.StdMaps.StdMap{Int64, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_float_const_iterator_is_cend(
    const std::map<int64_t, float>::const_iterator * restrict iter,
    const std::map<int64_t, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{Float64})
    res = ccall(("std_map_int64_t_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Float64}}, ())
    return StdMap{Int64, Float64}(res)::STL.StdMaps.StdMap{Int64, Float64}
end
*/
extern "C" std::map<int64_t, double> * std_map_int64_t_double_new(
    
) {
    return new std::map<int64_t, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, Float64})
    res = ccall(("std_map_int64_t_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_double_delete(
    std::map<int64_t, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, Float64})
    res = ccall(("std_map_int64_t_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Float64}}, (Ptr{STL.StdMaps.StdMap{Int64, Float64}},), map)
    return StdMap{Int64, Float64}(res)::STL.StdMaps.StdMap{Int64, Float64}
end
*/
extern "C" std::map<int64_t, double> * std_map_int64_t_double_copy(
    const std::map<int64_t, double> * restrict map
) {
    return new std::map<int64_t, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, Float64})
    res = ccall(("std_map_int64_t_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_double_length(
    const std::map<int64_t, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, Float64}, key::Any)
    res = ccall(("std_map_int64_t_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Float64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_double_haskey(
    const std::map<int64_t, double> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, Float64}, key::Any)
    res = ccall(("std_map_int64_t_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{Int64, Float64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_int64_t_double_getindex(
    std::map<int64_t, double> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Float64}}, Ptr{Float64}, Ptr{Int64}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_double_setindex_(
    std::map<int64_t, double> * restrict map,
    double const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, Float64}, key::Any)
    res = ccall(("std_map_int64_t_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Float64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, Float64}
end
*/
extern "C" void std_map_int64_t_double_delete_(
    std::map<int64_t, double> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, Float64}, map2::STL.StdMaps.StdMap{Int64, Float64})
    res = ccall(("std_map_int64_t_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, Float64}}, Ptr{STL.StdMaps.StdMap{Int64, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_double_equals(
    const std::map<int64_t, double> * restrict map1,
    const std::map<int64_t, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, Float64})
    res = ccall(("std_map_int64_t_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}}, (Ptr{STL.StdMaps.StdMap{Int64, Float64}},), map)
    return StdMapIterator{Int64, Float64}(res)::STL.StdMaps.StdMapIterator{Int64, Float64}
end
*/
extern "C" std::map<int64_t, double>::const_iterator * std_map_int64_t_double_cbegin(
    const std::map<int64_t, double> * restrict map
) {
    return new std::map<int64_t, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, Float64})
    res = ccall(("std_map_int64_t_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}}, (Ptr{STL.StdMaps.StdMap{Int64, Float64}},), map)
    return StdMapIterator{Int64, Float64}(res)::STL.StdMaps.StdMapIterator{Int64, Float64}
end
*/
extern "C" std::map<int64_t, double>::const_iterator * std_map_int64_t_double_cend(
    const std::map<int64_t, double> * restrict map
) {
    return new std::map<int64_t, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{Float64})
    res = ccall(("std_map_int64_t_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Float64}}, ())
    return StdMapIterator{Int64, Float64}(res)::STL.StdMaps.StdMapIterator{Int64, Float64}
end
*/
extern "C" std::map<int64_t, double>::const_iterator * std_map_int64_t_double_const_iterator_new(
    
) {
    return new std::map<int64_t, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, Float64})
    res = ccall(("std_map_int64_t_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_double_const_iterator_delete(
    std::map<int64_t, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, Float64}, iter2::STL.StdMaps.StdMapIterator{Int64, Float64})
    res = ccall(("std_map_int64_t_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}}, Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_double_const_iterator_equals(
    const std::map<int64_t, double>::const_iterator * restrict iter1,
    const std::map<int64_t, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, Float64})
    res = ccall(("std_map_int64_t_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}},), iter)
    return convert_result(Pair{Int64, Float64}, res)::Pair{Int64, Float64}
end
*/
extern "C" const std::pair<const int64_t, double> * std_map_int64_t_double_const_iterator_getindex(
    std::map<int64_t, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, Float64})
    res = ccall(("std_map_int64_t_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_double_const_iterator_inc_(
    std::map<int64_t, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, Float64})
    res = ccall(("std_map_int64_t_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_double_const_iterator_dec_(
    std::map<int64_t, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, Float64}, map::STL.StdMaps.StdMap{Int64, Float64})
    res = ccall(("std_map_int64_t_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}}, Ptr{STL.StdMaps.StdMap{Int64, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_double_const_iterator_is_cbegin(
    const std::map<int64_t, double>::const_iterator * restrict iter,
    const std::map<int64_t, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, Float64}, map::STL.StdMaps.StdMap{Int64, Float64})
    res = ccall(("std_map_int64_t_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Float64}}, Ptr{STL.StdMaps.StdMap{Int64, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_double_const_iterator_is_cend(
    const std::map<int64_t, double>::const_iterator * restrict iter,
    const std::map<int64_t, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{Int16})
    res = ccall(("std_map_int64_t_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int16}}, ())
    return StdMap{Int64, Int16}(res)::STL.StdMaps.StdMap{Int64, Int16}
end
*/
extern "C" std::map<int64_t, int16_t> * std_map_int64_t_int16_t_new(
    
) {
    return new std::map<int64_t, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int16_t_delete(
    std::map<int64_t, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int16}}, (Ptr{STL.StdMaps.StdMap{Int64, Int16}},), map)
    return StdMap{Int64, Int16}(res)::STL.StdMaps.StdMap{Int64, Int16}
end
*/
extern "C" std::map<int64_t, int16_t> * std_map_int64_t_int16_t_copy(
    const std::map<int64_t, int16_t> * restrict map
) {
    return new std::map<int64_t, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_int16_t_length(
    const std::map<int64_t, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, Int16}, key::Any)
    res = ccall(("std_map_int64_t_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Int16}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_int16_t_haskey(
    const std::map<int64_t, int16_t> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, Int16}, key::Any)
    res = ccall(("std_map_int64_t_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{Int64, Int16}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_int64_t_int16_t_getindex(
    std::map<int64_t, int16_t> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int16}}, Ptr{Int16}, Ptr{Int64}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int16_t_setindex_(
    std::map<int64_t, int16_t> * restrict map,
    int16_t const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, Int16}, key::Any)
    res = ccall(("std_map_int64_t_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int16}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, Int16}
end
*/
extern "C" void std_map_int64_t_int16_t_delete_(
    std::map<int64_t, int16_t> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, Int16}, map2::STL.StdMaps.StdMap{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, Int16}}, Ptr{STL.StdMaps.StdMap{Int64, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int16_t_equals(
    const std::map<int64_t, int16_t> * restrict map1,
    const std::map<int64_t, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}}, (Ptr{STL.StdMaps.StdMap{Int64, Int16}},), map)
    return StdMapIterator{Int64, Int16}(res)::STL.StdMaps.StdMapIterator{Int64, Int16}
end
*/
extern "C" std::map<int64_t, int16_t>::const_iterator * std_map_int64_t_int16_t_cbegin(
    const std::map<int64_t, int16_t> * restrict map
) {
    return new std::map<int64_t, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}}, (Ptr{STL.StdMaps.StdMap{Int64, Int16}},), map)
    return StdMapIterator{Int64, Int16}(res)::STL.StdMaps.StdMapIterator{Int64, Int16}
end
*/
extern "C" std::map<int64_t, int16_t>::const_iterator * std_map_int64_t_int16_t_cend(
    const std::map<int64_t, int16_t> * restrict map
) {
    return new std::map<int64_t, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{Int16})
    res = ccall(("std_map_int64_t_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int16}}, ())
    return StdMapIterator{Int64, Int16}(res)::STL.StdMaps.StdMapIterator{Int64, Int16}
end
*/
extern "C" std::map<int64_t, int16_t>::const_iterator * std_map_int64_t_int16_t_const_iterator_new(
    
) {
    return new std::map<int64_t, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int16_t_const_iterator_delete(
    std::map<int64_t, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, Int16}, iter2::STL.StdMaps.StdMapIterator{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}}, Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int16_t_const_iterator_equals(
    const std::map<int64_t, int16_t>::const_iterator * restrict iter1,
    const std::map<int64_t, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}},), iter)
    return convert_result(Pair{Int64, Int16}, res)::Pair{Int64, Int16}
end
*/
extern "C" const std::pair<const int64_t, int16_t> * std_map_int64_t_int16_t_const_iterator_getindex(
    std::map<int64_t, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int16_t_const_iterator_inc_(
    std::map<int64_t, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int16_t_const_iterator_dec_(
    std::map<int64_t, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, Int16}, map::STL.StdMaps.StdMap{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}}, Ptr{STL.StdMaps.StdMap{Int64, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int16_t_const_iterator_is_cbegin(
    const std::map<int64_t, int16_t>::const_iterator * restrict iter,
    const std::map<int64_t, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, Int16}, map::STL.StdMaps.StdMap{Int64, Int16})
    res = ccall(("std_map_int64_t_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int16}}, Ptr{STL.StdMaps.StdMap{Int64, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int16_t_const_iterator_is_cend(
    const std::map<int64_t, int16_t>::const_iterator * restrict iter,
    const std::map<int64_t, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{Int32})
    res = ccall(("std_map_int64_t_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int32}}, ())
    return StdMap{Int64, Int32}(res)::STL.StdMaps.StdMap{Int64, Int32}
end
*/
extern "C" std::map<int64_t, int32_t> * std_map_int64_t_int32_t_new(
    
) {
    return new std::map<int64_t, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int32_t_delete(
    std::map<int64_t, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int32}}, (Ptr{STL.StdMaps.StdMap{Int64, Int32}},), map)
    return StdMap{Int64, Int32}(res)::STL.StdMaps.StdMap{Int64, Int32}
end
*/
extern "C" std::map<int64_t, int32_t> * std_map_int64_t_int32_t_copy(
    const std::map<int64_t, int32_t> * restrict map
) {
    return new std::map<int64_t, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_int32_t_length(
    const std::map<int64_t, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, Int32}, key::Any)
    res = ccall(("std_map_int64_t_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Int32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_int32_t_haskey(
    const std::map<int64_t, int32_t> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, Int32}, key::Any)
    res = ccall(("std_map_int64_t_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{Int64, Int32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_int64_t_int32_t_getindex(
    std::map<int64_t, int32_t> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int32}}, Ptr{Int32}, Ptr{Int64}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int32_t_setindex_(
    std::map<int64_t, int32_t> * restrict map,
    int32_t const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, Int32}, key::Any)
    res = ccall(("std_map_int64_t_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, Int32}
end
*/
extern "C" void std_map_int64_t_int32_t_delete_(
    std::map<int64_t, int32_t> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, Int32}, map2::STL.StdMaps.StdMap{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, Int32}}, Ptr{STL.StdMaps.StdMap{Int64, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int32_t_equals(
    const std::map<int64_t, int32_t> * restrict map1,
    const std::map<int64_t, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}}, (Ptr{STL.StdMaps.StdMap{Int64, Int32}},), map)
    return StdMapIterator{Int64, Int32}(res)::STL.StdMaps.StdMapIterator{Int64, Int32}
end
*/
extern "C" std::map<int64_t, int32_t>::const_iterator * std_map_int64_t_int32_t_cbegin(
    const std::map<int64_t, int32_t> * restrict map
) {
    return new std::map<int64_t, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}}, (Ptr{STL.StdMaps.StdMap{Int64, Int32}},), map)
    return StdMapIterator{Int64, Int32}(res)::STL.StdMaps.StdMapIterator{Int64, Int32}
end
*/
extern "C" std::map<int64_t, int32_t>::const_iterator * std_map_int64_t_int32_t_cend(
    const std::map<int64_t, int32_t> * restrict map
) {
    return new std::map<int64_t, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{Int32})
    res = ccall(("std_map_int64_t_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int32}}, ())
    return StdMapIterator{Int64, Int32}(res)::STL.StdMaps.StdMapIterator{Int64, Int32}
end
*/
extern "C" std::map<int64_t, int32_t>::const_iterator * std_map_int64_t_int32_t_const_iterator_new(
    
) {
    return new std::map<int64_t, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int32_t_const_iterator_delete(
    std::map<int64_t, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, Int32}, iter2::STL.StdMaps.StdMapIterator{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}}, Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int32_t_const_iterator_equals(
    const std::map<int64_t, int32_t>::const_iterator * restrict iter1,
    const std::map<int64_t, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}},), iter)
    return convert_result(Pair{Int64, Int32}, res)::Pair{Int64, Int32}
end
*/
extern "C" const std::pair<const int64_t, int32_t> * std_map_int64_t_int32_t_const_iterator_getindex(
    std::map<int64_t, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int32_t_const_iterator_inc_(
    std::map<int64_t, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int32_t_const_iterator_dec_(
    std::map<int64_t, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, Int32}, map::STL.StdMaps.StdMap{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}}, Ptr{STL.StdMaps.StdMap{Int64, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int32_t_const_iterator_is_cbegin(
    const std::map<int64_t, int32_t>::const_iterator * restrict iter,
    const std::map<int64_t, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, Int32}, map::STL.StdMaps.StdMap{Int64, Int32})
    res = ccall(("std_map_int64_t_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int32}}, Ptr{STL.StdMaps.StdMap{Int64, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int32_t_const_iterator_is_cend(
    const std::map<int64_t, int32_t>::const_iterator * restrict iter,
    const std::map<int64_t, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{Int64})
    res = ccall(("std_map_int64_t_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int64}}, ())
    return StdMap{Int64, Int64}(res)::STL.StdMaps.StdMap{Int64, Int64}
end
*/
extern "C" std::map<int64_t, int64_t> * std_map_int64_t_int64_t_new(
    
) {
    return new std::map<int64_t, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int64_t_delete(
    std::map<int64_t, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int64}}, (Ptr{STL.StdMaps.StdMap{Int64, Int64}},), map)
    return StdMap{Int64, Int64}(res)::STL.StdMaps.StdMap{Int64, Int64}
end
*/
extern "C" std::map<int64_t, int64_t> * std_map_int64_t_int64_t_copy(
    const std::map<int64_t, int64_t> * restrict map
) {
    return new std::map<int64_t, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_int64_t_length(
    const std::map<int64_t, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, Int64}, key::Any)
    res = ccall(("std_map_int64_t_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Int64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_int64_t_haskey(
    const std::map<int64_t, int64_t> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, Int64}, key::Any)
    res = ccall(("std_map_int64_t_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{Int64, Int64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_int64_t_int64_t_getindex(
    std::map<int64_t, int64_t> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int64}}, Ptr{Int64}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int64_t_setindex_(
    std::map<int64_t, int64_t> * restrict map,
    int64_t const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, Int64}, key::Any)
    res = ccall(("std_map_int64_t_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, Int64}
end
*/
extern "C" void std_map_int64_t_int64_t_delete_(
    std::map<int64_t, int64_t> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, Int64}, map2::STL.StdMaps.StdMap{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, Int64}}, Ptr{STL.StdMaps.StdMap{Int64, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int64_t_equals(
    const std::map<int64_t, int64_t> * restrict map1,
    const std::map<int64_t, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}}, (Ptr{STL.StdMaps.StdMap{Int64, Int64}},), map)
    return StdMapIterator{Int64, Int64}(res)::STL.StdMaps.StdMapIterator{Int64, Int64}
end
*/
extern "C" std::map<int64_t, int64_t>::const_iterator * std_map_int64_t_int64_t_cbegin(
    const std::map<int64_t, int64_t> * restrict map
) {
    return new std::map<int64_t, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}}, (Ptr{STL.StdMaps.StdMap{Int64, Int64}},), map)
    return StdMapIterator{Int64, Int64}(res)::STL.StdMaps.StdMapIterator{Int64, Int64}
end
*/
extern "C" std::map<int64_t, int64_t>::const_iterator * std_map_int64_t_int64_t_cend(
    const std::map<int64_t, int64_t> * restrict map
) {
    return new std::map<int64_t, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{Int64})
    res = ccall(("std_map_int64_t_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int64}}, ())
    return StdMapIterator{Int64, Int64}(res)::STL.StdMaps.StdMapIterator{Int64, Int64}
end
*/
extern "C" std::map<int64_t, int64_t>::const_iterator * std_map_int64_t_int64_t_const_iterator_new(
    
) {
    return new std::map<int64_t, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int64_t_const_iterator_delete(
    std::map<int64_t, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, Int64}, iter2::STL.StdMaps.StdMapIterator{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}}, Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int64_t_const_iterator_equals(
    const std::map<int64_t, int64_t>::const_iterator * restrict iter1,
    const std::map<int64_t, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}},), iter)
    return convert_result(Pair{Int64, Int64}, res)::Pair{Int64, Int64}
end
*/
extern "C" const std::pair<const int64_t, int64_t> * std_map_int64_t_int64_t_const_iterator_getindex(
    std::map<int64_t, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int64_t_const_iterator_inc_(
    std::map<int64_t, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int64_t_const_iterator_dec_(
    std::map<int64_t, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, Int64}, map::STL.StdMaps.StdMap{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}}, Ptr{STL.StdMaps.StdMap{Int64, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int64_t_const_iterator_is_cbegin(
    const std::map<int64_t, int64_t>::const_iterator * restrict iter,
    const std::map<int64_t, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, Int64}, map::STL.StdMaps.StdMap{Int64, Int64})
    res = ccall(("std_map_int64_t_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int64}}, Ptr{STL.StdMaps.StdMap{Int64, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int64_t_const_iterator_is_cend(
    const std::map<int64_t, int64_t>::const_iterator * restrict iter,
    const std::map<int64_t, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{Int8})
    res = ccall(("std_map_int64_t_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int8}}, ())
    return StdMap{Int64, Int8}(res)::STL.StdMaps.StdMap{Int64, Int8}
end
*/
extern "C" std::map<int64_t, int8_t> * std_map_int64_t_int8_t_new(
    
) {
    return new std::map<int64_t, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int8_t_delete(
    std::map<int64_t, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int8}}, (Ptr{STL.StdMaps.StdMap{Int64, Int8}},), map)
    return StdMap{Int64, Int8}(res)::STL.StdMaps.StdMap{Int64, Int8}
end
*/
extern "C" std::map<int64_t, int8_t> * std_map_int64_t_int8_t_copy(
    const std::map<int64_t, int8_t> * restrict map
) {
    return new std::map<int64_t, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_int8_t_length(
    const std::map<int64_t, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, Int8}, key::Any)
    res = ccall(("std_map_int64_t_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Int8}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_int8_t_haskey(
    const std::map<int64_t, int8_t> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, Int8}, key::Any)
    res = ccall(("std_map_int64_t_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{Int64, Int8}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_int64_t_int8_t_getindex(
    std::map<int64_t, int8_t> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int8}}, Ptr{Int8}, Ptr{Int64}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int8_t_setindex_(
    std::map<int64_t, int8_t> * restrict map,
    int8_t const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, Int8}, key::Any)
    res = ccall(("std_map_int64_t_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Int8}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, Int8}
end
*/
extern "C" void std_map_int64_t_int8_t_delete_(
    std::map<int64_t, int8_t> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, Int8}, map2::STL.StdMaps.StdMap{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, Int8}}, Ptr{STL.StdMaps.StdMap{Int64, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int8_t_equals(
    const std::map<int64_t, int8_t> * restrict map1,
    const std::map<int64_t, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}}, (Ptr{STL.StdMaps.StdMap{Int64, Int8}},), map)
    return StdMapIterator{Int64, Int8}(res)::STL.StdMaps.StdMapIterator{Int64, Int8}
end
*/
extern "C" std::map<int64_t, int8_t>::const_iterator * std_map_int64_t_int8_t_cbegin(
    const std::map<int64_t, int8_t> * restrict map
) {
    return new std::map<int64_t, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}}, (Ptr{STL.StdMaps.StdMap{Int64, Int8}},), map)
    return StdMapIterator{Int64, Int8}(res)::STL.StdMaps.StdMapIterator{Int64, Int8}
end
*/
extern "C" std::map<int64_t, int8_t>::const_iterator * std_map_int64_t_int8_t_cend(
    const std::map<int64_t, int8_t> * restrict map
) {
    return new std::map<int64_t, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{Int8})
    res = ccall(("std_map_int64_t_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Int8}}, ())
    return StdMapIterator{Int64, Int8}(res)::STL.StdMaps.StdMapIterator{Int64, Int8}
end
*/
extern "C" std::map<int64_t, int8_t>::const_iterator * std_map_int64_t_int8_t_const_iterator_new(
    
) {
    return new std::map<int64_t, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int8_t_const_iterator_delete(
    std::map<int64_t, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, Int8}, iter2::STL.StdMaps.StdMapIterator{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}}, Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int8_t_const_iterator_equals(
    const std::map<int64_t, int8_t>::const_iterator * restrict iter1,
    const std::map<int64_t, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}},), iter)
    return convert_result(Pair{Int64, Int8}, res)::Pair{Int64, Int8}
end
*/
extern "C" const std::pair<const int64_t, int8_t> * std_map_int64_t_int8_t_const_iterator_getindex(
    std::map<int64_t, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int8_t_const_iterator_inc_(
    std::map<int64_t, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_int8_t_const_iterator_dec_(
    std::map<int64_t, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, Int8}, map::STL.StdMaps.StdMap{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}}, Ptr{STL.StdMaps.StdMap{Int64, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int8_t_const_iterator_is_cbegin(
    const std::map<int64_t, int8_t>::const_iterator * restrict iter,
    const std::map<int64_t, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, Int8}, map::STL.StdMaps.StdMap{Int64, Int8})
    res = ccall(("std_map_int64_t_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Int8}}, Ptr{STL.StdMaps.StdMap{Int64, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_int8_t_const_iterator_is_cend(
    const std::map<int64_t, int8_t>::const_iterator * restrict iter,
    const std::map<int64_t, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}, ())
    return StdMap{Int64, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Int64, Ptr{Nothing}}
end
*/
extern "C" std::map<int64_t, void *> * std_map_int64_t_void___new(
    
) {
    return new std::map<int64_t, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_void___delete(
    std::map<int64_t, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}},), map)
    return StdMap{Int64, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Int64, Ptr{Nothing}}
end
*/
extern "C" std::map<int64_t, void *> * std_map_int64_t_void___copy(
    const std::map<int64_t, void *> * restrict map
) {
    return new std::map<int64_t, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_void___length(
    const std::map<int64_t, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int64_t_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_void___haskey(
    const std::map<int64_t, void *> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int64_t_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_int64_t_void___getindex(
    std::map<int64_t, void *> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{Int64}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_void___setindex_(
    std::map<int64_t, void *> * restrict map,
    void * const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int64_t_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}}
end
*/
extern "C" void std_map_int64_t_void___delete_(
    std::map<int64_t, void *> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_void___equals(
    const std::map<int64_t, void *> * restrict map1,
    const std::map<int64_t, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}},), map)
    return StdMapIterator{Int64, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}
end
*/
extern "C" std::map<int64_t, void *>::const_iterator * std_map_int64_t_void___cbegin(
    const std::map<int64_t, void *> * restrict map
) {
    return new std::map<int64_t, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}},), map)
    return StdMapIterator{Int64, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}
end
*/
extern "C" std::map<int64_t, void *>::const_iterator * std_map_int64_t_void___cend(
    const std::map<int64_t, void *> * restrict map
) {
    return new std::map<int64_t, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}, ())
    return StdMapIterator{Int64, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}
end
*/
extern "C" std::map<int64_t, void *>::const_iterator * std_map_int64_t_void___const_iterator_new(
    
) {
    return new std::map<int64_t, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_void___const_iterator_delete(
    std::map<int64_t, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_void___const_iterator_equals(
    const std::map<int64_t, void *>::const_iterator * restrict iter1,
    const std::map<int64_t, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}},), iter)
    return convert_result(Pair{Int64, Ptr{Nothing}}, res)::Pair{Int64, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const int64_t, void *> * std_map_int64_t_void___const_iterator_getindex(
    std::map<int64_t, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_void___const_iterator_inc_(
    std::map<int64_t, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_void___const_iterator_dec_(
    std::map<int64_t, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_void___const_iterator_is_cbegin(
    const std::map<int64_t, void *>::const_iterator * restrict iter,
    const std::map<int64_t, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Int64, Ptr{Nothing}})
    res = ccall(("std_map_int64_t_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int64, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_void___const_iterator_is_cend(
    const std::map<int64_t, void *>::const_iterator * restrict iter,
    const std::map<int64_t, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{UInt16})
    res = ccall(("std_map_int64_t_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt16}}, ())
    return StdMap{Int64, UInt16}(res)::STL.StdMaps.StdMap{Int64, UInt16}
end
*/
extern "C" std::map<int64_t, uint16_t> * std_map_int64_t_uint16_t_new(
    
) {
    return new std::map<int64_t, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint16_t_delete(
    std::map<int64_t, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}},), map)
    return StdMap{Int64, UInt16}(res)::STL.StdMaps.StdMap{Int64, UInt16}
end
*/
extern "C" std::map<int64_t, uint16_t> * std_map_int64_t_uint16_t_copy(
    const std::map<int64_t, uint16_t> * restrict map
) {
    return new std::map<int64_t, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_uint16_t_length(
    const std::map<int64_t, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, UInt16}, key::Any)
    res = ccall(("std_map_int64_t_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_uint16_t_haskey(
    const std::map<int64_t, uint16_t> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, UInt16}, key::Any)
    res = ccall(("std_map_int64_t_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_int64_t_uint16_t_getindex(
    std::map<int64_t, uint16_t> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}}, Ptr{UInt16}, Ptr{Int64}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint16_t_setindex_(
    std::map<int64_t, uint16_t> * restrict map,
    uint16_t const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, UInt16}, key::Any)
    res = ccall(("std_map_int64_t_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, UInt16}
end
*/
extern "C" void std_map_int64_t_uint16_t_delete_(
    std::map<int64_t, uint16_t> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, UInt16}, map2::STL.StdMaps.StdMap{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}}, Ptr{STL.StdMaps.StdMap{Int64, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint16_t_equals(
    const std::map<int64_t, uint16_t> * restrict map1,
    const std::map<int64_t, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}},), map)
    return StdMapIterator{Int64, UInt16}(res)::STL.StdMaps.StdMapIterator{Int64, UInt16}
end
*/
extern "C" std::map<int64_t, uint16_t>::const_iterator * std_map_int64_t_uint16_t_cbegin(
    const std::map<int64_t, uint16_t> * restrict map
) {
    return new std::map<int64_t, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt16}},), map)
    return StdMapIterator{Int64, UInt16}(res)::STL.StdMaps.StdMapIterator{Int64, UInt16}
end
*/
extern "C" std::map<int64_t, uint16_t>::const_iterator * std_map_int64_t_uint16_t_cend(
    const std::map<int64_t, uint16_t> * restrict map
) {
    return new std::map<int64_t, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{UInt16})
    res = ccall(("std_map_int64_t_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt16}}, ())
    return StdMapIterator{Int64, UInt16}(res)::STL.StdMaps.StdMapIterator{Int64, UInt16}
end
*/
extern "C" std::map<int64_t, uint16_t>::const_iterator * std_map_int64_t_uint16_t_const_iterator_new(
    
) {
    return new std::map<int64_t, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint16_t_const_iterator_delete(
    std::map<int64_t, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, UInt16}, iter2::STL.StdMaps.StdMapIterator{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint16_t_const_iterator_equals(
    const std::map<int64_t, uint16_t>::const_iterator * restrict iter1,
    const std::map<int64_t, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}},), iter)
    return convert_result(Pair{Int64, UInt16}, res)::Pair{Int64, UInt16}
end
*/
extern "C" const std::pair<const int64_t, uint16_t> * std_map_int64_t_uint16_t_const_iterator_getindex(
    std::map<int64_t, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint16_t_const_iterator_inc_(
    std::map<int64_t, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint16_t_const_iterator_dec_(
    std::map<int64_t, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, UInt16}, map::STL.StdMaps.StdMap{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}}, Ptr{STL.StdMaps.StdMap{Int64, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint16_t_const_iterator_is_cbegin(
    const std::map<int64_t, uint16_t>::const_iterator * restrict iter,
    const std::map<int64_t, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, UInt16}, map::STL.StdMaps.StdMap{Int64, UInt16})
    res = ccall(("std_map_int64_t_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt16}}, Ptr{STL.StdMaps.StdMap{Int64, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint16_t_const_iterator_is_cend(
    const std::map<int64_t, uint16_t>::const_iterator * restrict iter,
    const std::map<int64_t, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{UInt32})
    res = ccall(("std_map_int64_t_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt32}}, ())
    return StdMap{Int64, UInt32}(res)::STL.StdMaps.StdMap{Int64, UInt32}
end
*/
extern "C" std::map<int64_t, uint32_t> * std_map_int64_t_uint32_t_new(
    
) {
    return new std::map<int64_t, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint32_t_delete(
    std::map<int64_t, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}},), map)
    return StdMap{Int64, UInt32}(res)::STL.StdMaps.StdMap{Int64, UInt32}
end
*/
extern "C" std::map<int64_t, uint32_t> * std_map_int64_t_uint32_t_copy(
    const std::map<int64_t, uint32_t> * restrict map
) {
    return new std::map<int64_t, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_uint32_t_length(
    const std::map<int64_t, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, UInt32}, key::Any)
    res = ccall(("std_map_int64_t_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_uint32_t_haskey(
    const std::map<int64_t, uint32_t> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, UInt32}, key::Any)
    res = ccall(("std_map_int64_t_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_int64_t_uint32_t_getindex(
    std::map<int64_t, uint32_t> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}}, Ptr{UInt32}, Ptr{Int64}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint32_t_setindex_(
    std::map<int64_t, uint32_t> * restrict map,
    uint32_t const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, UInt32}, key::Any)
    res = ccall(("std_map_int64_t_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, UInt32}
end
*/
extern "C" void std_map_int64_t_uint32_t_delete_(
    std::map<int64_t, uint32_t> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, UInt32}, map2::STL.StdMaps.StdMap{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}}, Ptr{STL.StdMaps.StdMap{Int64, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint32_t_equals(
    const std::map<int64_t, uint32_t> * restrict map1,
    const std::map<int64_t, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}},), map)
    return StdMapIterator{Int64, UInt32}(res)::STL.StdMaps.StdMapIterator{Int64, UInt32}
end
*/
extern "C" std::map<int64_t, uint32_t>::const_iterator * std_map_int64_t_uint32_t_cbegin(
    const std::map<int64_t, uint32_t> * restrict map
) {
    return new std::map<int64_t, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt32}},), map)
    return StdMapIterator{Int64, UInt32}(res)::STL.StdMaps.StdMapIterator{Int64, UInt32}
end
*/
extern "C" std::map<int64_t, uint32_t>::const_iterator * std_map_int64_t_uint32_t_cend(
    const std::map<int64_t, uint32_t> * restrict map
) {
    return new std::map<int64_t, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{UInt32})
    res = ccall(("std_map_int64_t_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt32}}, ())
    return StdMapIterator{Int64, UInt32}(res)::STL.StdMaps.StdMapIterator{Int64, UInt32}
end
*/
extern "C" std::map<int64_t, uint32_t>::const_iterator * std_map_int64_t_uint32_t_const_iterator_new(
    
) {
    return new std::map<int64_t, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint32_t_const_iterator_delete(
    std::map<int64_t, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, UInt32}, iter2::STL.StdMaps.StdMapIterator{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint32_t_const_iterator_equals(
    const std::map<int64_t, uint32_t>::const_iterator * restrict iter1,
    const std::map<int64_t, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}},), iter)
    return convert_result(Pair{Int64, UInt32}, res)::Pair{Int64, UInt32}
end
*/
extern "C" const std::pair<const int64_t, uint32_t> * std_map_int64_t_uint32_t_const_iterator_getindex(
    std::map<int64_t, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint32_t_const_iterator_inc_(
    std::map<int64_t, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint32_t_const_iterator_dec_(
    std::map<int64_t, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, UInt32}, map::STL.StdMaps.StdMap{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}}, Ptr{STL.StdMaps.StdMap{Int64, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint32_t_const_iterator_is_cbegin(
    const std::map<int64_t, uint32_t>::const_iterator * restrict iter,
    const std::map<int64_t, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, UInt32}, map::STL.StdMaps.StdMap{Int64, UInt32})
    res = ccall(("std_map_int64_t_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt32}}, Ptr{STL.StdMaps.StdMap{Int64, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint32_t_const_iterator_is_cend(
    const std::map<int64_t, uint32_t>::const_iterator * restrict iter,
    const std::map<int64_t, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{UInt64})
    res = ccall(("std_map_int64_t_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt64}}, ())
    return StdMap{Int64, UInt64}(res)::STL.StdMaps.StdMap{Int64, UInt64}
end
*/
extern "C" std::map<int64_t, uint64_t> * std_map_int64_t_uint64_t_new(
    
) {
    return new std::map<int64_t, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint64_t_delete(
    std::map<int64_t, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}},), map)
    return StdMap{Int64, UInt64}(res)::STL.StdMaps.StdMap{Int64, UInt64}
end
*/
extern "C" std::map<int64_t, uint64_t> * std_map_int64_t_uint64_t_copy(
    const std::map<int64_t, uint64_t> * restrict map
) {
    return new std::map<int64_t, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_uint64_t_length(
    const std::map<int64_t, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, UInt64}, key::Any)
    res = ccall(("std_map_int64_t_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_uint64_t_haskey(
    const std::map<int64_t, uint64_t> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, UInt64}, key::Any)
    res = ccall(("std_map_int64_t_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_int64_t_uint64_t_getindex(
    std::map<int64_t, uint64_t> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}}, Ptr{UInt64}, Ptr{Int64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint64_t_setindex_(
    std::map<int64_t, uint64_t> * restrict map,
    uint64_t const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, UInt64}, key::Any)
    res = ccall(("std_map_int64_t_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, UInt64}
end
*/
extern "C" void std_map_int64_t_uint64_t_delete_(
    std::map<int64_t, uint64_t> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, UInt64}, map2::STL.StdMaps.StdMap{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}}, Ptr{STL.StdMaps.StdMap{Int64, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint64_t_equals(
    const std::map<int64_t, uint64_t> * restrict map1,
    const std::map<int64_t, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}},), map)
    return StdMapIterator{Int64, UInt64}(res)::STL.StdMaps.StdMapIterator{Int64, UInt64}
end
*/
extern "C" std::map<int64_t, uint64_t>::const_iterator * std_map_int64_t_uint64_t_cbegin(
    const std::map<int64_t, uint64_t> * restrict map
) {
    return new std::map<int64_t, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt64}},), map)
    return StdMapIterator{Int64, UInt64}(res)::STL.StdMaps.StdMapIterator{Int64, UInt64}
end
*/
extern "C" std::map<int64_t, uint64_t>::const_iterator * std_map_int64_t_uint64_t_cend(
    const std::map<int64_t, uint64_t> * restrict map
) {
    return new std::map<int64_t, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{UInt64})
    res = ccall(("std_map_int64_t_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt64}}, ())
    return StdMapIterator{Int64, UInt64}(res)::STL.StdMaps.StdMapIterator{Int64, UInt64}
end
*/
extern "C" std::map<int64_t, uint64_t>::const_iterator * std_map_int64_t_uint64_t_const_iterator_new(
    
) {
    return new std::map<int64_t, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint64_t_const_iterator_delete(
    std::map<int64_t, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, UInt64}, iter2::STL.StdMaps.StdMapIterator{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint64_t_const_iterator_equals(
    const std::map<int64_t, uint64_t>::const_iterator * restrict iter1,
    const std::map<int64_t, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}},), iter)
    return convert_result(Pair{Int64, UInt64}, res)::Pair{Int64, UInt64}
end
*/
extern "C" const std::pair<const int64_t, uint64_t> * std_map_int64_t_uint64_t_const_iterator_getindex(
    std::map<int64_t, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint64_t_const_iterator_inc_(
    std::map<int64_t, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint64_t_const_iterator_dec_(
    std::map<int64_t, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, UInt64}, map::STL.StdMaps.StdMap{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}}, Ptr{STL.StdMaps.StdMap{Int64, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint64_t_const_iterator_is_cbegin(
    const std::map<int64_t, uint64_t>::const_iterator * restrict iter,
    const std::map<int64_t, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, UInt64}, map::STL.StdMaps.StdMap{Int64, UInt64})
    res = ccall(("std_map_int64_t_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt64}}, Ptr{STL.StdMaps.StdMap{Int64, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint64_t_const_iterator_is_cend(
    const std::map<int64_t, uint64_t>::const_iterator * restrict iter,
    const std::map<int64_t, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int64}, type::Type{UInt8})
    res = ccall(("std_map_int64_t_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt8}}, ())
    return StdMap{Int64, UInt8}(res)::STL.StdMaps.StdMap{Int64, UInt8}
end
*/
extern "C" std::map<int64_t, uint8_t> * std_map_int64_t_uint8_t_new(
    
) {
    return new std::map<int64_t, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint8_t_delete(
    std::map<int64_t, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}},), map)
    return StdMap{Int64, UInt8}(res)::STL.StdMaps.StdMap{Int64, UInt8}
end
*/
extern "C" std::map<int64_t, uint8_t> * std_map_int64_t_uint8_t_copy(
    const std::map<int64_t, uint8_t> * restrict map
) {
    return new std::map<int64_t, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int64_t_uint8_t_length(
    const std::map<int64_t, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int64, UInt8}, key::Any)
    res = ccall(("std_map_int64_t_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int64_t_uint8_t_haskey(
    const std::map<int64_t, uint8_t> * restrict map,
    int64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int64, UInt8}, key::Any)
    res = ccall(("std_map_int64_t_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_int64_t_uint8_t_getindex(
    std::map<int64_t, uint8_t> * restrict map,
    int64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int64, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_int64_t_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}}, Ptr{UInt8}, Ptr{Int64}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{Int64}, convert(Int64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint8_t_setindex_(
    std::map<int64_t, uint8_t> * restrict map,
    uint8_t const * elt,
    int64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int64, UInt8}, key::Any)
    res = ccall(("std_map_int64_t_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}}, Ptr{Int64}), map, convert_arg(Ptr{Int64}, convert(Int64, key)))
    return map::STL.StdMaps.StdMap{Int64, UInt8}
end
*/
extern "C" void std_map_int64_t_uint8_t_delete_(
    std::map<int64_t, uint8_t> * restrict map,
    int64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int64, UInt8}, map2::STL.StdMaps.StdMap{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}}, Ptr{STL.StdMaps.StdMap{Int64, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint8_t_equals(
    const std::map<int64_t, uint8_t> * restrict map1,
    const std::map<int64_t, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}},), map)
    return StdMapIterator{Int64, UInt8}(res)::STL.StdMaps.StdMapIterator{Int64, UInt8}
end
*/
extern "C" std::map<int64_t, uint8_t>::const_iterator * std_map_int64_t_uint8_t_cbegin(
    const std::map<int64_t, uint8_t> * restrict map
) {
    return new std::map<int64_t, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int64, UInt8}},), map)
    return StdMapIterator{Int64, UInt8}(res)::STL.StdMaps.StdMapIterator{Int64, UInt8}
end
*/
extern "C" std::map<int64_t, uint8_t>::const_iterator * std_map_int64_t_uint8_t_cend(
    const std::map<int64_t, uint8_t> * restrict map
) {
    return new std::map<int64_t, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int64}, type::Type{UInt8})
    res = ccall(("std_map_int64_t_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int64, UInt8}}, ())
    return StdMapIterator{Int64, UInt8}(res)::STL.StdMaps.StdMapIterator{Int64, UInt8}
end
*/
extern "C" std::map<int64_t, uint8_t>::const_iterator * std_map_int64_t_uint8_t_const_iterator_new(
    
) {
    return new std::map<int64_t, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint8_t_const_iterator_delete(
    std::map<int64_t, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int64, UInt8}, iter2::STL.StdMaps.StdMapIterator{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint8_t_const_iterator_equals(
    const std::map<int64_t, uint8_t>::const_iterator * restrict iter1,
    const std::map<int64_t, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int64, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}},), iter)
    return convert_result(Pair{Int64, UInt8}, res)::Pair{Int64, UInt8}
end
*/
extern "C" const std::pair<const int64_t, uint8_t> * std_map_int64_t_uint8_t_const_iterator_getindex(
    std::map<int64_t, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint8_t_const_iterator_inc_(
    std::map<int64_t, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int64_t_uint8_t_const_iterator_dec_(
    std::map<int64_t, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int64, UInt8}, map::STL.StdMaps.StdMap{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}}, Ptr{STL.StdMaps.StdMap{Int64, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint8_t_const_iterator_is_cbegin(
    const std::map<int64_t, uint8_t>::const_iterator * restrict iter,
    const std::map<int64_t, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int64, UInt8}, map::STL.StdMaps.StdMap{Int64, UInt8})
    res = ccall(("std_map_int64_t_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int64, UInt8}}, Ptr{STL.StdMaps.StdMap{Int64, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int64_t_uint8_t_const_iterator_is_cend(
    const std::map<int64_t, uint8_t>::const_iterator * restrict iter,
    const std::map<int64_t, uint8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{Bool})
    res = ccall(("std_map_int8_t_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Bool}}, ())
    return StdMap{Int8, Bool}(res)::STL.StdMaps.StdMap{Int8, Bool}
end
*/
extern "C" std::map<int8_t, bool> * std_map_int8_t_bool_new(
    
) {
    return new std::map<int8_t, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_bool_delete(
    std::map<int8_t, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Bool}}, (Ptr{STL.StdMaps.StdMap{Int8, Bool}},), map)
    return StdMap{Int8, Bool}(res)::STL.StdMaps.StdMap{Int8, Bool}
end
*/
extern "C" std::map<int8_t, bool> * std_map_int8_t_bool_copy(
    const std::map<int8_t, bool> * restrict map
) {
    return new std::map<int8_t, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_bool_length(
    const std::map<int8_t, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, Bool}, key::Any)
    res = ccall(("std_map_int8_t_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Bool}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_bool_haskey(
    const std::map<int8_t, bool> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, Bool}, key::Any)
    res = ccall(("std_map_int8_t_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{Int8, Bool}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_int8_t_bool_getindex(
    std::map<int8_t, bool> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Bool}}, Ptr{Bool}, Ptr{Int8}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_bool_setindex_(
    std::map<int8_t, bool> * restrict map,
    bool const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, Bool}, key::Any)
    res = ccall(("std_map_int8_t_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Bool}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, Bool}
end
*/
extern "C" void std_map_int8_t_bool_delete_(
    std::map<int8_t, bool> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, Bool}, map2::STL.StdMaps.StdMap{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, Bool}}, Ptr{STL.StdMaps.StdMap{Int8, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_bool_equals(
    const std::map<int8_t, bool> * restrict map1,
    const std::map<int8_t, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}}, (Ptr{STL.StdMaps.StdMap{Int8, Bool}},), map)
    return StdMapIterator{Int8, Bool}(res)::STL.StdMaps.StdMapIterator{Int8, Bool}
end
*/
extern "C" std::map<int8_t, bool>::const_iterator * std_map_int8_t_bool_cbegin(
    const std::map<int8_t, bool> * restrict map
) {
    return new std::map<int8_t, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}}, (Ptr{STL.StdMaps.StdMap{Int8, Bool}},), map)
    return StdMapIterator{Int8, Bool}(res)::STL.StdMaps.StdMapIterator{Int8, Bool}
end
*/
extern "C" std::map<int8_t, bool>::const_iterator * std_map_int8_t_bool_cend(
    const std::map<int8_t, bool> * restrict map
) {
    return new std::map<int8_t, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{Bool})
    res = ccall(("std_map_int8_t_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Bool}}, ())
    return StdMapIterator{Int8, Bool}(res)::STL.StdMaps.StdMapIterator{Int8, Bool}
end
*/
extern "C" std::map<int8_t, bool>::const_iterator * std_map_int8_t_bool_const_iterator_new(
    
) {
    return new std::map<int8_t, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_bool_const_iterator_delete(
    std::map<int8_t, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, Bool}, iter2::STL.StdMaps.StdMapIterator{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}}, Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_bool_const_iterator_equals(
    const std::map<int8_t, bool>::const_iterator * restrict iter1,
    const std::map<int8_t, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}},), iter)
    return convert_result(Pair{Int8, Bool}, res)::Pair{Int8, Bool}
end
*/
extern "C" const std::pair<const int8_t, bool> * std_map_int8_t_bool_const_iterator_getindex(
    std::map<int8_t, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_bool_const_iterator_inc_(
    std::map<int8_t, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_bool_const_iterator_dec_(
    std::map<int8_t, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, Bool}, map::STL.StdMaps.StdMap{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}}, Ptr{STL.StdMaps.StdMap{Int8, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_bool_const_iterator_is_cbegin(
    const std::map<int8_t, bool>::const_iterator * restrict iter,
    const std::map<int8_t, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, Bool}, map::STL.StdMaps.StdMap{Int8, Bool})
    res = ccall(("std_map_int8_t_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Bool}}, Ptr{STL.StdMaps.StdMap{Int8, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_bool_const_iterator_is_cend(
    const std::map<int8_t, bool>::const_iterator * restrict iter,
    const std::map<int8_t, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{Float32})
    res = ccall(("std_map_int8_t_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Float32}}, ())
    return StdMap{Int8, Float32}(res)::STL.StdMaps.StdMap{Int8, Float32}
end
*/
extern "C" std::map<int8_t, float> * std_map_int8_t_float_new(
    
) {
    return new std::map<int8_t, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, Float32})
    res = ccall(("std_map_int8_t_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_float_delete(
    std::map<int8_t, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, Float32})
    res = ccall(("std_map_int8_t_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Float32}}, (Ptr{STL.StdMaps.StdMap{Int8, Float32}},), map)
    return StdMap{Int8, Float32}(res)::STL.StdMaps.StdMap{Int8, Float32}
end
*/
extern "C" std::map<int8_t, float> * std_map_int8_t_float_copy(
    const std::map<int8_t, float> * restrict map
) {
    return new std::map<int8_t, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, Float32})
    res = ccall(("std_map_int8_t_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_float_length(
    const std::map<int8_t, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, Float32}, key::Any)
    res = ccall(("std_map_int8_t_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Float32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_float_haskey(
    const std::map<int8_t, float> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, Float32}, key::Any)
    res = ccall(("std_map_int8_t_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{Int8, Float32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_int8_t_float_getindex(
    std::map<int8_t, float> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Float32}}, Ptr{Float32}, Ptr{Int8}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_float_setindex_(
    std::map<int8_t, float> * restrict map,
    float const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, Float32}, key::Any)
    res = ccall(("std_map_int8_t_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Float32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, Float32}
end
*/
extern "C" void std_map_int8_t_float_delete_(
    std::map<int8_t, float> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, Float32}, map2::STL.StdMaps.StdMap{Int8, Float32})
    res = ccall(("std_map_int8_t_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, Float32}}, Ptr{STL.StdMaps.StdMap{Int8, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_float_equals(
    const std::map<int8_t, float> * restrict map1,
    const std::map<int8_t, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, Float32})
    res = ccall(("std_map_int8_t_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}}, (Ptr{STL.StdMaps.StdMap{Int8, Float32}},), map)
    return StdMapIterator{Int8, Float32}(res)::STL.StdMaps.StdMapIterator{Int8, Float32}
end
*/
extern "C" std::map<int8_t, float>::const_iterator * std_map_int8_t_float_cbegin(
    const std::map<int8_t, float> * restrict map
) {
    return new std::map<int8_t, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, Float32})
    res = ccall(("std_map_int8_t_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}}, (Ptr{STL.StdMaps.StdMap{Int8, Float32}},), map)
    return StdMapIterator{Int8, Float32}(res)::STL.StdMaps.StdMapIterator{Int8, Float32}
end
*/
extern "C" std::map<int8_t, float>::const_iterator * std_map_int8_t_float_cend(
    const std::map<int8_t, float> * restrict map
) {
    return new std::map<int8_t, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{Float32})
    res = ccall(("std_map_int8_t_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Float32}}, ())
    return StdMapIterator{Int8, Float32}(res)::STL.StdMaps.StdMapIterator{Int8, Float32}
end
*/
extern "C" std::map<int8_t, float>::const_iterator * std_map_int8_t_float_const_iterator_new(
    
) {
    return new std::map<int8_t, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, Float32})
    res = ccall(("std_map_int8_t_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_float_const_iterator_delete(
    std::map<int8_t, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, Float32}, iter2::STL.StdMaps.StdMapIterator{Int8, Float32})
    res = ccall(("std_map_int8_t_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}}, Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_float_const_iterator_equals(
    const std::map<int8_t, float>::const_iterator * restrict iter1,
    const std::map<int8_t, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, Float32})
    res = ccall(("std_map_int8_t_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}},), iter)
    return convert_result(Pair{Int8, Float32}, res)::Pair{Int8, Float32}
end
*/
extern "C" const std::pair<const int8_t, float> * std_map_int8_t_float_const_iterator_getindex(
    std::map<int8_t, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, Float32})
    res = ccall(("std_map_int8_t_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_float_const_iterator_inc_(
    std::map<int8_t, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, Float32})
    res = ccall(("std_map_int8_t_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_float_const_iterator_dec_(
    std::map<int8_t, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, Float32}, map::STL.StdMaps.StdMap{Int8, Float32})
    res = ccall(("std_map_int8_t_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}}, Ptr{STL.StdMaps.StdMap{Int8, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_float_const_iterator_is_cbegin(
    const std::map<int8_t, float>::const_iterator * restrict iter,
    const std::map<int8_t, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, Float32}, map::STL.StdMaps.StdMap{Int8, Float32})
    res = ccall(("std_map_int8_t_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float32}}, Ptr{STL.StdMaps.StdMap{Int8, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_float_const_iterator_is_cend(
    const std::map<int8_t, float>::const_iterator * restrict iter,
    const std::map<int8_t, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{Float64})
    res = ccall(("std_map_int8_t_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Float64}}, ())
    return StdMap{Int8, Float64}(res)::STL.StdMaps.StdMap{Int8, Float64}
end
*/
extern "C" std::map<int8_t, double> * std_map_int8_t_double_new(
    
) {
    return new std::map<int8_t, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, Float64})
    res = ccall(("std_map_int8_t_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_double_delete(
    std::map<int8_t, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, Float64})
    res = ccall(("std_map_int8_t_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Float64}}, (Ptr{STL.StdMaps.StdMap{Int8, Float64}},), map)
    return StdMap{Int8, Float64}(res)::STL.StdMaps.StdMap{Int8, Float64}
end
*/
extern "C" std::map<int8_t, double> * std_map_int8_t_double_copy(
    const std::map<int8_t, double> * restrict map
) {
    return new std::map<int8_t, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, Float64})
    res = ccall(("std_map_int8_t_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_double_length(
    const std::map<int8_t, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, Float64}, key::Any)
    res = ccall(("std_map_int8_t_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Float64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_double_haskey(
    const std::map<int8_t, double> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, Float64}, key::Any)
    res = ccall(("std_map_int8_t_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{Int8, Float64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_int8_t_double_getindex(
    std::map<int8_t, double> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Float64}}, Ptr{Float64}, Ptr{Int8}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_double_setindex_(
    std::map<int8_t, double> * restrict map,
    double const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, Float64}, key::Any)
    res = ccall(("std_map_int8_t_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Float64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, Float64}
end
*/
extern "C" void std_map_int8_t_double_delete_(
    std::map<int8_t, double> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, Float64}, map2::STL.StdMaps.StdMap{Int8, Float64})
    res = ccall(("std_map_int8_t_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, Float64}}, Ptr{STL.StdMaps.StdMap{Int8, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_double_equals(
    const std::map<int8_t, double> * restrict map1,
    const std::map<int8_t, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, Float64})
    res = ccall(("std_map_int8_t_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}}, (Ptr{STL.StdMaps.StdMap{Int8, Float64}},), map)
    return StdMapIterator{Int8, Float64}(res)::STL.StdMaps.StdMapIterator{Int8, Float64}
end
*/
extern "C" std::map<int8_t, double>::const_iterator * std_map_int8_t_double_cbegin(
    const std::map<int8_t, double> * restrict map
) {
    return new std::map<int8_t, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, Float64})
    res = ccall(("std_map_int8_t_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}}, (Ptr{STL.StdMaps.StdMap{Int8, Float64}},), map)
    return StdMapIterator{Int8, Float64}(res)::STL.StdMaps.StdMapIterator{Int8, Float64}
end
*/
extern "C" std::map<int8_t, double>::const_iterator * std_map_int8_t_double_cend(
    const std::map<int8_t, double> * restrict map
) {
    return new std::map<int8_t, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{Float64})
    res = ccall(("std_map_int8_t_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Float64}}, ())
    return StdMapIterator{Int8, Float64}(res)::STL.StdMaps.StdMapIterator{Int8, Float64}
end
*/
extern "C" std::map<int8_t, double>::const_iterator * std_map_int8_t_double_const_iterator_new(
    
) {
    return new std::map<int8_t, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, Float64})
    res = ccall(("std_map_int8_t_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_double_const_iterator_delete(
    std::map<int8_t, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, Float64}, iter2::STL.StdMaps.StdMapIterator{Int8, Float64})
    res = ccall(("std_map_int8_t_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}}, Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_double_const_iterator_equals(
    const std::map<int8_t, double>::const_iterator * restrict iter1,
    const std::map<int8_t, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, Float64})
    res = ccall(("std_map_int8_t_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}},), iter)
    return convert_result(Pair{Int8, Float64}, res)::Pair{Int8, Float64}
end
*/
extern "C" const std::pair<const int8_t, double> * std_map_int8_t_double_const_iterator_getindex(
    std::map<int8_t, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, Float64})
    res = ccall(("std_map_int8_t_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_double_const_iterator_inc_(
    std::map<int8_t, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, Float64})
    res = ccall(("std_map_int8_t_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_double_const_iterator_dec_(
    std::map<int8_t, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, Float64}, map::STL.StdMaps.StdMap{Int8, Float64})
    res = ccall(("std_map_int8_t_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}}, Ptr{STL.StdMaps.StdMap{Int8, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_double_const_iterator_is_cbegin(
    const std::map<int8_t, double>::const_iterator * restrict iter,
    const std::map<int8_t, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, Float64}, map::STL.StdMaps.StdMap{Int8, Float64})
    res = ccall(("std_map_int8_t_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Float64}}, Ptr{STL.StdMaps.StdMap{Int8, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_double_const_iterator_is_cend(
    const std::map<int8_t, double>::const_iterator * restrict iter,
    const std::map<int8_t, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{Int16})
    res = ccall(("std_map_int8_t_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int16}}, ())
    return StdMap{Int8, Int16}(res)::STL.StdMaps.StdMap{Int8, Int16}
end
*/
extern "C" std::map<int8_t, int16_t> * std_map_int8_t_int16_t_new(
    
) {
    return new std::map<int8_t, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int16_t_delete(
    std::map<int8_t, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int16}}, (Ptr{STL.StdMaps.StdMap{Int8, Int16}},), map)
    return StdMap{Int8, Int16}(res)::STL.StdMaps.StdMap{Int8, Int16}
end
*/
extern "C" std::map<int8_t, int16_t> * std_map_int8_t_int16_t_copy(
    const std::map<int8_t, int16_t> * restrict map
) {
    return new std::map<int8_t, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_int16_t_length(
    const std::map<int8_t, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, Int16}, key::Any)
    res = ccall(("std_map_int8_t_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Int16}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_int16_t_haskey(
    const std::map<int8_t, int16_t> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, Int16}, key::Any)
    res = ccall(("std_map_int8_t_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{Int8, Int16}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_int8_t_int16_t_getindex(
    std::map<int8_t, int16_t> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int16}}, Ptr{Int16}, Ptr{Int8}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int16_t_setindex_(
    std::map<int8_t, int16_t> * restrict map,
    int16_t const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, Int16}, key::Any)
    res = ccall(("std_map_int8_t_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int16}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, Int16}
end
*/
extern "C" void std_map_int8_t_int16_t_delete_(
    std::map<int8_t, int16_t> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, Int16}, map2::STL.StdMaps.StdMap{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, Int16}}, Ptr{STL.StdMaps.StdMap{Int8, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int16_t_equals(
    const std::map<int8_t, int16_t> * restrict map1,
    const std::map<int8_t, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}}, (Ptr{STL.StdMaps.StdMap{Int8, Int16}},), map)
    return StdMapIterator{Int8, Int16}(res)::STL.StdMaps.StdMapIterator{Int8, Int16}
end
*/
extern "C" std::map<int8_t, int16_t>::const_iterator * std_map_int8_t_int16_t_cbegin(
    const std::map<int8_t, int16_t> * restrict map
) {
    return new std::map<int8_t, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}}, (Ptr{STL.StdMaps.StdMap{Int8, Int16}},), map)
    return StdMapIterator{Int8, Int16}(res)::STL.StdMaps.StdMapIterator{Int8, Int16}
end
*/
extern "C" std::map<int8_t, int16_t>::const_iterator * std_map_int8_t_int16_t_cend(
    const std::map<int8_t, int16_t> * restrict map
) {
    return new std::map<int8_t, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{Int16})
    res = ccall(("std_map_int8_t_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int16}}, ())
    return StdMapIterator{Int8, Int16}(res)::STL.StdMaps.StdMapIterator{Int8, Int16}
end
*/
extern "C" std::map<int8_t, int16_t>::const_iterator * std_map_int8_t_int16_t_const_iterator_new(
    
) {
    return new std::map<int8_t, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int16_t_const_iterator_delete(
    std::map<int8_t, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, Int16}, iter2::STL.StdMaps.StdMapIterator{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}}, Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int16_t_const_iterator_equals(
    const std::map<int8_t, int16_t>::const_iterator * restrict iter1,
    const std::map<int8_t, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}},), iter)
    return convert_result(Pair{Int8, Int16}, res)::Pair{Int8, Int16}
end
*/
extern "C" const std::pair<const int8_t, int16_t> * std_map_int8_t_int16_t_const_iterator_getindex(
    std::map<int8_t, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int16_t_const_iterator_inc_(
    std::map<int8_t, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int16_t_const_iterator_dec_(
    std::map<int8_t, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, Int16}, map::STL.StdMaps.StdMap{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}}, Ptr{STL.StdMaps.StdMap{Int8, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int16_t_const_iterator_is_cbegin(
    const std::map<int8_t, int16_t>::const_iterator * restrict iter,
    const std::map<int8_t, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, Int16}, map::STL.StdMaps.StdMap{Int8, Int16})
    res = ccall(("std_map_int8_t_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int16}}, Ptr{STL.StdMaps.StdMap{Int8, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int16_t_const_iterator_is_cend(
    const std::map<int8_t, int16_t>::const_iterator * restrict iter,
    const std::map<int8_t, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{Int32})
    res = ccall(("std_map_int8_t_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int32}}, ())
    return StdMap{Int8, Int32}(res)::STL.StdMaps.StdMap{Int8, Int32}
end
*/
extern "C" std::map<int8_t, int32_t> * std_map_int8_t_int32_t_new(
    
) {
    return new std::map<int8_t, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int32_t_delete(
    std::map<int8_t, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int32}}, (Ptr{STL.StdMaps.StdMap{Int8, Int32}},), map)
    return StdMap{Int8, Int32}(res)::STL.StdMaps.StdMap{Int8, Int32}
end
*/
extern "C" std::map<int8_t, int32_t> * std_map_int8_t_int32_t_copy(
    const std::map<int8_t, int32_t> * restrict map
) {
    return new std::map<int8_t, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_int32_t_length(
    const std::map<int8_t, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, Int32}, key::Any)
    res = ccall(("std_map_int8_t_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Int32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_int32_t_haskey(
    const std::map<int8_t, int32_t> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, Int32}, key::Any)
    res = ccall(("std_map_int8_t_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{Int8, Int32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_int8_t_int32_t_getindex(
    std::map<int8_t, int32_t> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int32}}, Ptr{Int32}, Ptr{Int8}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int32_t_setindex_(
    std::map<int8_t, int32_t> * restrict map,
    int32_t const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, Int32}, key::Any)
    res = ccall(("std_map_int8_t_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, Int32}
end
*/
extern "C" void std_map_int8_t_int32_t_delete_(
    std::map<int8_t, int32_t> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, Int32}, map2::STL.StdMaps.StdMap{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, Int32}}, Ptr{STL.StdMaps.StdMap{Int8, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int32_t_equals(
    const std::map<int8_t, int32_t> * restrict map1,
    const std::map<int8_t, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}}, (Ptr{STL.StdMaps.StdMap{Int8, Int32}},), map)
    return StdMapIterator{Int8, Int32}(res)::STL.StdMaps.StdMapIterator{Int8, Int32}
end
*/
extern "C" std::map<int8_t, int32_t>::const_iterator * std_map_int8_t_int32_t_cbegin(
    const std::map<int8_t, int32_t> * restrict map
) {
    return new std::map<int8_t, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}}, (Ptr{STL.StdMaps.StdMap{Int8, Int32}},), map)
    return StdMapIterator{Int8, Int32}(res)::STL.StdMaps.StdMapIterator{Int8, Int32}
end
*/
extern "C" std::map<int8_t, int32_t>::const_iterator * std_map_int8_t_int32_t_cend(
    const std::map<int8_t, int32_t> * restrict map
) {
    return new std::map<int8_t, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{Int32})
    res = ccall(("std_map_int8_t_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int32}}, ())
    return StdMapIterator{Int8, Int32}(res)::STL.StdMaps.StdMapIterator{Int8, Int32}
end
*/
extern "C" std::map<int8_t, int32_t>::const_iterator * std_map_int8_t_int32_t_const_iterator_new(
    
) {
    return new std::map<int8_t, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int32_t_const_iterator_delete(
    std::map<int8_t, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, Int32}, iter2::STL.StdMaps.StdMapIterator{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}}, Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int32_t_const_iterator_equals(
    const std::map<int8_t, int32_t>::const_iterator * restrict iter1,
    const std::map<int8_t, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}},), iter)
    return convert_result(Pair{Int8, Int32}, res)::Pair{Int8, Int32}
end
*/
extern "C" const std::pair<const int8_t, int32_t> * std_map_int8_t_int32_t_const_iterator_getindex(
    std::map<int8_t, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int32_t_const_iterator_inc_(
    std::map<int8_t, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int32_t_const_iterator_dec_(
    std::map<int8_t, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, Int32}, map::STL.StdMaps.StdMap{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}}, Ptr{STL.StdMaps.StdMap{Int8, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int32_t_const_iterator_is_cbegin(
    const std::map<int8_t, int32_t>::const_iterator * restrict iter,
    const std::map<int8_t, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, Int32}, map::STL.StdMaps.StdMap{Int8, Int32})
    res = ccall(("std_map_int8_t_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int32}}, Ptr{STL.StdMaps.StdMap{Int8, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int32_t_const_iterator_is_cend(
    const std::map<int8_t, int32_t>::const_iterator * restrict iter,
    const std::map<int8_t, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{Int64})
    res = ccall(("std_map_int8_t_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int64}}, ())
    return StdMap{Int8, Int64}(res)::STL.StdMaps.StdMap{Int8, Int64}
end
*/
extern "C" std::map<int8_t, int64_t> * std_map_int8_t_int64_t_new(
    
) {
    return new std::map<int8_t, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int64_t_delete(
    std::map<int8_t, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int64}}, (Ptr{STL.StdMaps.StdMap{Int8, Int64}},), map)
    return StdMap{Int8, Int64}(res)::STL.StdMaps.StdMap{Int8, Int64}
end
*/
extern "C" std::map<int8_t, int64_t> * std_map_int8_t_int64_t_copy(
    const std::map<int8_t, int64_t> * restrict map
) {
    return new std::map<int8_t, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_int64_t_length(
    const std::map<int8_t, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, Int64}, key::Any)
    res = ccall(("std_map_int8_t_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Int64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_int64_t_haskey(
    const std::map<int8_t, int64_t> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, Int64}, key::Any)
    res = ccall(("std_map_int8_t_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{Int8, Int64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_int8_t_int64_t_getindex(
    std::map<int8_t, int64_t> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int64}}, Ptr{Int64}, Ptr{Int8}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int64_t_setindex_(
    std::map<int8_t, int64_t> * restrict map,
    int64_t const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, Int64}, key::Any)
    res = ccall(("std_map_int8_t_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, Int64}
end
*/
extern "C" void std_map_int8_t_int64_t_delete_(
    std::map<int8_t, int64_t> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, Int64}, map2::STL.StdMaps.StdMap{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, Int64}}, Ptr{STL.StdMaps.StdMap{Int8, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int64_t_equals(
    const std::map<int8_t, int64_t> * restrict map1,
    const std::map<int8_t, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}}, (Ptr{STL.StdMaps.StdMap{Int8, Int64}},), map)
    return StdMapIterator{Int8, Int64}(res)::STL.StdMaps.StdMapIterator{Int8, Int64}
end
*/
extern "C" std::map<int8_t, int64_t>::const_iterator * std_map_int8_t_int64_t_cbegin(
    const std::map<int8_t, int64_t> * restrict map
) {
    return new std::map<int8_t, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}}, (Ptr{STL.StdMaps.StdMap{Int8, Int64}},), map)
    return StdMapIterator{Int8, Int64}(res)::STL.StdMaps.StdMapIterator{Int8, Int64}
end
*/
extern "C" std::map<int8_t, int64_t>::const_iterator * std_map_int8_t_int64_t_cend(
    const std::map<int8_t, int64_t> * restrict map
) {
    return new std::map<int8_t, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{Int64})
    res = ccall(("std_map_int8_t_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int64}}, ())
    return StdMapIterator{Int8, Int64}(res)::STL.StdMaps.StdMapIterator{Int8, Int64}
end
*/
extern "C" std::map<int8_t, int64_t>::const_iterator * std_map_int8_t_int64_t_const_iterator_new(
    
) {
    return new std::map<int8_t, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int64_t_const_iterator_delete(
    std::map<int8_t, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, Int64}, iter2::STL.StdMaps.StdMapIterator{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}}, Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int64_t_const_iterator_equals(
    const std::map<int8_t, int64_t>::const_iterator * restrict iter1,
    const std::map<int8_t, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}},), iter)
    return convert_result(Pair{Int8, Int64}, res)::Pair{Int8, Int64}
end
*/
extern "C" const std::pair<const int8_t, int64_t> * std_map_int8_t_int64_t_const_iterator_getindex(
    std::map<int8_t, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int64_t_const_iterator_inc_(
    std::map<int8_t, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int64_t_const_iterator_dec_(
    std::map<int8_t, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, Int64}, map::STL.StdMaps.StdMap{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}}, Ptr{STL.StdMaps.StdMap{Int8, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int64_t_const_iterator_is_cbegin(
    const std::map<int8_t, int64_t>::const_iterator * restrict iter,
    const std::map<int8_t, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, Int64}, map::STL.StdMaps.StdMap{Int8, Int64})
    res = ccall(("std_map_int8_t_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int64}}, Ptr{STL.StdMaps.StdMap{Int8, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int64_t_const_iterator_is_cend(
    const std::map<int8_t, int64_t>::const_iterator * restrict iter,
    const std::map<int8_t, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{Int8})
    res = ccall(("std_map_int8_t_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int8}}, ())
    return StdMap{Int8, Int8}(res)::STL.StdMaps.StdMap{Int8, Int8}
end
*/
extern "C" std::map<int8_t, int8_t> * std_map_int8_t_int8_t_new(
    
) {
    return new std::map<int8_t, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int8_t_delete(
    std::map<int8_t, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int8}}, (Ptr{STL.StdMaps.StdMap{Int8, Int8}},), map)
    return StdMap{Int8, Int8}(res)::STL.StdMaps.StdMap{Int8, Int8}
end
*/
extern "C" std::map<int8_t, int8_t> * std_map_int8_t_int8_t_copy(
    const std::map<int8_t, int8_t> * restrict map
) {
    return new std::map<int8_t, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_int8_t_length(
    const std::map<int8_t, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, Int8}, key::Any)
    res = ccall(("std_map_int8_t_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Int8}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_int8_t_haskey(
    const std::map<int8_t, int8_t> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, Int8}, key::Any)
    res = ccall(("std_map_int8_t_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{Int8, Int8}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_int8_t_int8_t_getindex(
    std::map<int8_t, int8_t> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int8}}, Ptr{Int8}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int8_t_setindex_(
    std::map<int8_t, int8_t> * restrict map,
    int8_t const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, Int8}, key::Any)
    res = ccall(("std_map_int8_t_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Int8}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, Int8}
end
*/
extern "C" void std_map_int8_t_int8_t_delete_(
    std::map<int8_t, int8_t> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, Int8}, map2::STL.StdMaps.StdMap{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, Int8}}, Ptr{STL.StdMaps.StdMap{Int8, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int8_t_equals(
    const std::map<int8_t, int8_t> * restrict map1,
    const std::map<int8_t, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}}, (Ptr{STL.StdMaps.StdMap{Int8, Int8}},), map)
    return StdMapIterator{Int8, Int8}(res)::STL.StdMaps.StdMapIterator{Int8, Int8}
end
*/
extern "C" std::map<int8_t, int8_t>::const_iterator * std_map_int8_t_int8_t_cbegin(
    const std::map<int8_t, int8_t> * restrict map
) {
    return new std::map<int8_t, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}}, (Ptr{STL.StdMaps.StdMap{Int8, Int8}},), map)
    return StdMapIterator{Int8, Int8}(res)::STL.StdMaps.StdMapIterator{Int8, Int8}
end
*/
extern "C" std::map<int8_t, int8_t>::const_iterator * std_map_int8_t_int8_t_cend(
    const std::map<int8_t, int8_t> * restrict map
) {
    return new std::map<int8_t, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{Int8})
    res = ccall(("std_map_int8_t_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Int8}}, ())
    return StdMapIterator{Int8, Int8}(res)::STL.StdMaps.StdMapIterator{Int8, Int8}
end
*/
extern "C" std::map<int8_t, int8_t>::const_iterator * std_map_int8_t_int8_t_const_iterator_new(
    
) {
    return new std::map<int8_t, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int8_t_const_iterator_delete(
    std::map<int8_t, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, Int8}, iter2::STL.StdMaps.StdMapIterator{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}}, Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int8_t_const_iterator_equals(
    const std::map<int8_t, int8_t>::const_iterator * restrict iter1,
    const std::map<int8_t, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}},), iter)
    return convert_result(Pair{Int8, Int8}, res)::Pair{Int8, Int8}
end
*/
extern "C" const std::pair<const int8_t, int8_t> * std_map_int8_t_int8_t_const_iterator_getindex(
    std::map<int8_t, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int8_t_const_iterator_inc_(
    std::map<int8_t, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_int8_t_const_iterator_dec_(
    std::map<int8_t, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, Int8}, map::STL.StdMaps.StdMap{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}}, Ptr{STL.StdMaps.StdMap{Int8, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int8_t_const_iterator_is_cbegin(
    const std::map<int8_t, int8_t>::const_iterator * restrict iter,
    const std::map<int8_t, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, Int8}, map::STL.StdMaps.StdMap{Int8, Int8})
    res = ccall(("std_map_int8_t_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Int8}}, Ptr{STL.StdMaps.StdMap{Int8, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_int8_t_const_iterator_is_cend(
    const std::map<int8_t, int8_t>::const_iterator * restrict iter,
    const std::map<int8_t, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}, ())
    return StdMap{Int8, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Int8, Ptr{Nothing}}
end
*/
extern "C" std::map<int8_t, void *> * std_map_int8_t_void___new(
    
) {
    return new std::map<int8_t, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_void___delete(
    std::map<int8_t, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}},), map)
    return StdMap{Int8, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{Int8, Ptr{Nothing}}
end
*/
extern "C" std::map<int8_t, void *> * std_map_int8_t_void___copy(
    const std::map<int8_t, void *> * restrict map
) {
    return new std::map<int8_t, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_void___length(
    const std::map<int8_t, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int8_t_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_void___haskey(
    const std::map<int8_t, void *> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int8_t_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_int8_t_void___getindex(
    std::map<int8_t, void *> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{Int8}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_void___setindex_(
    std::map<int8_t, void *> * restrict map,
    void * const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_int8_t_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}}
end
*/
extern "C" void std_map_int8_t_void___delete_(
    std::map<int8_t, void *> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_void___equals(
    const std::map<int8_t, void *> * restrict map1,
    const std::map<int8_t, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}},), map)
    return StdMapIterator{Int8, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}
end
*/
extern "C" std::map<int8_t, void *>::const_iterator * std_map_int8_t_void___cbegin(
    const std::map<int8_t, void *> * restrict map
) {
    return new std::map<int8_t, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}},), map)
    return StdMapIterator{Int8, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}
end
*/
extern "C" std::map<int8_t, void *>::const_iterator * std_map_int8_t_void___cend(
    const std::map<int8_t, void *> * restrict map
) {
    return new std::map<int8_t, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}, ())
    return StdMapIterator{Int8, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}
end
*/
extern "C" std::map<int8_t, void *>::const_iterator * std_map_int8_t_void___const_iterator_new(
    
) {
    return new std::map<int8_t, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_void___const_iterator_delete(
    std::map<int8_t, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_void___const_iterator_equals(
    const std::map<int8_t, void *>::const_iterator * restrict iter1,
    const std::map<int8_t, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}},), iter)
    return convert_result(Pair{Int8, Ptr{Nothing}}, res)::Pair{Int8, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const int8_t, void *> * std_map_int8_t_void___const_iterator_getindex(
    std::map<int8_t, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_void___const_iterator_inc_(
    std::map<int8_t, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_void___const_iterator_dec_(
    std::map<int8_t, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_void___const_iterator_is_cbegin(
    const std::map<int8_t, void *>::const_iterator * restrict iter,
    const std::map<int8_t, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}, map::STL.StdMaps.StdMap{Int8, Ptr{Nothing}})
    res = ccall(("std_map_int8_t_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{Int8, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_void___const_iterator_is_cend(
    const std::map<int8_t, void *>::const_iterator * restrict iter,
    const std::map<int8_t, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{UInt16})
    res = ccall(("std_map_int8_t_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt16}}, ())
    return StdMap{Int8, UInt16}(res)::STL.StdMaps.StdMap{Int8, UInt16}
end
*/
extern "C" std::map<int8_t, uint16_t> * std_map_int8_t_uint16_t_new(
    
) {
    return new std::map<int8_t, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint16_t_delete(
    std::map<int8_t, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}},), map)
    return StdMap{Int8, UInt16}(res)::STL.StdMaps.StdMap{Int8, UInt16}
end
*/
extern "C" std::map<int8_t, uint16_t> * std_map_int8_t_uint16_t_copy(
    const std::map<int8_t, uint16_t> * restrict map
) {
    return new std::map<int8_t, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_uint16_t_length(
    const std::map<int8_t, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, UInt16}, key::Any)
    res = ccall(("std_map_int8_t_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_uint16_t_haskey(
    const std::map<int8_t, uint16_t> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, UInt16}, key::Any)
    res = ccall(("std_map_int8_t_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_int8_t_uint16_t_getindex(
    std::map<int8_t, uint16_t> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}}, Ptr{UInt16}, Ptr{Int8}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint16_t_setindex_(
    std::map<int8_t, uint16_t> * restrict map,
    uint16_t const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, UInt16}, key::Any)
    res = ccall(("std_map_int8_t_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, UInt16}
end
*/
extern "C" void std_map_int8_t_uint16_t_delete_(
    std::map<int8_t, uint16_t> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, UInt16}, map2::STL.StdMaps.StdMap{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}}, Ptr{STL.StdMaps.StdMap{Int8, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint16_t_equals(
    const std::map<int8_t, uint16_t> * restrict map1,
    const std::map<int8_t, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}},), map)
    return StdMapIterator{Int8, UInt16}(res)::STL.StdMaps.StdMapIterator{Int8, UInt16}
end
*/
extern "C" std::map<int8_t, uint16_t>::const_iterator * std_map_int8_t_uint16_t_cbegin(
    const std::map<int8_t, uint16_t> * restrict map
) {
    return new std::map<int8_t, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt16}},), map)
    return StdMapIterator{Int8, UInt16}(res)::STL.StdMaps.StdMapIterator{Int8, UInt16}
end
*/
extern "C" std::map<int8_t, uint16_t>::const_iterator * std_map_int8_t_uint16_t_cend(
    const std::map<int8_t, uint16_t> * restrict map
) {
    return new std::map<int8_t, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{UInt16})
    res = ccall(("std_map_int8_t_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt16}}, ())
    return StdMapIterator{Int8, UInt16}(res)::STL.StdMaps.StdMapIterator{Int8, UInt16}
end
*/
extern "C" std::map<int8_t, uint16_t>::const_iterator * std_map_int8_t_uint16_t_const_iterator_new(
    
) {
    return new std::map<int8_t, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint16_t_const_iterator_delete(
    std::map<int8_t, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, UInt16}, iter2::STL.StdMaps.StdMapIterator{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint16_t_const_iterator_equals(
    const std::map<int8_t, uint16_t>::const_iterator * restrict iter1,
    const std::map<int8_t, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}},), iter)
    return convert_result(Pair{Int8, UInt16}, res)::Pair{Int8, UInt16}
end
*/
extern "C" const std::pair<const int8_t, uint16_t> * std_map_int8_t_uint16_t_const_iterator_getindex(
    std::map<int8_t, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint16_t_const_iterator_inc_(
    std::map<int8_t, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint16_t_const_iterator_dec_(
    std::map<int8_t, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, UInt16}, map::STL.StdMaps.StdMap{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}}, Ptr{STL.StdMaps.StdMap{Int8, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint16_t_const_iterator_is_cbegin(
    const std::map<int8_t, uint16_t>::const_iterator * restrict iter,
    const std::map<int8_t, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, UInt16}, map::STL.StdMaps.StdMap{Int8, UInt16})
    res = ccall(("std_map_int8_t_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt16}}, Ptr{STL.StdMaps.StdMap{Int8, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint16_t_const_iterator_is_cend(
    const std::map<int8_t, uint16_t>::const_iterator * restrict iter,
    const std::map<int8_t, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{UInt32})
    res = ccall(("std_map_int8_t_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt32}}, ())
    return StdMap{Int8, UInt32}(res)::STL.StdMaps.StdMap{Int8, UInt32}
end
*/
extern "C" std::map<int8_t, uint32_t> * std_map_int8_t_uint32_t_new(
    
) {
    return new std::map<int8_t, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint32_t_delete(
    std::map<int8_t, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}},), map)
    return StdMap{Int8, UInt32}(res)::STL.StdMaps.StdMap{Int8, UInt32}
end
*/
extern "C" std::map<int8_t, uint32_t> * std_map_int8_t_uint32_t_copy(
    const std::map<int8_t, uint32_t> * restrict map
) {
    return new std::map<int8_t, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_uint32_t_length(
    const std::map<int8_t, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, UInt32}, key::Any)
    res = ccall(("std_map_int8_t_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_uint32_t_haskey(
    const std::map<int8_t, uint32_t> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, UInt32}, key::Any)
    res = ccall(("std_map_int8_t_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_int8_t_uint32_t_getindex(
    std::map<int8_t, uint32_t> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}}, Ptr{UInt32}, Ptr{Int8}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint32_t_setindex_(
    std::map<int8_t, uint32_t> * restrict map,
    uint32_t const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, UInt32}, key::Any)
    res = ccall(("std_map_int8_t_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, UInt32}
end
*/
extern "C" void std_map_int8_t_uint32_t_delete_(
    std::map<int8_t, uint32_t> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, UInt32}, map2::STL.StdMaps.StdMap{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}}, Ptr{STL.StdMaps.StdMap{Int8, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint32_t_equals(
    const std::map<int8_t, uint32_t> * restrict map1,
    const std::map<int8_t, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}},), map)
    return StdMapIterator{Int8, UInt32}(res)::STL.StdMaps.StdMapIterator{Int8, UInt32}
end
*/
extern "C" std::map<int8_t, uint32_t>::const_iterator * std_map_int8_t_uint32_t_cbegin(
    const std::map<int8_t, uint32_t> * restrict map
) {
    return new std::map<int8_t, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt32}},), map)
    return StdMapIterator{Int8, UInt32}(res)::STL.StdMaps.StdMapIterator{Int8, UInt32}
end
*/
extern "C" std::map<int8_t, uint32_t>::const_iterator * std_map_int8_t_uint32_t_cend(
    const std::map<int8_t, uint32_t> * restrict map
) {
    return new std::map<int8_t, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{UInt32})
    res = ccall(("std_map_int8_t_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt32}}, ())
    return StdMapIterator{Int8, UInt32}(res)::STL.StdMaps.StdMapIterator{Int8, UInt32}
end
*/
extern "C" std::map<int8_t, uint32_t>::const_iterator * std_map_int8_t_uint32_t_const_iterator_new(
    
) {
    return new std::map<int8_t, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint32_t_const_iterator_delete(
    std::map<int8_t, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, UInt32}, iter2::STL.StdMaps.StdMapIterator{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint32_t_const_iterator_equals(
    const std::map<int8_t, uint32_t>::const_iterator * restrict iter1,
    const std::map<int8_t, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}},), iter)
    return convert_result(Pair{Int8, UInt32}, res)::Pair{Int8, UInt32}
end
*/
extern "C" const std::pair<const int8_t, uint32_t> * std_map_int8_t_uint32_t_const_iterator_getindex(
    std::map<int8_t, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint32_t_const_iterator_inc_(
    std::map<int8_t, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint32_t_const_iterator_dec_(
    std::map<int8_t, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, UInt32}, map::STL.StdMaps.StdMap{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}}, Ptr{STL.StdMaps.StdMap{Int8, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint32_t_const_iterator_is_cbegin(
    const std::map<int8_t, uint32_t>::const_iterator * restrict iter,
    const std::map<int8_t, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, UInt32}, map::STL.StdMaps.StdMap{Int8, UInt32})
    res = ccall(("std_map_int8_t_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt32}}, Ptr{STL.StdMaps.StdMap{Int8, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint32_t_const_iterator_is_cend(
    const std::map<int8_t, uint32_t>::const_iterator * restrict iter,
    const std::map<int8_t, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{UInt64})
    res = ccall(("std_map_int8_t_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt64}}, ())
    return StdMap{Int8, UInt64}(res)::STL.StdMaps.StdMap{Int8, UInt64}
end
*/
extern "C" std::map<int8_t, uint64_t> * std_map_int8_t_uint64_t_new(
    
) {
    return new std::map<int8_t, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint64_t_delete(
    std::map<int8_t, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}},), map)
    return StdMap{Int8, UInt64}(res)::STL.StdMaps.StdMap{Int8, UInt64}
end
*/
extern "C" std::map<int8_t, uint64_t> * std_map_int8_t_uint64_t_copy(
    const std::map<int8_t, uint64_t> * restrict map
) {
    return new std::map<int8_t, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_uint64_t_length(
    const std::map<int8_t, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, UInt64}, key::Any)
    res = ccall(("std_map_int8_t_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_uint64_t_haskey(
    const std::map<int8_t, uint64_t> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, UInt64}, key::Any)
    res = ccall(("std_map_int8_t_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_int8_t_uint64_t_getindex(
    std::map<int8_t, uint64_t> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}}, Ptr{UInt64}, Ptr{Int8}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint64_t_setindex_(
    std::map<int8_t, uint64_t> * restrict map,
    uint64_t const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, UInt64}, key::Any)
    res = ccall(("std_map_int8_t_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, UInt64}
end
*/
extern "C" void std_map_int8_t_uint64_t_delete_(
    std::map<int8_t, uint64_t> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, UInt64}, map2::STL.StdMaps.StdMap{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}}, Ptr{STL.StdMaps.StdMap{Int8, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint64_t_equals(
    const std::map<int8_t, uint64_t> * restrict map1,
    const std::map<int8_t, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}},), map)
    return StdMapIterator{Int8, UInt64}(res)::STL.StdMaps.StdMapIterator{Int8, UInt64}
end
*/
extern "C" std::map<int8_t, uint64_t>::const_iterator * std_map_int8_t_uint64_t_cbegin(
    const std::map<int8_t, uint64_t> * restrict map
) {
    return new std::map<int8_t, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt64}},), map)
    return StdMapIterator{Int8, UInt64}(res)::STL.StdMaps.StdMapIterator{Int8, UInt64}
end
*/
extern "C" std::map<int8_t, uint64_t>::const_iterator * std_map_int8_t_uint64_t_cend(
    const std::map<int8_t, uint64_t> * restrict map
) {
    return new std::map<int8_t, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{UInt64})
    res = ccall(("std_map_int8_t_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt64}}, ())
    return StdMapIterator{Int8, UInt64}(res)::STL.StdMaps.StdMapIterator{Int8, UInt64}
end
*/
extern "C" std::map<int8_t, uint64_t>::const_iterator * std_map_int8_t_uint64_t_const_iterator_new(
    
) {
    return new std::map<int8_t, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint64_t_const_iterator_delete(
    std::map<int8_t, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, UInt64}, iter2::STL.StdMaps.StdMapIterator{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint64_t_const_iterator_equals(
    const std::map<int8_t, uint64_t>::const_iterator * restrict iter1,
    const std::map<int8_t, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}},), iter)
    return convert_result(Pair{Int8, UInt64}, res)::Pair{Int8, UInt64}
end
*/
extern "C" const std::pair<const int8_t, uint64_t> * std_map_int8_t_uint64_t_const_iterator_getindex(
    std::map<int8_t, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint64_t_const_iterator_inc_(
    std::map<int8_t, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint64_t_const_iterator_dec_(
    std::map<int8_t, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, UInt64}, map::STL.StdMaps.StdMap{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}}, Ptr{STL.StdMaps.StdMap{Int8, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint64_t_const_iterator_is_cbegin(
    const std::map<int8_t, uint64_t>::const_iterator * restrict iter,
    const std::map<int8_t, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, UInt64}, map::STL.StdMaps.StdMap{Int8, UInt64})
    res = ccall(("std_map_int8_t_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt64}}, Ptr{STL.StdMaps.StdMap{Int8, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint64_t_const_iterator_is_cend(
    const std::map<int8_t, uint64_t>::const_iterator * restrict iter,
    const std::map<int8_t, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{Int8}, type::Type{UInt8})
    res = ccall(("std_map_int8_t_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt8}}, ())
    return StdMap{Int8, UInt8}(res)::STL.StdMaps.StdMap{Int8, UInt8}
end
*/
extern "C" std::map<int8_t, uint8_t> * std_map_int8_t_uint8_t_new(
    
) {
    return new std::map<int8_t, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint8_t_delete(
    std::map<int8_t, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}},), map)
    return StdMap{Int8, UInt8}(res)::STL.StdMaps.StdMap{Int8, UInt8}
end
*/
extern "C" std::map<int8_t, uint8_t> * std_map_int8_t_uint8_t_copy(
    const std::map<int8_t, uint8_t> * restrict map
) {
    return new std::map<int8_t, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_int8_t_uint8_t_length(
    const std::map<int8_t, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{Int8, UInt8}, key::Any)
    res = ccall(("std_map_int8_t_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_int8_t_uint8_t_haskey(
    const std::map<int8_t, uint8_t> * restrict map,
    int8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{Int8, UInt8}, key::Any)
    res = ccall(("std_map_int8_t_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_int8_t_uint8_t_getindex(
    std::map<int8_t, uint8_t> * restrict map,
    int8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{Int8, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_int8_t_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}}, Ptr{UInt8}, Ptr{Int8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{Int8}, convert(Int8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint8_t_setindex_(
    std::map<int8_t, uint8_t> * restrict map,
    uint8_t const * elt,
    int8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{Int8, UInt8}, key::Any)
    res = ccall(("std_map_int8_t_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}}, Ptr{Int8}), map, convert_arg(Ptr{Int8}, convert(Int8, key)))
    return map::STL.StdMaps.StdMap{Int8, UInt8}
end
*/
extern "C" void std_map_int8_t_uint8_t_delete_(
    std::map<int8_t, uint8_t> * restrict map,
    int8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{Int8, UInt8}, map2::STL.StdMaps.StdMap{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}}, Ptr{STL.StdMaps.StdMap{Int8, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint8_t_equals(
    const std::map<int8_t, uint8_t> * restrict map1,
    const std::map<int8_t, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}},), map)
    return StdMapIterator{Int8, UInt8}(res)::STL.StdMaps.StdMapIterator{Int8, UInt8}
end
*/
extern "C" std::map<int8_t, uint8_t>::const_iterator * std_map_int8_t_uint8_t_cbegin(
    const std::map<int8_t, uint8_t> * restrict map
) {
    return new std::map<int8_t, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}}, (Ptr{STL.StdMaps.StdMap{Int8, UInt8}},), map)
    return StdMapIterator{Int8, UInt8}(res)::STL.StdMaps.StdMapIterator{Int8, UInt8}
end
*/
extern "C" std::map<int8_t, uint8_t>::const_iterator * std_map_int8_t_uint8_t_cend(
    const std::map<int8_t, uint8_t> * restrict map
) {
    return new std::map<int8_t, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{Int8}, type::Type{UInt8})
    res = ccall(("std_map_int8_t_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{Int8, UInt8}}, ())
    return StdMapIterator{Int8, UInt8}(res)::STL.StdMaps.StdMapIterator{Int8, UInt8}
end
*/
extern "C" std::map<int8_t, uint8_t>::const_iterator * std_map_int8_t_uint8_t_const_iterator_new(
    
) {
    return new std::map<int8_t, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint8_t_const_iterator_delete(
    std::map<int8_t, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{Int8, UInt8}, iter2::STL.StdMaps.StdMapIterator{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint8_t_const_iterator_equals(
    const std::map<int8_t, uint8_t>::const_iterator * restrict iter1,
    const std::map<int8_t, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{Int8, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}},), iter)
    return convert_result(Pair{Int8, UInt8}, res)::Pair{Int8, UInt8}
end
*/
extern "C" const std::pair<const int8_t, uint8_t> * std_map_int8_t_uint8_t_const_iterator_getindex(
    std::map<int8_t, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint8_t_const_iterator_inc_(
    std::map<int8_t, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_int8_t_uint8_t_const_iterator_dec_(
    std::map<int8_t, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{Int8, UInt8}, map::STL.StdMaps.StdMap{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}}, Ptr{STL.StdMaps.StdMap{Int8, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint8_t_const_iterator_is_cbegin(
    const std::map<int8_t, uint8_t>::const_iterator * restrict iter,
    const std::map<int8_t, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{Int8, UInt8}, map::STL.StdMaps.StdMap{Int8, UInt8})
    res = ccall(("std_map_int8_t_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{Int8, UInt8}}, Ptr{STL.StdMaps.StdMap{Int8, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_int8_t_uint8_t_const_iterator_is_cend(
    const std::map<int8_t, uint8_t>::const_iterator * restrict iter,
    const std::map<int8_t, uint8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{Bool})
    res = ccall(("std_map_uint16_t_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Bool}}, ())
    return StdMap{UInt16, Bool}(res)::STL.StdMaps.StdMap{UInt16, Bool}
end
*/
extern "C" std::map<uint16_t, bool> * std_map_uint16_t_bool_new(
    
) {
    return new std::map<uint16_t, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_bool_delete(
    std::map<uint16_t, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}},), map)
    return StdMap{UInt16, Bool}(res)::STL.StdMaps.StdMap{UInt16, Bool}
end
*/
extern "C" std::map<uint16_t, bool> * std_map_uint16_t_bool_copy(
    const std::map<uint16_t, bool> * restrict map
) {
    return new std::map<uint16_t, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_bool_length(
    const std::map<uint16_t, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, Bool}, key::Any)
    res = ccall(("std_map_uint16_t_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_bool_haskey(
    const std::map<uint16_t, bool> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, Bool}, key::Any)
    res = ccall(("std_map_uint16_t_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_uint16_t_bool_getindex(
    std::map<uint16_t, bool> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}}, Ptr{Bool}, Ptr{UInt16}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_bool_setindex_(
    std::map<uint16_t, bool> * restrict map,
    bool const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, Bool}, key::Any)
    res = ccall(("std_map_uint16_t_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, Bool}
end
*/
extern "C" void std_map_uint16_t_bool_delete_(
    std::map<uint16_t, bool> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, Bool}, map2::STL.StdMaps.StdMap{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}}, Ptr{STL.StdMaps.StdMap{UInt16, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_bool_equals(
    const std::map<uint16_t, bool> * restrict map1,
    const std::map<uint16_t, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}},), map)
    return StdMapIterator{UInt16, Bool}(res)::STL.StdMaps.StdMapIterator{UInt16, Bool}
end
*/
extern "C" std::map<uint16_t, bool>::const_iterator * std_map_uint16_t_bool_cbegin(
    const std::map<uint16_t, bool> * restrict map
) {
    return new std::map<uint16_t, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt16, Bool}},), map)
    return StdMapIterator{UInt16, Bool}(res)::STL.StdMaps.StdMapIterator{UInt16, Bool}
end
*/
extern "C" std::map<uint16_t, bool>::const_iterator * std_map_uint16_t_bool_cend(
    const std::map<uint16_t, bool> * restrict map
) {
    return new std::map<uint16_t, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{Bool})
    res = ccall(("std_map_uint16_t_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Bool}}, ())
    return StdMapIterator{UInt16, Bool}(res)::STL.StdMaps.StdMapIterator{UInt16, Bool}
end
*/
extern "C" std::map<uint16_t, bool>::const_iterator * std_map_uint16_t_bool_const_iterator_new(
    
) {
    return new std::map<uint16_t, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_bool_const_iterator_delete(
    std::map<uint16_t, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, Bool}, iter2::STL.StdMaps.StdMapIterator{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_bool_const_iterator_equals(
    const std::map<uint16_t, bool>::const_iterator * restrict iter1,
    const std::map<uint16_t, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}},), iter)
    return convert_result(Pair{UInt16, Bool}, res)::Pair{UInt16, Bool}
end
*/
extern "C" const std::pair<const uint16_t, bool> * std_map_uint16_t_bool_const_iterator_getindex(
    std::map<uint16_t, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_bool_const_iterator_inc_(
    std::map<uint16_t, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_bool_const_iterator_dec_(
    std::map<uint16_t, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, Bool}, map::STL.StdMaps.StdMap{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}}, Ptr{STL.StdMaps.StdMap{UInt16, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_bool_const_iterator_is_cbegin(
    const std::map<uint16_t, bool>::const_iterator * restrict iter,
    const std::map<uint16_t, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, Bool}, map::STL.StdMaps.StdMap{UInt16, Bool})
    res = ccall(("std_map_uint16_t_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Bool}}, Ptr{STL.StdMaps.StdMap{UInt16, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_bool_const_iterator_is_cend(
    const std::map<uint16_t, bool>::const_iterator * restrict iter,
    const std::map<uint16_t, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{Float32})
    res = ccall(("std_map_uint16_t_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Float32}}, ())
    return StdMap{UInt16, Float32}(res)::STL.StdMaps.StdMap{UInt16, Float32}
end
*/
extern "C" std::map<uint16_t, float> * std_map_uint16_t_float_new(
    
) {
    return new std::map<uint16_t, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_float_delete(
    std::map<uint16_t, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}},), map)
    return StdMap{UInt16, Float32}(res)::STL.StdMaps.StdMap{UInt16, Float32}
end
*/
extern "C" std::map<uint16_t, float> * std_map_uint16_t_float_copy(
    const std::map<uint16_t, float> * restrict map
) {
    return new std::map<uint16_t, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_float_length(
    const std::map<uint16_t, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, Float32}, key::Any)
    res = ccall(("std_map_uint16_t_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_float_haskey(
    const std::map<uint16_t, float> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, Float32}, key::Any)
    res = ccall(("std_map_uint16_t_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_uint16_t_float_getindex(
    std::map<uint16_t, float> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}}, Ptr{Float32}, Ptr{UInt16}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_float_setindex_(
    std::map<uint16_t, float> * restrict map,
    float const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, Float32}, key::Any)
    res = ccall(("std_map_uint16_t_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, Float32}
end
*/
extern "C" void std_map_uint16_t_float_delete_(
    std::map<uint16_t, float> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, Float32}, map2::STL.StdMaps.StdMap{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}}, Ptr{STL.StdMaps.StdMap{UInt16, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_float_equals(
    const std::map<uint16_t, float> * restrict map1,
    const std::map<uint16_t, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}},), map)
    return StdMapIterator{UInt16, Float32}(res)::STL.StdMaps.StdMapIterator{UInt16, Float32}
end
*/
extern "C" std::map<uint16_t, float>::const_iterator * std_map_uint16_t_float_cbegin(
    const std::map<uint16_t, float> * restrict map
) {
    return new std::map<uint16_t, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt16, Float32}},), map)
    return StdMapIterator{UInt16, Float32}(res)::STL.StdMaps.StdMapIterator{UInt16, Float32}
end
*/
extern "C" std::map<uint16_t, float>::const_iterator * std_map_uint16_t_float_cend(
    const std::map<uint16_t, float> * restrict map
) {
    return new std::map<uint16_t, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{Float32})
    res = ccall(("std_map_uint16_t_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Float32}}, ())
    return StdMapIterator{UInt16, Float32}(res)::STL.StdMaps.StdMapIterator{UInt16, Float32}
end
*/
extern "C" std::map<uint16_t, float>::const_iterator * std_map_uint16_t_float_const_iterator_new(
    
) {
    return new std::map<uint16_t, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_float_const_iterator_delete(
    std::map<uint16_t, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, Float32}, iter2::STL.StdMaps.StdMapIterator{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_float_const_iterator_equals(
    const std::map<uint16_t, float>::const_iterator * restrict iter1,
    const std::map<uint16_t, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}},), iter)
    return convert_result(Pair{UInt16, Float32}, res)::Pair{UInt16, Float32}
end
*/
extern "C" const std::pair<const uint16_t, float> * std_map_uint16_t_float_const_iterator_getindex(
    std::map<uint16_t, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_float_const_iterator_inc_(
    std::map<uint16_t, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_float_const_iterator_dec_(
    std::map<uint16_t, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, Float32}, map::STL.StdMaps.StdMap{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}}, Ptr{STL.StdMaps.StdMap{UInt16, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_float_const_iterator_is_cbegin(
    const std::map<uint16_t, float>::const_iterator * restrict iter,
    const std::map<uint16_t, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, Float32}, map::STL.StdMaps.StdMap{UInt16, Float32})
    res = ccall(("std_map_uint16_t_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float32}}, Ptr{STL.StdMaps.StdMap{UInt16, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_float_const_iterator_is_cend(
    const std::map<uint16_t, float>::const_iterator * restrict iter,
    const std::map<uint16_t, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{Float64})
    res = ccall(("std_map_uint16_t_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Float64}}, ())
    return StdMap{UInt16, Float64}(res)::STL.StdMaps.StdMap{UInt16, Float64}
end
*/
extern "C" std::map<uint16_t, double> * std_map_uint16_t_double_new(
    
) {
    return new std::map<uint16_t, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_double_delete(
    std::map<uint16_t, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}},), map)
    return StdMap{UInt16, Float64}(res)::STL.StdMaps.StdMap{UInt16, Float64}
end
*/
extern "C" std::map<uint16_t, double> * std_map_uint16_t_double_copy(
    const std::map<uint16_t, double> * restrict map
) {
    return new std::map<uint16_t, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_double_length(
    const std::map<uint16_t, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, Float64}, key::Any)
    res = ccall(("std_map_uint16_t_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_double_haskey(
    const std::map<uint16_t, double> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, Float64}, key::Any)
    res = ccall(("std_map_uint16_t_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_uint16_t_double_getindex(
    std::map<uint16_t, double> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}}, Ptr{Float64}, Ptr{UInt16}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_double_setindex_(
    std::map<uint16_t, double> * restrict map,
    double const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, Float64}, key::Any)
    res = ccall(("std_map_uint16_t_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, Float64}
end
*/
extern "C" void std_map_uint16_t_double_delete_(
    std::map<uint16_t, double> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, Float64}, map2::STL.StdMaps.StdMap{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}}, Ptr{STL.StdMaps.StdMap{UInt16, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_double_equals(
    const std::map<uint16_t, double> * restrict map1,
    const std::map<uint16_t, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}},), map)
    return StdMapIterator{UInt16, Float64}(res)::STL.StdMaps.StdMapIterator{UInt16, Float64}
end
*/
extern "C" std::map<uint16_t, double>::const_iterator * std_map_uint16_t_double_cbegin(
    const std::map<uint16_t, double> * restrict map
) {
    return new std::map<uint16_t, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt16, Float64}},), map)
    return StdMapIterator{UInt16, Float64}(res)::STL.StdMaps.StdMapIterator{UInt16, Float64}
end
*/
extern "C" std::map<uint16_t, double>::const_iterator * std_map_uint16_t_double_cend(
    const std::map<uint16_t, double> * restrict map
) {
    return new std::map<uint16_t, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{Float64})
    res = ccall(("std_map_uint16_t_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Float64}}, ())
    return StdMapIterator{UInt16, Float64}(res)::STL.StdMaps.StdMapIterator{UInt16, Float64}
end
*/
extern "C" std::map<uint16_t, double>::const_iterator * std_map_uint16_t_double_const_iterator_new(
    
) {
    return new std::map<uint16_t, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_double_const_iterator_delete(
    std::map<uint16_t, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, Float64}, iter2::STL.StdMaps.StdMapIterator{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_double_const_iterator_equals(
    const std::map<uint16_t, double>::const_iterator * restrict iter1,
    const std::map<uint16_t, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}},), iter)
    return convert_result(Pair{UInt16, Float64}, res)::Pair{UInt16, Float64}
end
*/
extern "C" const std::pair<const uint16_t, double> * std_map_uint16_t_double_const_iterator_getindex(
    std::map<uint16_t, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_double_const_iterator_inc_(
    std::map<uint16_t, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_double_const_iterator_dec_(
    std::map<uint16_t, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, Float64}, map::STL.StdMaps.StdMap{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}}, Ptr{STL.StdMaps.StdMap{UInt16, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_double_const_iterator_is_cbegin(
    const std::map<uint16_t, double>::const_iterator * restrict iter,
    const std::map<uint16_t, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, Float64}, map::STL.StdMaps.StdMap{UInt16, Float64})
    res = ccall(("std_map_uint16_t_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Float64}}, Ptr{STL.StdMaps.StdMap{UInt16, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_double_const_iterator_is_cend(
    const std::map<uint16_t, double>::const_iterator * restrict iter,
    const std::map<uint16_t, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{Int16})
    res = ccall(("std_map_uint16_t_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int16}}, ())
    return StdMap{UInt16, Int16}(res)::STL.StdMaps.StdMap{UInt16, Int16}
end
*/
extern "C" std::map<uint16_t, int16_t> * std_map_uint16_t_int16_t_new(
    
) {
    return new std::map<uint16_t, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int16_t_delete(
    std::map<uint16_t, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}},), map)
    return StdMap{UInt16, Int16}(res)::STL.StdMaps.StdMap{UInt16, Int16}
end
*/
extern "C" std::map<uint16_t, int16_t> * std_map_uint16_t_int16_t_copy(
    const std::map<uint16_t, int16_t> * restrict map
) {
    return new std::map<uint16_t, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_int16_t_length(
    const std::map<uint16_t, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, Int16}, key::Any)
    res = ccall(("std_map_uint16_t_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_int16_t_haskey(
    const std::map<uint16_t, int16_t> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, Int16}, key::Any)
    res = ccall(("std_map_uint16_t_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_uint16_t_int16_t_getindex(
    std::map<uint16_t, int16_t> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}}, Ptr{Int16}, Ptr{UInt16}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int16_t_setindex_(
    std::map<uint16_t, int16_t> * restrict map,
    int16_t const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, Int16}, key::Any)
    res = ccall(("std_map_uint16_t_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, Int16}
end
*/
extern "C" void std_map_uint16_t_int16_t_delete_(
    std::map<uint16_t, int16_t> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, Int16}, map2::STL.StdMaps.StdMap{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}}, Ptr{STL.StdMaps.StdMap{UInt16, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int16_t_equals(
    const std::map<uint16_t, int16_t> * restrict map1,
    const std::map<uint16_t, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}},), map)
    return StdMapIterator{UInt16, Int16}(res)::STL.StdMaps.StdMapIterator{UInt16, Int16}
end
*/
extern "C" std::map<uint16_t, int16_t>::const_iterator * std_map_uint16_t_int16_t_cbegin(
    const std::map<uint16_t, int16_t> * restrict map
) {
    return new std::map<uint16_t, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int16}},), map)
    return StdMapIterator{UInt16, Int16}(res)::STL.StdMaps.StdMapIterator{UInt16, Int16}
end
*/
extern "C" std::map<uint16_t, int16_t>::const_iterator * std_map_uint16_t_int16_t_cend(
    const std::map<uint16_t, int16_t> * restrict map
) {
    return new std::map<uint16_t, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{Int16})
    res = ccall(("std_map_uint16_t_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int16}}, ())
    return StdMapIterator{UInt16, Int16}(res)::STL.StdMaps.StdMapIterator{UInt16, Int16}
end
*/
extern "C" std::map<uint16_t, int16_t>::const_iterator * std_map_uint16_t_int16_t_const_iterator_new(
    
) {
    return new std::map<uint16_t, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int16_t_const_iterator_delete(
    std::map<uint16_t, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, Int16}, iter2::STL.StdMaps.StdMapIterator{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int16_t_const_iterator_equals(
    const std::map<uint16_t, int16_t>::const_iterator * restrict iter1,
    const std::map<uint16_t, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}},), iter)
    return convert_result(Pair{UInt16, Int16}, res)::Pair{UInt16, Int16}
end
*/
extern "C" const std::pair<const uint16_t, int16_t> * std_map_uint16_t_int16_t_const_iterator_getindex(
    std::map<uint16_t, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int16_t_const_iterator_inc_(
    std::map<uint16_t, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int16_t_const_iterator_dec_(
    std::map<uint16_t, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, Int16}, map::STL.StdMaps.StdMap{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}}, Ptr{STL.StdMaps.StdMap{UInt16, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int16_t_const_iterator_is_cbegin(
    const std::map<uint16_t, int16_t>::const_iterator * restrict iter,
    const std::map<uint16_t, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, Int16}, map::STL.StdMaps.StdMap{UInt16, Int16})
    res = ccall(("std_map_uint16_t_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int16}}, Ptr{STL.StdMaps.StdMap{UInt16, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int16_t_const_iterator_is_cend(
    const std::map<uint16_t, int16_t>::const_iterator * restrict iter,
    const std::map<uint16_t, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{Int32})
    res = ccall(("std_map_uint16_t_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int32}}, ())
    return StdMap{UInt16, Int32}(res)::STL.StdMaps.StdMap{UInt16, Int32}
end
*/
extern "C" std::map<uint16_t, int32_t> * std_map_uint16_t_int32_t_new(
    
) {
    return new std::map<uint16_t, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int32_t_delete(
    std::map<uint16_t, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}},), map)
    return StdMap{UInt16, Int32}(res)::STL.StdMaps.StdMap{UInt16, Int32}
end
*/
extern "C" std::map<uint16_t, int32_t> * std_map_uint16_t_int32_t_copy(
    const std::map<uint16_t, int32_t> * restrict map
) {
    return new std::map<uint16_t, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_int32_t_length(
    const std::map<uint16_t, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, Int32}, key::Any)
    res = ccall(("std_map_uint16_t_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_int32_t_haskey(
    const std::map<uint16_t, int32_t> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, Int32}, key::Any)
    res = ccall(("std_map_uint16_t_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_uint16_t_int32_t_getindex(
    std::map<uint16_t, int32_t> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}}, Ptr{Int32}, Ptr{UInt16}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int32_t_setindex_(
    std::map<uint16_t, int32_t> * restrict map,
    int32_t const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, Int32}, key::Any)
    res = ccall(("std_map_uint16_t_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, Int32}
end
*/
extern "C" void std_map_uint16_t_int32_t_delete_(
    std::map<uint16_t, int32_t> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, Int32}, map2::STL.StdMaps.StdMap{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}}, Ptr{STL.StdMaps.StdMap{UInt16, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int32_t_equals(
    const std::map<uint16_t, int32_t> * restrict map1,
    const std::map<uint16_t, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}},), map)
    return StdMapIterator{UInt16, Int32}(res)::STL.StdMaps.StdMapIterator{UInt16, Int32}
end
*/
extern "C" std::map<uint16_t, int32_t>::const_iterator * std_map_uint16_t_int32_t_cbegin(
    const std::map<uint16_t, int32_t> * restrict map
) {
    return new std::map<uint16_t, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int32}},), map)
    return StdMapIterator{UInt16, Int32}(res)::STL.StdMaps.StdMapIterator{UInt16, Int32}
end
*/
extern "C" std::map<uint16_t, int32_t>::const_iterator * std_map_uint16_t_int32_t_cend(
    const std::map<uint16_t, int32_t> * restrict map
) {
    return new std::map<uint16_t, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{Int32})
    res = ccall(("std_map_uint16_t_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int32}}, ())
    return StdMapIterator{UInt16, Int32}(res)::STL.StdMaps.StdMapIterator{UInt16, Int32}
end
*/
extern "C" std::map<uint16_t, int32_t>::const_iterator * std_map_uint16_t_int32_t_const_iterator_new(
    
) {
    return new std::map<uint16_t, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int32_t_const_iterator_delete(
    std::map<uint16_t, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, Int32}, iter2::STL.StdMaps.StdMapIterator{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int32_t_const_iterator_equals(
    const std::map<uint16_t, int32_t>::const_iterator * restrict iter1,
    const std::map<uint16_t, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}},), iter)
    return convert_result(Pair{UInt16, Int32}, res)::Pair{UInt16, Int32}
end
*/
extern "C" const std::pair<const uint16_t, int32_t> * std_map_uint16_t_int32_t_const_iterator_getindex(
    std::map<uint16_t, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int32_t_const_iterator_inc_(
    std::map<uint16_t, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int32_t_const_iterator_dec_(
    std::map<uint16_t, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, Int32}, map::STL.StdMaps.StdMap{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}}, Ptr{STL.StdMaps.StdMap{UInt16, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int32_t_const_iterator_is_cbegin(
    const std::map<uint16_t, int32_t>::const_iterator * restrict iter,
    const std::map<uint16_t, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, Int32}, map::STL.StdMaps.StdMap{UInt16, Int32})
    res = ccall(("std_map_uint16_t_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int32}}, Ptr{STL.StdMaps.StdMap{UInt16, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int32_t_const_iterator_is_cend(
    const std::map<uint16_t, int32_t>::const_iterator * restrict iter,
    const std::map<uint16_t, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{Int64})
    res = ccall(("std_map_uint16_t_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int64}}, ())
    return StdMap{UInt16, Int64}(res)::STL.StdMaps.StdMap{UInt16, Int64}
end
*/
extern "C" std::map<uint16_t, int64_t> * std_map_uint16_t_int64_t_new(
    
) {
    return new std::map<uint16_t, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int64_t_delete(
    std::map<uint16_t, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}},), map)
    return StdMap{UInt16, Int64}(res)::STL.StdMaps.StdMap{UInt16, Int64}
end
*/
extern "C" std::map<uint16_t, int64_t> * std_map_uint16_t_int64_t_copy(
    const std::map<uint16_t, int64_t> * restrict map
) {
    return new std::map<uint16_t, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_int64_t_length(
    const std::map<uint16_t, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, Int64}, key::Any)
    res = ccall(("std_map_uint16_t_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_int64_t_haskey(
    const std::map<uint16_t, int64_t> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, Int64}, key::Any)
    res = ccall(("std_map_uint16_t_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_uint16_t_int64_t_getindex(
    std::map<uint16_t, int64_t> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}}, Ptr{Int64}, Ptr{UInt16}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int64_t_setindex_(
    std::map<uint16_t, int64_t> * restrict map,
    int64_t const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, Int64}, key::Any)
    res = ccall(("std_map_uint16_t_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, Int64}
end
*/
extern "C" void std_map_uint16_t_int64_t_delete_(
    std::map<uint16_t, int64_t> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, Int64}, map2::STL.StdMaps.StdMap{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}}, Ptr{STL.StdMaps.StdMap{UInt16, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int64_t_equals(
    const std::map<uint16_t, int64_t> * restrict map1,
    const std::map<uint16_t, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}},), map)
    return StdMapIterator{UInt16, Int64}(res)::STL.StdMaps.StdMapIterator{UInt16, Int64}
end
*/
extern "C" std::map<uint16_t, int64_t>::const_iterator * std_map_uint16_t_int64_t_cbegin(
    const std::map<uint16_t, int64_t> * restrict map
) {
    return new std::map<uint16_t, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int64}},), map)
    return StdMapIterator{UInt16, Int64}(res)::STL.StdMaps.StdMapIterator{UInt16, Int64}
end
*/
extern "C" std::map<uint16_t, int64_t>::const_iterator * std_map_uint16_t_int64_t_cend(
    const std::map<uint16_t, int64_t> * restrict map
) {
    return new std::map<uint16_t, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{Int64})
    res = ccall(("std_map_uint16_t_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int64}}, ())
    return StdMapIterator{UInt16, Int64}(res)::STL.StdMaps.StdMapIterator{UInt16, Int64}
end
*/
extern "C" std::map<uint16_t, int64_t>::const_iterator * std_map_uint16_t_int64_t_const_iterator_new(
    
) {
    return new std::map<uint16_t, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int64_t_const_iterator_delete(
    std::map<uint16_t, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, Int64}, iter2::STL.StdMaps.StdMapIterator{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int64_t_const_iterator_equals(
    const std::map<uint16_t, int64_t>::const_iterator * restrict iter1,
    const std::map<uint16_t, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}},), iter)
    return convert_result(Pair{UInt16, Int64}, res)::Pair{UInt16, Int64}
end
*/
extern "C" const std::pair<const uint16_t, int64_t> * std_map_uint16_t_int64_t_const_iterator_getindex(
    std::map<uint16_t, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int64_t_const_iterator_inc_(
    std::map<uint16_t, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int64_t_const_iterator_dec_(
    std::map<uint16_t, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, Int64}, map::STL.StdMaps.StdMap{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}}, Ptr{STL.StdMaps.StdMap{UInt16, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int64_t_const_iterator_is_cbegin(
    const std::map<uint16_t, int64_t>::const_iterator * restrict iter,
    const std::map<uint16_t, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, Int64}, map::STL.StdMaps.StdMap{UInt16, Int64})
    res = ccall(("std_map_uint16_t_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int64}}, Ptr{STL.StdMaps.StdMap{UInt16, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int64_t_const_iterator_is_cend(
    const std::map<uint16_t, int64_t>::const_iterator * restrict iter,
    const std::map<uint16_t, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{Int8})
    res = ccall(("std_map_uint16_t_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int8}}, ())
    return StdMap{UInt16, Int8}(res)::STL.StdMaps.StdMap{UInt16, Int8}
end
*/
extern "C" std::map<uint16_t, int8_t> * std_map_uint16_t_int8_t_new(
    
) {
    return new std::map<uint16_t, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int8_t_delete(
    std::map<uint16_t, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}},), map)
    return StdMap{UInt16, Int8}(res)::STL.StdMaps.StdMap{UInt16, Int8}
end
*/
extern "C" std::map<uint16_t, int8_t> * std_map_uint16_t_int8_t_copy(
    const std::map<uint16_t, int8_t> * restrict map
) {
    return new std::map<uint16_t, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_int8_t_length(
    const std::map<uint16_t, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, Int8}, key::Any)
    res = ccall(("std_map_uint16_t_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_int8_t_haskey(
    const std::map<uint16_t, int8_t> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, Int8}, key::Any)
    res = ccall(("std_map_uint16_t_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_uint16_t_int8_t_getindex(
    std::map<uint16_t, int8_t> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}}, Ptr{Int8}, Ptr{UInt16}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int8_t_setindex_(
    std::map<uint16_t, int8_t> * restrict map,
    int8_t const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, Int8}, key::Any)
    res = ccall(("std_map_uint16_t_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, Int8}
end
*/
extern "C" void std_map_uint16_t_int8_t_delete_(
    std::map<uint16_t, int8_t> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, Int8}, map2::STL.StdMaps.StdMap{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}}, Ptr{STL.StdMaps.StdMap{UInt16, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int8_t_equals(
    const std::map<uint16_t, int8_t> * restrict map1,
    const std::map<uint16_t, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}},), map)
    return StdMapIterator{UInt16, Int8}(res)::STL.StdMaps.StdMapIterator{UInt16, Int8}
end
*/
extern "C" std::map<uint16_t, int8_t>::const_iterator * std_map_uint16_t_int8_t_cbegin(
    const std::map<uint16_t, int8_t> * restrict map
) {
    return new std::map<uint16_t, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt16, Int8}},), map)
    return StdMapIterator{UInt16, Int8}(res)::STL.StdMaps.StdMapIterator{UInt16, Int8}
end
*/
extern "C" std::map<uint16_t, int8_t>::const_iterator * std_map_uint16_t_int8_t_cend(
    const std::map<uint16_t, int8_t> * restrict map
) {
    return new std::map<uint16_t, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{Int8})
    res = ccall(("std_map_uint16_t_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Int8}}, ())
    return StdMapIterator{UInt16, Int8}(res)::STL.StdMaps.StdMapIterator{UInt16, Int8}
end
*/
extern "C" std::map<uint16_t, int8_t>::const_iterator * std_map_uint16_t_int8_t_const_iterator_new(
    
) {
    return new std::map<uint16_t, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int8_t_const_iterator_delete(
    std::map<uint16_t, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, Int8}, iter2::STL.StdMaps.StdMapIterator{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int8_t_const_iterator_equals(
    const std::map<uint16_t, int8_t>::const_iterator * restrict iter1,
    const std::map<uint16_t, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}},), iter)
    return convert_result(Pair{UInt16, Int8}, res)::Pair{UInt16, Int8}
end
*/
extern "C" const std::pair<const uint16_t, int8_t> * std_map_uint16_t_int8_t_const_iterator_getindex(
    std::map<uint16_t, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int8_t_const_iterator_inc_(
    std::map<uint16_t, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_int8_t_const_iterator_dec_(
    std::map<uint16_t, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, Int8}, map::STL.StdMaps.StdMap{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}}, Ptr{STL.StdMaps.StdMap{UInt16, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int8_t_const_iterator_is_cbegin(
    const std::map<uint16_t, int8_t>::const_iterator * restrict iter,
    const std::map<uint16_t, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, Int8}, map::STL.StdMaps.StdMap{UInt16, Int8})
    res = ccall(("std_map_uint16_t_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Int8}}, Ptr{STL.StdMaps.StdMap{UInt16, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_int8_t_const_iterator_is_cend(
    const std::map<uint16_t, int8_t>::const_iterator * restrict iter,
    const std::map<uint16_t, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}, ())
    return StdMap{UInt16, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}
end
*/
extern "C" std::map<uint16_t, void *> * std_map_uint16_t_void___new(
    
) {
    return new std::map<uint16_t, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_void___delete(
    std::map<uint16_t, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}},), map)
    return StdMap{UInt16, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}
end
*/
extern "C" std::map<uint16_t, void *> * std_map_uint16_t_void___copy(
    const std::map<uint16_t, void *> * restrict map
) {
    return new std::map<uint16_t, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_void___length(
    const std::map<uint16_t, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint16_t_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_void___haskey(
    const std::map<uint16_t, void *> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint16_t_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_uint16_t_void___getindex(
    std::map<uint16_t, void *> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{UInt16}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_void___setindex_(
    std::map<uint16_t, void *> * restrict map,
    void * const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint16_t_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}
end
*/
extern "C" void std_map_uint16_t_void___delete_(
    std::map<uint16_t, void *> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_void___equals(
    const std::map<uint16_t, void *> * restrict map1,
    const std::map<uint16_t, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}},), map)
    return StdMapIterator{UInt16, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}
end
*/
extern "C" std::map<uint16_t, void *>::const_iterator * std_map_uint16_t_void___cbegin(
    const std::map<uint16_t, void *> * restrict map
) {
    return new std::map<uint16_t, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}},), map)
    return StdMapIterator{UInt16, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}
end
*/
extern "C" std::map<uint16_t, void *>::const_iterator * std_map_uint16_t_void___cend(
    const std::map<uint16_t, void *> * restrict map
) {
    return new std::map<uint16_t, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}, ())
    return StdMapIterator{UInt16, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}
end
*/
extern "C" std::map<uint16_t, void *>::const_iterator * std_map_uint16_t_void___const_iterator_new(
    
) {
    return new std::map<uint16_t, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_void___const_iterator_delete(
    std::map<uint16_t, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_void___const_iterator_equals(
    const std::map<uint16_t, void *>::const_iterator * restrict iter1,
    const std::map<uint16_t, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}},), iter)
    return convert_result(Pair{UInt16, Ptr{Nothing}}, res)::Pair{UInt16, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const uint16_t, void *> * std_map_uint16_t_void___const_iterator_getindex(
    std::map<uint16_t, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_void___const_iterator_inc_(
    std::map<uint16_t, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_void___const_iterator_dec_(
    std::map<uint16_t, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}, map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_void___const_iterator_is_cbegin(
    const std::map<uint16_t, void *>::const_iterator * restrict iter,
    const std::map<uint16_t, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}, map::STL.StdMaps.StdMap{UInt16, Ptr{Nothing}})
    res = ccall(("std_map_uint16_t_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt16, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_void___const_iterator_is_cend(
    const std::map<uint16_t, void *>::const_iterator * restrict iter,
    const std::map<uint16_t, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}, ())
    return StdMap{UInt16, UInt16}(res)::STL.StdMaps.StdMap{UInt16, UInt16}
end
*/
extern "C" std::map<uint16_t, uint16_t> * std_map_uint16_t_uint16_t_new(
    
) {
    return new std::map<uint16_t, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint16_t_delete(
    std::map<uint16_t, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}},), map)
    return StdMap{UInt16, UInt16}(res)::STL.StdMaps.StdMap{UInt16, UInt16}
end
*/
extern "C" std::map<uint16_t, uint16_t> * std_map_uint16_t_uint16_t_copy(
    const std::map<uint16_t, uint16_t> * restrict map
) {
    return new std::map<uint16_t, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_uint16_t_length(
    const std::map<uint16_t, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, UInt16}, key::Any)
    res = ccall(("std_map_uint16_t_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_uint16_t_haskey(
    const std::map<uint16_t, uint16_t> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, UInt16}, key::Any)
    res = ccall(("std_map_uint16_t_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_uint16_t_uint16_t_getindex(
    std::map<uint16_t, uint16_t> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}, Ptr{UInt16}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint16_t_setindex_(
    std::map<uint16_t, uint16_t> * restrict map,
    uint16_t const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, UInt16}, key::Any)
    res = ccall(("std_map_uint16_t_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, UInt16}
end
*/
extern "C" void std_map_uint16_t_uint16_t_delete_(
    std::map<uint16_t, uint16_t> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, UInt16}, map2::STL.StdMaps.StdMap{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint16_t_equals(
    const std::map<uint16_t, uint16_t> * restrict map1,
    const std::map<uint16_t, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}},), map)
    return StdMapIterator{UInt16, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt16}
end
*/
extern "C" std::map<uint16_t, uint16_t>::const_iterator * std_map_uint16_t_uint16_t_cbegin(
    const std::map<uint16_t, uint16_t> * restrict map
) {
    return new std::map<uint16_t, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt16}},), map)
    return StdMapIterator{UInt16, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt16}
end
*/
extern "C" std::map<uint16_t, uint16_t>::const_iterator * std_map_uint16_t_uint16_t_cend(
    const std::map<uint16_t, uint16_t> * restrict map
) {
    return new std::map<uint16_t, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}, ())
    return StdMapIterator{UInt16, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt16}
end
*/
extern "C" std::map<uint16_t, uint16_t>::const_iterator * std_map_uint16_t_uint16_t_const_iterator_new(
    
) {
    return new std::map<uint16_t, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint16_t_const_iterator_delete(
    std::map<uint16_t, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, UInt16}, iter2::STL.StdMaps.StdMapIterator{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint16_t_const_iterator_equals(
    const std::map<uint16_t, uint16_t>::const_iterator * restrict iter1,
    const std::map<uint16_t, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}},), iter)
    return convert_result(Pair{UInt16, UInt16}, res)::Pair{UInt16, UInt16}
end
*/
extern "C" const std::pair<const uint16_t, uint16_t> * std_map_uint16_t_uint16_t_const_iterator_getindex(
    std::map<uint16_t, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint16_t_const_iterator_inc_(
    std::map<uint16_t, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint16_t_const_iterator_dec_(
    std::map<uint16_t, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, UInt16}, map::STL.StdMaps.StdMap{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint16_t_const_iterator_is_cbegin(
    const std::map<uint16_t, uint16_t>::const_iterator * restrict iter,
    const std::map<uint16_t, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, UInt16}, map::STL.StdMaps.StdMap{UInt16, UInt16})
    res = ccall(("std_map_uint16_t_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint16_t_const_iterator_is_cend(
    const std::map<uint16_t, uint16_t>::const_iterator * restrict iter,
    const std::map<uint16_t, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}, ())
    return StdMap{UInt16, UInt32}(res)::STL.StdMaps.StdMap{UInt16, UInt32}
end
*/
extern "C" std::map<uint16_t, uint32_t> * std_map_uint16_t_uint32_t_new(
    
) {
    return new std::map<uint16_t, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint32_t_delete(
    std::map<uint16_t, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}},), map)
    return StdMap{UInt16, UInt32}(res)::STL.StdMaps.StdMap{UInt16, UInt32}
end
*/
extern "C" std::map<uint16_t, uint32_t> * std_map_uint16_t_uint32_t_copy(
    const std::map<uint16_t, uint32_t> * restrict map
) {
    return new std::map<uint16_t, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_uint32_t_length(
    const std::map<uint16_t, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, UInt32}, key::Any)
    res = ccall(("std_map_uint16_t_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_uint32_t_haskey(
    const std::map<uint16_t, uint32_t> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, UInt32}, key::Any)
    res = ccall(("std_map_uint16_t_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_uint16_t_uint32_t_getindex(
    std::map<uint16_t, uint32_t> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}, Ptr{UInt32}, Ptr{UInt16}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint32_t_setindex_(
    std::map<uint16_t, uint32_t> * restrict map,
    uint32_t const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, UInt32}, key::Any)
    res = ccall(("std_map_uint16_t_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, UInt32}
end
*/
extern "C" void std_map_uint16_t_uint32_t_delete_(
    std::map<uint16_t, uint32_t> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, UInt32}, map2::STL.StdMaps.StdMap{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint32_t_equals(
    const std::map<uint16_t, uint32_t> * restrict map1,
    const std::map<uint16_t, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}},), map)
    return StdMapIterator{UInt16, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt32}
end
*/
extern "C" std::map<uint16_t, uint32_t>::const_iterator * std_map_uint16_t_uint32_t_cbegin(
    const std::map<uint16_t, uint32_t> * restrict map
) {
    return new std::map<uint16_t, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt32}},), map)
    return StdMapIterator{UInt16, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt32}
end
*/
extern "C" std::map<uint16_t, uint32_t>::const_iterator * std_map_uint16_t_uint32_t_cend(
    const std::map<uint16_t, uint32_t> * restrict map
) {
    return new std::map<uint16_t, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}, ())
    return StdMapIterator{UInt16, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt32}
end
*/
extern "C" std::map<uint16_t, uint32_t>::const_iterator * std_map_uint16_t_uint32_t_const_iterator_new(
    
) {
    return new std::map<uint16_t, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint32_t_const_iterator_delete(
    std::map<uint16_t, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, UInt32}, iter2::STL.StdMaps.StdMapIterator{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint32_t_const_iterator_equals(
    const std::map<uint16_t, uint32_t>::const_iterator * restrict iter1,
    const std::map<uint16_t, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}},), iter)
    return convert_result(Pair{UInt16, UInt32}, res)::Pair{UInt16, UInt32}
end
*/
extern "C" const std::pair<const uint16_t, uint32_t> * std_map_uint16_t_uint32_t_const_iterator_getindex(
    std::map<uint16_t, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint32_t_const_iterator_inc_(
    std::map<uint16_t, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint32_t_const_iterator_dec_(
    std::map<uint16_t, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, UInt32}, map::STL.StdMaps.StdMap{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint32_t_const_iterator_is_cbegin(
    const std::map<uint16_t, uint32_t>::const_iterator * restrict iter,
    const std::map<uint16_t, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, UInt32}, map::STL.StdMaps.StdMap{UInt16, UInt32})
    res = ccall(("std_map_uint16_t_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint32_t_const_iterator_is_cend(
    const std::map<uint16_t, uint32_t>::const_iterator * restrict iter,
    const std::map<uint16_t, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}, ())
    return StdMap{UInt16, UInt64}(res)::STL.StdMaps.StdMap{UInt16, UInt64}
end
*/
extern "C" std::map<uint16_t, uint64_t> * std_map_uint16_t_uint64_t_new(
    
) {
    return new std::map<uint16_t, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint64_t_delete(
    std::map<uint16_t, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}},), map)
    return StdMap{UInt16, UInt64}(res)::STL.StdMaps.StdMap{UInt16, UInt64}
end
*/
extern "C" std::map<uint16_t, uint64_t> * std_map_uint16_t_uint64_t_copy(
    const std::map<uint16_t, uint64_t> * restrict map
) {
    return new std::map<uint16_t, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_uint64_t_length(
    const std::map<uint16_t, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, UInt64}, key::Any)
    res = ccall(("std_map_uint16_t_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_uint64_t_haskey(
    const std::map<uint16_t, uint64_t> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, UInt64}, key::Any)
    res = ccall(("std_map_uint16_t_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_uint16_t_uint64_t_getindex(
    std::map<uint16_t, uint64_t> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}, Ptr{UInt64}, Ptr{UInt16}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint64_t_setindex_(
    std::map<uint16_t, uint64_t> * restrict map,
    uint64_t const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, UInt64}, key::Any)
    res = ccall(("std_map_uint16_t_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, UInt64}
end
*/
extern "C" void std_map_uint16_t_uint64_t_delete_(
    std::map<uint16_t, uint64_t> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, UInt64}, map2::STL.StdMaps.StdMap{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint64_t_equals(
    const std::map<uint16_t, uint64_t> * restrict map1,
    const std::map<uint16_t, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}},), map)
    return StdMapIterator{UInt16, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt64}
end
*/
extern "C" std::map<uint16_t, uint64_t>::const_iterator * std_map_uint16_t_uint64_t_cbegin(
    const std::map<uint16_t, uint64_t> * restrict map
) {
    return new std::map<uint16_t, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt64}},), map)
    return StdMapIterator{UInt16, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt64}
end
*/
extern "C" std::map<uint16_t, uint64_t>::const_iterator * std_map_uint16_t_uint64_t_cend(
    const std::map<uint16_t, uint64_t> * restrict map
) {
    return new std::map<uint16_t, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}, ())
    return StdMapIterator{UInt16, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt64}
end
*/
extern "C" std::map<uint16_t, uint64_t>::const_iterator * std_map_uint16_t_uint64_t_const_iterator_new(
    
) {
    return new std::map<uint16_t, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint64_t_const_iterator_delete(
    std::map<uint16_t, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, UInt64}, iter2::STL.StdMaps.StdMapIterator{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint64_t_const_iterator_equals(
    const std::map<uint16_t, uint64_t>::const_iterator * restrict iter1,
    const std::map<uint16_t, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}},), iter)
    return convert_result(Pair{UInt16, UInt64}, res)::Pair{UInt16, UInt64}
end
*/
extern "C" const std::pair<const uint16_t, uint64_t> * std_map_uint16_t_uint64_t_const_iterator_getindex(
    std::map<uint16_t, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint64_t_const_iterator_inc_(
    std::map<uint16_t, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint64_t_const_iterator_dec_(
    std::map<uint16_t, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, UInt64}, map::STL.StdMaps.StdMap{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint64_t_const_iterator_is_cbegin(
    const std::map<uint16_t, uint64_t>::const_iterator * restrict iter,
    const std::map<uint16_t, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, UInt64}, map::STL.StdMaps.StdMap{UInt16, UInt64})
    res = ccall(("std_map_uint16_t_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint64_t_const_iterator_is_cend(
    const std::map<uint16_t, uint64_t>::const_iterator * restrict iter,
    const std::map<uint16_t, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt16}, type::Type{UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}, ())
    return StdMap{UInt16, UInt8}(res)::STL.StdMaps.StdMap{UInt16, UInt8}
end
*/
extern "C" std::map<uint16_t, uint8_t> * std_map_uint16_t_uint8_t_new(
    
) {
    return new std::map<uint16_t, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint8_t_delete(
    std::map<uint16_t, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}},), map)
    return StdMap{UInt16, UInt8}(res)::STL.StdMaps.StdMap{UInt16, UInt8}
end
*/
extern "C" std::map<uint16_t, uint8_t> * std_map_uint16_t_uint8_t_copy(
    const std::map<uint16_t, uint8_t> * restrict map
) {
    return new std::map<uint16_t, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint16_t_uint8_t_length(
    const std::map<uint16_t, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt16, UInt8}, key::Any)
    res = ccall(("std_map_uint16_t_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint16_t_uint8_t_haskey(
    const std::map<uint16_t, uint8_t> * restrict map,
    uint16_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt16, UInt8}, key::Any)
    res = ccall(("std_map_uint16_t_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_uint16_t_uint8_t_getindex(
    std::map<uint16_t, uint8_t> * restrict map,
    uint16_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt16, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_uint16_t_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}, Ptr{UInt8}, Ptr{UInt16}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint8_t_setindex_(
    std::map<uint16_t, uint8_t> * restrict map,
    uint8_t const * elt,
    uint16_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt16, UInt8}, key::Any)
    res = ccall(("std_map_uint16_t_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}, Ptr{UInt16}), map, convert_arg(Ptr{UInt16}, convert(UInt16, key)))
    return map::STL.StdMaps.StdMap{UInt16, UInt8}
end
*/
extern "C" void std_map_uint16_t_uint8_t_delete_(
    std::map<uint16_t, uint8_t> * restrict map,
    uint16_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt16, UInt8}, map2::STL.StdMaps.StdMap{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint8_t_equals(
    const std::map<uint16_t, uint8_t> * restrict map1,
    const std::map<uint16_t, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}},), map)
    return StdMapIterator{UInt16, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt8}
end
*/
extern "C" std::map<uint16_t, uint8_t>::const_iterator * std_map_uint16_t_uint8_t_cbegin(
    const std::map<uint16_t, uint8_t> * restrict map
) {
    return new std::map<uint16_t, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt16, UInt8}},), map)
    return StdMapIterator{UInt16, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt8}
end
*/
extern "C" std::map<uint16_t, uint8_t>::const_iterator * std_map_uint16_t_uint8_t_cend(
    const std::map<uint16_t, uint8_t> * restrict map
) {
    return new std::map<uint16_t, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt16}, type::Type{UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}, ())
    return StdMapIterator{UInt16, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt16, UInt8}
end
*/
extern "C" std::map<uint16_t, uint8_t>::const_iterator * std_map_uint16_t_uint8_t_const_iterator_new(
    
) {
    return new std::map<uint16_t, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint8_t_const_iterator_delete(
    std::map<uint16_t, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt16, UInt8}, iter2::STL.StdMaps.StdMapIterator{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint8_t_const_iterator_equals(
    const std::map<uint16_t, uint8_t>::const_iterator * restrict iter1,
    const std::map<uint16_t, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt16, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}},), iter)
    return convert_result(Pair{UInt16, UInt8}, res)::Pair{UInt16, UInt8}
end
*/
extern "C" const std::pair<const uint16_t, uint8_t> * std_map_uint16_t_uint8_t_const_iterator_getindex(
    std::map<uint16_t, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint8_t_const_iterator_inc_(
    std::map<uint16_t, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint16_t_uint8_t_const_iterator_dec_(
    std::map<uint16_t, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt16, UInt8}, map::STL.StdMaps.StdMap{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint8_t_const_iterator_is_cbegin(
    const std::map<uint16_t, uint8_t>::const_iterator * restrict iter,
    const std::map<uint16_t, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt16, UInt8}, map::STL.StdMaps.StdMap{UInt16, UInt8})
    res = ccall(("std_map_uint16_t_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt16, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt16, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint16_t_uint8_t_const_iterator_is_cend(
    const std::map<uint16_t, uint8_t>::const_iterator * restrict iter,
    const std::map<uint16_t, uint8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{Bool})
    res = ccall(("std_map_uint32_t_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Bool}}, ())
    return StdMap{UInt32, Bool}(res)::STL.StdMaps.StdMap{UInt32, Bool}
end
*/
extern "C" std::map<uint32_t, bool> * std_map_uint32_t_bool_new(
    
) {
    return new std::map<uint32_t, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_bool_delete(
    std::map<uint32_t, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}},), map)
    return StdMap{UInt32, Bool}(res)::STL.StdMaps.StdMap{UInt32, Bool}
end
*/
extern "C" std::map<uint32_t, bool> * std_map_uint32_t_bool_copy(
    const std::map<uint32_t, bool> * restrict map
) {
    return new std::map<uint32_t, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_bool_length(
    const std::map<uint32_t, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, Bool}, key::Any)
    res = ccall(("std_map_uint32_t_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_bool_haskey(
    const std::map<uint32_t, bool> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, Bool}, key::Any)
    res = ccall(("std_map_uint32_t_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_uint32_t_bool_getindex(
    std::map<uint32_t, bool> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}}, Ptr{Bool}, Ptr{UInt32}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_bool_setindex_(
    std::map<uint32_t, bool> * restrict map,
    bool const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, Bool}, key::Any)
    res = ccall(("std_map_uint32_t_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, Bool}
end
*/
extern "C" void std_map_uint32_t_bool_delete_(
    std::map<uint32_t, bool> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, Bool}, map2::STL.StdMaps.StdMap{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}}, Ptr{STL.StdMaps.StdMap{UInt32, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_bool_equals(
    const std::map<uint32_t, bool> * restrict map1,
    const std::map<uint32_t, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}},), map)
    return StdMapIterator{UInt32, Bool}(res)::STL.StdMaps.StdMapIterator{UInt32, Bool}
end
*/
extern "C" std::map<uint32_t, bool>::const_iterator * std_map_uint32_t_bool_cbegin(
    const std::map<uint32_t, bool> * restrict map
) {
    return new std::map<uint32_t, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt32, Bool}},), map)
    return StdMapIterator{UInt32, Bool}(res)::STL.StdMaps.StdMapIterator{UInt32, Bool}
end
*/
extern "C" std::map<uint32_t, bool>::const_iterator * std_map_uint32_t_bool_cend(
    const std::map<uint32_t, bool> * restrict map
) {
    return new std::map<uint32_t, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{Bool})
    res = ccall(("std_map_uint32_t_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Bool}}, ())
    return StdMapIterator{UInt32, Bool}(res)::STL.StdMaps.StdMapIterator{UInt32, Bool}
end
*/
extern "C" std::map<uint32_t, bool>::const_iterator * std_map_uint32_t_bool_const_iterator_new(
    
) {
    return new std::map<uint32_t, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_bool_const_iterator_delete(
    std::map<uint32_t, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, Bool}, iter2::STL.StdMaps.StdMapIterator{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_bool_const_iterator_equals(
    const std::map<uint32_t, bool>::const_iterator * restrict iter1,
    const std::map<uint32_t, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}},), iter)
    return convert_result(Pair{UInt32, Bool}, res)::Pair{UInt32, Bool}
end
*/
extern "C" const std::pair<const uint32_t, bool> * std_map_uint32_t_bool_const_iterator_getindex(
    std::map<uint32_t, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_bool_const_iterator_inc_(
    std::map<uint32_t, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_bool_const_iterator_dec_(
    std::map<uint32_t, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, Bool}, map::STL.StdMaps.StdMap{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}}, Ptr{STL.StdMaps.StdMap{UInt32, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_bool_const_iterator_is_cbegin(
    const std::map<uint32_t, bool>::const_iterator * restrict iter,
    const std::map<uint32_t, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, Bool}, map::STL.StdMaps.StdMap{UInt32, Bool})
    res = ccall(("std_map_uint32_t_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Bool}}, Ptr{STL.StdMaps.StdMap{UInt32, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_bool_const_iterator_is_cend(
    const std::map<uint32_t, bool>::const_iterator * restrict iter,
    const std::map<uint32_t, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{Float32})
    res = ccall(("std_map_uint32_t_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Float32}}, ())
    return StdMap{UInt32, Float32}(res)::STL.StdMaps.StdMap{UInt32, Float32}
end
*/
extern "C" std::map<uint32_t, float> * std_map_uint32_t_float_new(
    
) {
    return new std::map<uint32_t, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_float_delete(
    std::map<uint32_t, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}},), map)
    return StdMap{UInt32, Float32}(res)::STL.StdMaps.StdMap{UInt32, Float32}
end
*/
extern "C" std::map<uint32_t, float> * std_map_uint32_t_float_copy(
    const std::map<uint32_t, float> * restrict map
) {
    return new std::map<uint32_t, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_float_length(
    const std::map<uint32_t, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, Float32}, key::Any)
    res = ccall(("std_map_uint32_t_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_float_haskey(
    const std::map<uint32_t, float> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, Float32}, key::Any)
    res = ccall(("std_map_uint32_t_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_uint32_t_float_getindex(
    std::map<uint32_t, float> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}}, Ptr{Float32}, Ptr{UInt32}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_float_setindex_(
    std::map<uint32_t, float> * restrict map,
    float const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, Float32}, key::Any)
    res = ccall(("std_map_uint32_t_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, Float32}
end
*/
extern "C" void std_map_uint32_t_float_delete_(
    std::map<uint32_t, float> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, Float32}, map2::STL.StdMaps.StdMap{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}}, Ptr{STL.StdMaps.StdMap{UInt32, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_float_equals(
    const std::map<uint32_t, float> * restrict map1,
    const std::map<uint32_t, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}},), map)
    return StdMapIterator{UInt32, Float32}(res)::STL.StdMaps.StdMapIterator{UInt32, Float32}
end
*/
extern "C" std::map<uint32_t, float>::const_iterator * std_map_uint32_t_float_cbegin(
    const std::map<uint32_t, float> * restrict map
) {
    return new std::map<uint32_t, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt32, Float32}},), map)
    return StdMapIterator{UInt32, Float32}(res)::STL.StdMaps.StdMapIterator{UInt32, Float32}
end
*/
extern "C" std::map<uint32_t, float>::const_iterator * std_map_uint32_t_float_cend(
    const std::map<uint32_t, float> * restrict map
) {
    return new std::map<uint32_t, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{Float32})
    res = ccall(("std_map_uint32_t_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Float32}}, ())
    return StdMapIterator{UInt32, Float32}(res)::STL.StdMaps.StdMapIterator{UInt32, Float32}
end
*/
extern "C" std::map<uint32_t, float>::const_iterator * std_map_uint32_t_float_const_iterator_new(
    
) {
    return new std::map<uint32_t, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_float_const_iterator_delete(
    std::map<uint32_t, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, Float32}, iter2::STL.StdMaps.StdMapIterator{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_float_const_iterator_equals(
    const std::map<uint32_t, float>::const_iterator * restrict iter1,
    const std::map<uint32_t, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}},), iter)
    return convert_result(Pair{UInt32, Float32}, res)::Pair{UInt32, Float32}
end
*/
extern "C" const std::pair<const uint32_t, float> * std_map_uint32_t_float_const_iterator_getindex(
    std::map<uint32_t, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_float_const_iterator_inc_(
    std::map<uint32_t, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_float_const_iterator_dec_(
    std::map<uint32_t, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, Float32}, map::STL.StdMaps.StdMap{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}}, Ptr{STL.StdMaps.StdMap{UInt32, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_float_const_iterator_is_cbegin(
    const std::map<uint32_t, float>::const_iterator * restrict iter,
    const std::map<uint32_t, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, Float32}, map::STL.StdMaps.StdMap{UInt32, Float32})
    res = ccall(("std_map_uint32_t_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float32}}, Ptr{STL.StdMaps.StdMap{UInt32, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_float_const_iterator_is_cend(
    const std::map<uint32_t, float>::const_iterator * restrict iter,
    const std::map<uint32_t, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{Float64})
    res = ccall(("std_map_uint32_t_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Float64}}, ())
    return StdMap{UInt32, Float64}(res)::STL.StdMaps.StdMap{UInt32, Float64}
end
*/
extern "C" std::map<uint32_t, double> * std_map_uint32_t_double_new(
    
) {
    return new std::map<uint32_t, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_double_delete(
    std::map<uint32_t, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}},), map)
    return StdMap{UInt32, Float64}(res)::STL.StdMaps.StdMap{UInt32, Float64}
end
*/
extern "C" std::map<uint32_t, double> * std_map_uint32_t_double_copy(
    const std::map<uint32_t, double> * restrict map
) {
    return new std::map<uint32_t, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_double_length(
    const std::map<uint32_t, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, Float64}, key::Any)
    res = ccall(("std_map_uint32_t_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_double_haskey(
    const std::map<uint32_t, double> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, Float64}, key::Any)
    res = ccall(("std_map_uint32_t_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_uint32_t_double_getindex(
    std::map<uint32_t, double> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}}, Ptr{Float64}, Ptr{UInt32}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_double_setindex_(
    std::map<uint32_t, double> * restrict map,
    double const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, Float64}, key::Any)
    res = ccall(("std_map_uint32_t_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, Float64}
end
*/
extern "C" void std_map_uint32_t_double_delete_(
    std::map<uint32_t, double> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, Float64}, map2::STL.StdMaps.StdMap{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}}, Ptr{STL.StdMaps.StdMap{UInt32, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_double_equals(
    const std::map<uint32_t, double> * restrict map1,
    const std::map<uint32_t, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}},), map)
    return StdMapIterator{UInt32, Float64}(res)::STL.StdMaps.StdMapIterator{UInt32, Float64}
end
*/
extern "C" std::map<uint32_t, double>::const_iterator * std_map_uint32_t_double_cbegin(
    const std::map<uint32_t, double> * restrict map
) {
    return new std::map<uint32_t, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt32, Float64}},), map)
    return StdMapIterator{UInt32, Float64}(res)::STL.StdMaps.StdMapIterator{UInt32, Float64}
end
*/
extern "C" std::map<uint32_t, double>::const_iterator * std_map_uint32_t_double_cend(
    const std::map<uint32_t, double> * restrict map
) {
    return new std::map<uint32_t, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{Float64})
    res = ccall(("std_map_uint32_t_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Float64}}, ())
    return StdMapIterator{UInt32, Float64}(res)::STL.StdMaps.StdMapIterator{UInt32, Float64}
end
*/
extern "C" std::map<uint32_t, double>::const_iterator * std_map_uint32_t_double_const_iterator_new(
    
) {
    return new std::map<uint32_t, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_double_const_iterator_delete(
    std::map<uint32_t, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, Float64}, iter2::STL.StdMaps.StdMapIterator{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_double_const_iterator_equals(
    const std::map<uint32_t, double>::const_iterator * restrict iter1,
    const std::map<uint32_t, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}},), iter)
    return convert_result(Pair{UInt32, Float64}, res)::Pair{UInt32, Float64}
end
*/
extern "C" const std::pair<const uint32_t, double> * std_map_uint32_t_double_const_iterator_getindex(
    std::map<uint32_t, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_double_const_iterator_inc_(
    std::map<uint32_t, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_double_const_iterator_dec_(
    std::map<uint32_t, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, Float64}, map::STL.StdMaps.StdMap{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}}, Ptr{STL.StdMaps.StdMap{UInt32, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_double_const_iterator_is_cbegin(
    const std::map<uint32_t, double>::const_iterator * restrict iter,
    const std::map<uint32_t, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, Float64}, map::STL.StdMaps.StdMap{UInt32, Float64})
    res = ccall(("std_map_uint32_t_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Float64}}, Ptr{STL.StdMaps.StdMap{UInt32, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_double_const_iterator_is_cend(
    const std::map<uint32_t, double>::const_iterator * restrict iter,
    const std::map<uint32_t, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{Int16})
    res = ccall(("std_map_uint32_t_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int16}}, ())
    return StdMap{UInt32, Int16}(res)::STL.StdMaps.StdMap{UInt32, Int16}
end
*/
extern "C" std::map<uint32_t, int16_t> * std_map_uint32_t_int16_t_new(
    
) {
    return new std::map<uint32_t, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int16_t_delete(
    std::map<uint32_t, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}},), map)
    return StdMap{UInt32, Int16}(res)::STL.StdMaps.StdMap{UInt32, Int16}
end
*/
extern "C" std::map<uint32_t, int16_t> * std_map_uint32_t_int16_t_copy(
    const std::map<uint32_t, int16_t> * restrict map
) {
    return new std::map<uint32_t, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_int16_t_length(
    const std::map<uint32_t, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, Int16}, key::Any)
    res = ccall(("std_map_uint32_t_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_int16_t_haskey(
    const std::map<uint32_t, int16_t> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, Int16}, key::Any)
    res = ccall(("std_map_uint32_t_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_uint32_t_int16_t_getindex(
    std::map<uint32_t, int16_t> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}}, Ptr{Int16}, Ptr{UInt32}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int16_t_setindex_(
    std::map<uint32_t, int16_t> * restrict map,
    int16_t const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, Int16}, key::Any)
    res = ccall(("std_map_uint32_t_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, Int16}
end
*/
extern "C" void std_map_uint32_t_int16_t_delete_(
    std::map<uint32_t, int16_t> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, Int16}, map2::STL.StdMaps.StdMap{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}}, Ptr{STL.StdMaps.StdMap{UInt32, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int16_t_equals(
    const std::map<uint32_t, int16_t> * restrict map1,
    const std::map<uint32_t, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}},), map)
    return StdMapIterator{UInt32, Int16}(res)::STL.StdMaps.StdMapIterator{UInt32, Int16}
end
*/
extern "C" std::map<uint32_t, int16_t>::const_iterator * std_map_uint32_t_int16_t_cbegin(
    const std::map<uint32_t, int16_t> * restrict map
) {
    return new std::map<uint32_t, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int16}},), map)
    return StdMapIterator{UInt32, Int16}(res)::STL.StdMaps.StdMapIterator{UInt32, Int16}
end
*/
extern "C" std::map<uint32_t, int16_t>::const_iterator * std_map_uint32_t_int16_t_cend(
    const std::map<uint32_t, int16_t> * restrict map
) {
    return new std::map<uint32_t, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{Int16})
    res = ccall(("std_map_uint32_t_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int16}}, ())
    return StdMapIterator{UInt32, Int16}(res)::STL.StdMaps.StdMapIterator{UInt32, Int16}
end
*/
extern "C" std::map<uint32_t, int16_t>::const_iterator * std_map_uint32_t_int16_t_const_iterator_new(
    
) {
    return new std::map<uint32_t, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int16_t_const_iterator_delete(
    std::map<uint32_t, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, Int16}, iter2::STL.StdMaps.StdMapIterator{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int16_t_const_iterator_equals(
    const std::map<uint32_t, int16_t>::const_iterator * restrict iter1,
    const std::map<uint32_t, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}},), iter)
    return convert_result(Pair{UInt32, Int16}, res)::Pair{UInt32, Int16}
end
*/
extern "C" const std::pair<const uint32_t, int16_t> * std_map_uint32_t_int16_t_const_iterator_getindex(
    std::map<uint32_t, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int16_t_const_iterator_inc_(
    std::map<uint32_t, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int16_t_const_iterator_dec_(
    std::map<uint32_t, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, Int16}, map::STL.StdMaps.StdMap{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}}, Ptr{STL.StdMaps.StdMap{UInt32, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int16_t_const_iterator_is_cbegin(
    const std::map<uint32_t, int16_t>::const_iterator * restrict iter,
    const std::map<uint32_t, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, Int16}, map::STL.StdMaps.StdMap{UInt32, Int16})
    res = ccall(("std_map_uint32_t_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int16}}, Ptr{STL.StdMaps.StdMap{UInt32, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int16_t_const_iterator_is_cend(
    const std::map<uint32_t, int16_t>::const_iterator * restrict iter,
    const std::map<uint32_t, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{Int32})
    res = ccall(("std_map_uint32_t_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int32}}, ())
    return StdMap{UInt32, Int32}(res)::STL.StdMaps.StdMap{UInt32, Int32}
end
*/
extern "C" std::map<uint32_t, int32_t> * std_map_uint32_t_int32_t_new(
    
) {
    return new std::map<uint32_t, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int32_t_delete(
    std::map<uint32_t, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}},), map)
    return StdMap{UInt32, Int32}(res)::STL.StdMaps.StdMap{UInt32, Int32}
end
*/
extern "C" std::map<uint32_t, int32_t> * std_map_uint32_t_int32_t_copy(
    const std::map<uint32_t, int32_t> * restrict map
) {
    return new std::map<uint32_t, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_int32_t_length(
    const std::map<uint32_t, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, Int32}, key::Any)
    res = ccall(("std_map_uint32_t_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_int32_t_haskey(
    const std::map<uint32_t, int32_t> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, Int32}, key::Any)
    res = ccall(("std_map_uint32_t_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_uint32_t_int32_t_getindex(
    std::map<uint32_t, int32_t> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}}, Ptr{Int32}, Ptr{UInt32}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int32_t_setindex_(
    std::map<uint32_t, int32_t> * restrict map,
    int32_t const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, Int32}, key::Any)
    res = ccall(("std_map_uint32_t_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, Int32}
end
*/
extern "C" void std_map_uint32_t_int32_t_delete_(
    std::map<uint32_t, int32_t> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, Int32}, map2::STL.StdMaps.StdMap{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}}, Ptr{STL.StdMaps.StdMap{UInt32, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int32_t_equals(
    const std::map<uint32_t, int32_t> * restrict map1,
    const std::map<uint32_t, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}},), map)
    return StdMapIterator{UInt32, Int32}(res)::STL.StdMaps.StdMapIterator{UInt32, Int32}
end
*/
extern "C" std::map<uint32_t, int32_t>::const_iterator * std_map_uint32_t_int32_t_cbegin(
    const std::map<uint32_t, int32_t> * restrict map
) {
    return new std::map<uint32_t, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int32}},), map)
    return StdMapIterator{UInt32, Int32}(res)::STL.StdMaps.StdMapIterator{UInt32, Int32}
end
*/
extern "C" std::map<uint32_t, int32_t>::const_iterator * std_map_uint32_t_int32_t_cend(
    const std::map<uint32_t, int32_t> * restrict map
) {
    return new std::map<uint32_t, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{Int32})
    res = ccall(("std_map_uint32_t_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int32}}, ())
    return StdMapIterator{UInt32, Int32}(res)::STL.StdMaps.StdMapIterator{UInt32, Int32}
end
*/
extern "C" std::map<uint32_t, int32_t>::const_iterator * std_map_uint32_t_int32_t_const_iterator_new(
    
) {
    return new std::map<uint32_t, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int32_t_const_iterator_delete(
    std::map<uint32_t, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, Int32}, iter2::STL.StdMaps.StdMapIterator{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int32_t_const_iterator_equals(
    const std::map<uint32_t, int32_t>::const_iterator * restrict iter1,
    const std::map<uint32_t, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}},), iter)
    return convert_result(Pair{UInt32, Int32}, res)::Pair{UInt32, Int32}
end
*/
extern "C" const std::pair<const uint32_t, int32_t> * std_map_uint32_t_int32_t_const_iterator_getindex(
    std::map<uint32_t, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int32_t_const_iterator_inc_(
    std::map<uint32_t, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int32_t_const_iterator_dec_(
    std::map<uint32_t, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, Int32}, map::STL.StdMaps.StdMap{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}}, Ptr{STL.StdMaps.StdMap{UInt32, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int32_t_const_iterator_is_cbegin(
    const std::map<uint32_t, int32_t>::const_iterator * restrict iter,
    const std::map<uint32_t, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, Int32}, map::STL.StdMaps.StdMap{UInt32, Int32})
    res = ccall(("std_map_uint32_t_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int32}}, Ptr{STL.StdMaps.StdMap{UInt32, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int32_t_const_iterator_is_cend(
    const std::map<uint32_t, int32_t>::const_iterator * restrict iter,
    const std::map<uint32_t, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{Int64})
    res = ccall(("std_map_uint32_t_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int64}}, ())
    return StdMap{UInt32, Int64}(res)::STL.StdMaps.StdMap{UInt32, Int64}
end
*/
extern "C" std::map<uint32_t, int64_t> * std_map_uint32_t_int64_t_new(
    
) {
    return new std::map<uint32_t, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int64_t_delete(
    std::map<uint32_t, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}},), map)
    return StdMap{UInt32, Int64}(res)::STL.StdMaps.StdMap{UInt32, Int64}
end
*/
extern "C" std::map<uint32_t, int64_t> * std_map_uint32_t_int64_t_copy(
    const std::map<uint32_t, int64_t> * restrict map
) {
    return new std::map<uint32_t, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_int64_t_length(
    const std::map<uint32_t, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, Int64}, key::Any)
    res = ccall(("std_map_uint32_t_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_int64_t_haskey(
    const std::map<uint32_t, int64_t> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, Int64}, key::Any)
    res = ccall(("std_map_uint32_t_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_uint32_t_int64_t_getindex(
    std::map<uint32_t, int64_t> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}}, Ptr{Int64}, Ptr{UInt32}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int64_t_setindex_(
    std::map<uint32_t, int64_t> * restrict map,
    int64_t const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, Int64}, key::Any)
    res = ccall(("std_map_uint32_t_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, Int64}
end
*/
extern "C" void std_map_uint32_t_int64_t_delete_(
    std::map<uint32_t, int64_t> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, Int64}, map2::STL.StdMaps.StdMap{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}}, Ptr{STL.StdMaps.StdMap{UInt32, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int64_t_equals(
    const std::map<uint32_t, int64_t> * restrict map1,
    const std::map<uint32_t, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}},), map)
    return StdMapIterator{UInt32, Int64}(res)::STL.StdMaps.StdMapIterator{UInt32, Int64}
end
*/
extern "C" std::map<uint32_t, int64_t>::const_iterator * std_map_uint32_t_int64_t_cbegin(
    const std::map<uint32_t, int64_t> * restrict map
) {
    return new std::map<uint32_t, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int64}},), map)
    return StdMapIterator{UInt32, Int64}(res)::STL.StdMaps.StdMapIterator{UInt32, Int64}
end
*/
extern "C" std::map<uint32_t, int64_t>::const_iterator * std_map_uint32_t_int64_t_cend(
    const std::map<uint32_t, int64_t> * restrict map
) {
    return new std::map<uint32_t, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{Int64})
    res = ccall(("std_map_uint32_t_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int64}}, ())
    return StdMapIterator{UInt32, Int64}(res)::STL.StdMaps.StdMapIterator{UInt32, Int64}
end
*/
extern "C" std::map<uint32_t, int64_t>::const_iterator * std_map_uint32_t_int64_t_const_iterator_new(
    
) {
    return new std::map<uint32_t, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int64_t_const_iterator_delete(
    std::map<uint32_t, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, Int64}, iter2::STL.StdMaps.StdMapIterator{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int64_t_const_iterator_equals(
    const std::map<uint32_t, int64_t>::const_iterator * restrict iter1,
    const std::map<uint32_t, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}},), iter)
    return convert_result(Pair{UInt32, Int64}, res)::Pair{UInt32, Int64}
end
*/
extern "C" const std::pair<const uint32_t, int64_t> * std_map_uint32_t_int64_t_const_iterator_getindex(
    std::map<uint32_t, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int64_t_const_iterator_inc_(
    std::map<uint32_t, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int64_t_const_iterator_dec_(
    std::map<uint32_t, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, Int64}, map::STL.StdMaps.StdMap{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}}, Ptr{STL.StdMaps.StdMap{UInt32, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int64_t_const_iterator_is_cbegin(
    const std::map<uint32_t, int64_t>::const_iterator * restrict iter,
    const std::map<uint32_t, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, Int64}, map::STL.StdMaps.StdMap{UInt32, Int64})
    res = ccall(("std_map_uint32_t_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int64}}, Ptr{STL.StdMaps.StdMap{UInt32, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int64_t_const_iterator_is_cend(
    const std::map<uint32_t, int64_t>::const_iterator * restrict iter,
    const std::map<uint32_t, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{Int8})
    res = ccall(("std_map_uint32_t_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int8}}, ())
    return StdMap{UInt32, Int8}(res)::STL.StdMaps.StdMap{UInt32, Int8}
end
*/
extern "C" std::map<uint32_t, int8_t> * std_map_uint32_t_int8_t_new(
    
) {
    return new std::map<uint32_t, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int8_t_delete(
    std::map<uint32_t, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}},), map)
    return StdMap{UInt32, Int8}(res)::STL.StdMaps.StdMap{UInt32, Int8}
end
*/
extern "C" std::map<uint32_t, int8_t> * std_map_uint32_t_int8_t_copy(
    const std::map<uint32_t, int8_t> * restrict map
) {
    return new std::map<uint32_t, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_int8_t_length(
    const std::map<uint32_t, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, Int8}, key::Any)
    res = ccall(("std_map_uint32_t_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_int8_t_haskey(
    const std::map<uint32_t, int8_t> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, Int8}, key::Any)
    res = ccall(("std_map_uint32_t_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_uint32_t_int8_t_getindex(
    std::map<uint32_t, int8_t> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}}, Ptr{Int8}, Ptr{UInt32}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int8_t_setindex_(
    std::map<uint32_t, int8_t> * restrict map,
    int8_t const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, Int8}, key::Any)
    res = ccall(("std_map_uint32_t_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, Int8}
end
*/
extern "C" void std_map_uint32_t_int8_t_delete_(
    std::map<uint32_t, int8_t> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, Int8}, map2::STL.StdMaps.StdMap{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}}, Ptr{STL.StdMaps.StdMap{UInt32, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int8_t_equals(
    const std::map<uint32_t, int8_t> * restrict map1,
    const std::map<uint32_t, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}},), map)
    return StdMapIterator{UInt32, Int8}(res)::STL.StdMaps.StdMapIterator{UInt32, Int8}
end
*/
extern "C" std::map<uint32_t, int8_t>::const_iterator * std_map_uint32_t_int8_t_cbegin(
    const std::map<uint32_t, int8_t> * restrict map
) {
    return new std::map<uint32_t, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt32, Int8}},), map)
    return StdMapIterator{UInt32, Int8}(res)::STL.StdMaps.StdMapIterator{UInt32, Int8}
end
*/
extern "C" std::map<uint32_t, int8_t>::const_iterator * std_map_uint32_t_int8_t_cend(
    const std::map<uint32_t, int8_t> * restrict map
) {
    return new std::map<uint32_t, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{Int8})
    res = ccall(("std_map_uint32_t_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Int8}}, ())
    return StdMapIterator{UInt32, Int8}(res)::STL.StdMaps.StdMapIterator{UInt32, Int8}
end
*/
extern "C" std::map<uint32_t, int8_t>::const_iterator * std_map_uint32_t_int8_t_const_iterator_new(
    
) {
    return new std::map<uint32_t, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int8_t_const_iterator_delete(
    std::map<uint32_t, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, Int8}, iter2::STL.StdMaps.StdMapIterator{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int8_t_const_iterator_equals(
    const std::map<uint32_t, int8_t>::const_iterator * restrict iter1,
    const std::map<uint32_t, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}},), iter)
    return convert_result(Pair{UInt32, Int8}, res)::Pair{UInt32, Int8}
end
*/
extern "C" const std::pair<const uint32_t, int8_t> * std_map_uint32_t_int8_t_const_iterator_getindex(
    std::map<uint32_t, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int8_t_const_iterator_inc_(
    std::map<uint32_t, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_int8_t_const_iterator_dec_(
    std::map<uint32_t, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, Int8}, map::STL.StdMaps.StdMap{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}}, Ptr{STL.StdMaps.StdMap{UInt32, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int8_t_const_iterator_is_cbegin(
    const std::map<uint32_t, int8_t>::const_iterator * restrict iter,
    const std::map<uint32_t, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, Int8}, map::STL.StdMaps.StdMap{UInt32, Int8})
    res = ccall(("std_map_uint32_t_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Int8}}, Ptr{STL.StdMaps.StdMap{UInt32, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_int8_t_const_iterator_is_cend(
    const std::map<uint32_t, int8_t>::const_iterator * restrict iter,
    const std::map<uint32_t, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}, ())
    return StdMap{UInt32, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}
end
*/
extern "C" std::map<uint32_t, void *> * std_map_uint32_t_void___new(
    
) {
    return new std::map<uint32_t, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_void___delete(
    std::map<uint32_t, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}},), map)
    return StdMap{UInt32, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}
end
*/
extern "C" std::map<uint32_t, void *> * std_map_uint32_t_void___copy(
    const std::map<uint32_t, void *> * restrict map
) {
    return new std::map<uint32_t, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_void___length(
    const std::map<uint32_t, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint32_t_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_void___haskey(
    const std::map<uint32_t, void *> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint32_t_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_uint32_t_void___getindex(
    std::map<uint32_t, void *> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{UInt32}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_void___setindex_(
    std::map<uint32_t, void *> * restrict map,
    void * const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint32_t_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}
end
*/
extern "C" void std_map_uint32_t_void___delete_(
    std::map<uint32_t, void *> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_void___equals(
    const std::map<uint32_t, void *> * restrict map1,
    const std::map<uint32_t, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}},), map)
    return StdMapIterator{UInt32, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}
end
*/
extern "C" std::map<uint32_t, void *>::const_iterator * std_map_uint32_t_void___cbegin(
    const std::map<uint32_t, void *> * restrict map
) {
    return new std::map<uint32_t, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}},), map)
    return StdMapIterator{UInt32, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}
end
*/
extern "C" std::map<uint32_t, void *>::const_iterator * std_map_uint32_t_void___cend(
    const std::map<uint32_t, void *> * restrict map
) {
    return new std::map<uint32_t, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}, ())
    return StdMapIterator{UInt32, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}
end
*/
extern "C" std::map<uint32_t, void *>::const_iterator * std_map_uint32_t_void___const_iterator_new(
    
) {
    return new std::map<uint32_t, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_void___const_iterator_delete(
    std::map<uint32_t, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_void___const_iterator_equals(
    const std::map<uint32_t, void *>::const_iterator * restrict iter1,
    const std::map<uint32_t, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}},), iter)
    return convert_result(Pair{UInt32, Ptr{Nothing}}, res)::Pair{UInt32, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const uint32_t, void *> * std_map_uint32_t_void___const_iterator_getindex(
    std::map<uint32_t, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_void___const_iterator_inc_(
    std::map<uint32_t, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_void___const_iterator_dec_(
    std::map<uint32_t, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}, map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_void___const_iterator_is_cbegin(
    const std::map<uint32_t, void *>::const_iterator * restrict iter,
    const std::map<uint32_t, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}, map::STL.StdMaps.StdMap{UInt32, Ptr{Nothing}})
    res = ccall(("std_map_uint32_t_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt32, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_void___const_iterator_is_cend(
    const std::map<uint32_t, void *>::const_iterator * restrict iter,
    const std::map<uint32_t, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}, ())
    return StdMap{UInt32, UInt16}(res)::STL.StdMaps.StdMap{UInt32, UInt16}
end
*/
extern "C" std::map<uint32_t, uint16_t> * std_map_uint32_t_uint16_t_new(
    
) {
    return new std::map<uint32_t, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint16_t_delete(
    std::map<uint32_t, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}},), map)
    return StdMap{UInt32, UInt16}(res)::STL.StdMaps.StdMap{UInt32, UInt16}
end
*/
extern "C" std::map<uint32_t, uint16_t> * std_map_uint32_t_uint16_t_copy(
    const std::map<uint32_t, uint16_t> * restrict map
) {
    return new std::map<uint32_t, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_uint16_t_length(
    const std::map<uint32_t, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, UInt16}, key::Any)
    res = ccall(("std_map_uint32_t_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_uint16_t_haskey(
    const std::map<uint32_t, uint16_t> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, UInt16}, key::Any)
    res = ccall(("std_map_uint32_t_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_uint32_t_uint16_t_getindex(
    std::map<uint32_t, uint16_t> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}, Ptr{UInt16}, Ptr{UInt32}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint16_t_setindex_(
    std::map<uint32_t, uint16_t> * restrict map,
    uint16_t const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, UInt16}, key::Any)
    res = ccall(("std_map_uint32_t_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, UInt16}
end
*/
extern "C" void std_map_uint32_t_uint16_t_delete_(
    std::map<uint32_t, uint16_t> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, UInt16}, map2::STL.StdMaps.StdMap{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint16_t_equals(
    const std::map<uint32_t, uint16_t> * restrict map1,
    const std::map<uint32_t, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}},), map)
    return StdMapIterator{UInt32, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt16}
end
*/
extern "C" std::map<uint32_t, uint16_t>::const_iterator * std_map_uint32_t_uint16_t_cbegin(
    const std::map<uint32_t, uint16_t> * restrict map
) {
    return new std::map<uint32_t, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt16}},), map)
    return StdMapIterator{UInt32, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt16}
end
*/
extern "C" std::map<uint32_t, uint16_t>::const_iterator * std_map_uint32_t_uint16_t_cend(
    const std::map<uint32_t, uint16_t> * restrict map
) {
    return new std::map<uint32_t, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}, ())
    return StdMapIterator{UInt32, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt16}
end
*/
extern "C" std::map<uint32_t, uint16_t>::const_iterator * std_map_uint32_t_uint16_t_const_iterator_new(
    
) {
    return new std::map<uint32_t, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint16_t_const_iterator_delete(
    std::map<uint32_t, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, UInt16}, iter2::STL.StdMaps.StdMapIterator{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint16_t_const_iterator_equals(
    const std::map<uint32_t, uint16_t>::const_iterator * restrict iter1,
    const std::map<uint32_t, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}},), iter)
    return convert_result(Pair{UInt32, UInt16}, res)::Pair{UInt32, UInt16}
end
*/
extern "C" const std::pair<const uint32_t, uint16_t> * std_map_uint32_t_uint16_t_const_iterator_getindex(
    std::map<uint32_t, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint16_t_const_iterator_inc_(
    std::map<uint32_t, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint16_t_const_iterator_dec_(
    std::map<uint32_t, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, UInt16}, map::STL.StdMaps.StdMap{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint16_t_const_iterator_is_cbegin(
    const std::map<uint32_t, uint16_t>::const_iterator * restrict iter,
    const std::map<uint32_t, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, UInt16}, map::STL.StdMaps.StdMap{UInt32, UInt16})
    res = ccall(("std_map_uint32_t_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint16_t_const_iterator_is_cend(
    const std::map<uint32_t, uint16_t>::const_iterator * restrict iter,
    const std::map<uint32_t, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}, ())
    return StdMap{UInt32, UInt32}(res)::STL.StdMaps.StdMap{UInt32, UInt32}
end
*/
extern "C" std::map<uint32_t, uint32_t> * std_map_uint32_t_uint32_t_new(
    
) {
    return new std::map<uint32_t, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint32_t_delete(
    std::map<uint32_t, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}},), map)
    return StdMap{UInt32, UInt32}(res)::STL.StdMaps.StdMap{UInt32, UInt32}
end
*/
extern "C" std::map<uint32_t, uint32_t> * std_map_uint32_t_uint32_t_copy(
    const std::map<uint32_t, uint32_t> * restrict map
) {
    return new std::map<uint32_t, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_uint32_t_length(
    const std::map<uint32_t, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, UInt32}, key::Any)
    res = ccall(("std_map_uint32_t_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_uint32_t_haskey(
    const std::map<uint32_t, uint32_t> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, UInt32}, key::Any)
    res = ccall(("std_map_uint32_t_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_uint32_t_uint32_t_getindex(
    std::map<uint32_t, uint32_t> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}, Ptr{UInt32}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint32_t_setindex_(
    std::map<uint32_t, uint32_t> * restrict map,
    uint32_t const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, UInt32}, key::Any)
    res = ccall(("std_map_uint32_t_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, UInt32}
end
*/
extern "C" void std_map_uint32_t_uint32_t_delete_(
    std::map<uint32_t, uint32_t> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, UInt32}, map2::STL.StdMaps.StdMap{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint32_t_equals(
    const std::map<uint32_t, uint32_t> * restrict map1,
    const std::map<uint32_t, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}},), map)
    return StdMapIterator{UInt32, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt32}
end
*/
extern "C" std::map<uint32_t, uint32_t>::const_iterator * std_map_uint32_t_uint32_t_cbegin(
    const std::map<uint32_t, uint32_t> * restrict map
) {
    return new std::map<uint32_t, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt32}},), map)
    return StdMapIterator{UInt32, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt32}
end
*/
extern "C" std::map<uint32_t, uint32_t>::const_iterator * std_map_uint32_t_uint32_t_cend(
    const std::map<uint32_t, uint32_t> * restrict map
) {
    return new std::map<uint32_t, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}, ())
    return StdMapIterator{UInt32, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt32}
end
*/
extern "C" std::map<uint32_t, uint32_t>::const_iterator * std_map_uint32_t_uint32_t_const_iterator_new(
    
) {
    return new std::map<uint32_t, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint32_t_const_iterator_delete(
    std::map<uint32_t, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, UInt32}, iter2::STL.StdMaps.StdMapIterator{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint32_t_const_iterator_equals(
    const std::map<uint32_t, uint32_t>::const_iterator * restrict iter1,
    const std::map<uint32_t, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}},), iter)
    return convert_result(Pair{UInt32, UInt32}, res)::Pair{UInt32, UInt32}
end
*/
extern "C" const std::pair<const uint32_t, uint32_t> * std_map_uint32_t_uint32_t_const_iterator_getindex(
    std::map<uint32_t, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint32_t_const_iterator_inc_(
    std::map<uint32_t, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint32_t_const_iterator_dec_(
    std::map<uint32_t, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, UInt32}, map::STL.StdMaps.StdMap{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint32_t_const_iterator_is_cbegin(
    const std::map<uint32_t, uint32_t>::const_iterator * restrict iter,
    const std::map<uint32_t, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, UInt32}, map::STL.StdMaps.StdMap{UInt32, UInt32})
    res = ccall(("std_map_uint32_t_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint32_t_const_iterator_is_cend(
    const std::map<uint32_t, uint32_t>::const_iterator * restrict iter,
    const std::map<uint32_t, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}, ())
    return StdMap{UInt32, UInt64}(res)::STL.StdMaps.StdMap{UInt32, UInt64}
end
*/
extern "C" std::map<uint32_t, uint64_t> * std_map_uint32_t_uint64_t_new(
    
) {
    return new std::map<uint32_t, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint64_t_delete(
    std::map<uint32_t, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}},), map)
    return StdMap{UInt32, UInt64}(res)::STL.StdMaps.StdMap{UInt32, UInt64}
end
*/
extern "C" std::map<uint32_t, uint64_t> * std_map_uint32_t_uint64_t_copy(
    const std::map<uint32_t, uint64_t> * restrict map
) {
    return new std::map<uint32_t, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_uint64_t_length(
    const std::map<uint32_t, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, UInt64}, key::Any)
    res = ccall(("std_map_uint32_t_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_uint64_t_haskey(
    const std::map<uint32_t, uint64_t> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, UInt64}, key::Any)
    res = ccall(("std_map_uint32_t_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_uint32_t_uint64_t_getindex(
    std::map<uint32_t, uint64_t> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}, Ptr{UInt64}, Ptr{UInt32}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint64_t_setindex_(
    std::map<uint32_t, uint64_t> * restrict map,
    uint64_t const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, UInt64}, key::Any)
    res = ccall(("std_map_uint32_t_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, UInt64}
end
*/
extern "C" void std_map_uint32_t_uint64_t_delete_(
    std::map<uint32_t, uint64_t> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, UInt64}, map2::STL.StdMaps.StdMap{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint64_t_equals(
    const std::map<uint32_t, uint64_t> * restrict map1,
    const std::map<uint32_t, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}},), map)
    return StdMapIterator{UInt32, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt64}
end
*/
extern "C" std::map<uint32_t, uint64_t>::const_iterator * std_map_uint32_t_uint64_t_cbegin(
    const std::map<uint32_t, uint64_t> * restrict map
) {
    return new std::map<uint32_t, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt64}},), map)
    return StdMapIterator{UInt32, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt64}
end
*/
extern "C" std::map<uint32_t, uint64_t>::const_iterator * std_map_uint32_t_uint64_t_cend(
    const std::map<uint32_t, uint64_t> * restrict map
) {
    return new std::map<uint32_t, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}, ())
    return StdMapIterator{UInt32, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt64}
end
*/
extern "C" std::map<uint32_t, uint64_t>::const_iterator * std_map_uint32_t_uint64_t_const_iterator_new(
    
) {
    return new std::map<uint32_t, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint64_t_const_iterator_delete(
    std::map<uint32_t, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, UInt64}, iter2::STL.StdMaps.StdMapIterator{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint64_t_const_iterator_equals(
    const std::map<uint32_t, uint64_t>::const_iterator * restrict iter1,
    const std::map<uint32_t, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}},), iter)
    return convert_result(Pair{UInt32, UInt64}, res)::Pair{UInt32, UInt64}
end
*/
extern "C" const std::pair<const uint32_t, uint64_t> * std_map_uint32_t_uint64_t_const_iterator_getindex(
    std::map<uint32_t, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint64_t_const_iterator_inc_(
    std::map<uint32_t, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint64_t_const_iterator_dec_(
    std::map<uint32_t, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, UInt64}, map::STL.StdMaps.StdMap{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint64_t_const_iterator_is_cbegin(
    const std::map<uint32_t, uint64_t>::const_iterator * restrict iter,
    const std::map<uint32_t, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, UInt64}, map::STL.StdMaps.StdMap{UInt32, UInt64})
    res = ccall(("std_map_uint32_t_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint64_t_const_iterator_is_cend(
    const std::map<uint32_t, uint64_t>::const_iterator * restrict iter,
    const std::map<uint32_t, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt32}, type::Type{UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}, ())
    return StdMap{UInt32, UInt8}(res)::STL.StdMaps.StdMap{UInt32, UInt8}
end
*/
extern "C" std::map<uint32_t, uint8_t> * std_map_uint32_t_uint8_t_new(
    
) {
    return new std::map<uint32_t, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint8_t_delete(
    std::map<uint32_t, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}},), map)
    return StdMap{UInt32, UInt8}(res)::STL.StdMaps.StdMap{UInt32, UInt8}
end
*/
extern "C" std::map<uint32_t, uint8_t> * std_map_uint32_t_uint8_t_copy(
    const std::map<uint32_t, uint8_t> * restrict map
) {
    return new std::map<uint32_t, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint32_t_uint8_t_length(
    const std::map<uint32_t, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt32, UInt8}, key::Any)
    res = ccall(("std_map_uint32_t_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint32_t_uint8_t_haskey(
    const std::map<uint32_t, uint8_t> * restrict map,
    uint32_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt32, UInt8}, key::Any)
    res = ccall(("std_map_uint32_t_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_uint32_t_uint8_t_getindex(
    std::map<uint32_t, uint8_t> * restrict map,
    uint32_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt32, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_uint32_t_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}, Ptr{UInt8}, Ptr{UInt32}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint8_t_setindex_(
    std::map<uint32_t, uint8_t> * restrict map,
    uint8_t const * elt,
    uint32_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt32, UInt8}, key::Any)
    res = ccall(("std_map_uint32_t_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}, Ptr{UInt32}), map, convert_arg(Ptr{UInt32}, convert(UInt32, key)))
    return map::STL.StdMaps.StdMap{UInt32, UInt8}
end
*/
extern "C" void std_map_uint32_t_uint8_t_delete_(
    std::map<uint32_t, uint8_t> * restrict map,
    uint32_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt32, UInt8}, map2::STL.StdMaps.StdMap{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint8_t_equals(
    const std::map<uint32_t, uint8_t> * restrict map1,
    const std::map<uint32_t, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}},), map)
    return StdMapIterator{UInt32, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt8}
end
*/
extern "C" std::map<uint32_t, uint8_t>::const_iterator * std_map_uint32_t_uint8_t_cbegin(
    const std::map<uint32_t, uint8_t> * restrict map
) {
    return new std::map<uint32_t, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt32, UInt8}},), map)
    return StdMapIterator{UInt32, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt8}
end
*/
extern "C" std::map<uint32_t, uint8_t>::const_iterator * std_map_uint32_t_uint8_t_cend(
    const std::map<uint32_t, uint8_t> * restrict map
) {
    return new std::map<uint32_t, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt32}, type::Type{UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}, ())
    return StdMapIterator{UInt32, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt32, UInt8}
end
*/
extern "C" std::map<uint32_t, uint8_t>::const_iterator * std_map_uint32_t_uint8_t_const_iterator_new(
    
) {
    return new std::map<uint32_t, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint8_t_const_iterator_delete(
    std::map<uint32_t, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt32, UInt8}, iter2::STL.StdMaps.StdMapIterator{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint8_t_const_iterator_equals(
    const std::map<uint32_t, uint8_t>::const_iterator * restrict iter1,
    const std::map<uint32_t, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt32, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}},), iter)
    return convert_result(Pair{UInt32, UInt8}, res)::Pair{UInt32, UInt8}
end
*/
extern "C" const std::pair<const uint32_t, uint8_t> * std_map_uint32_t_uint8_t_const_iterator_getindex(
    std::map<uint32_t, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint8_t_const_iterator_inc_(
    std::map<uint32_t, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint32_t_uint8_t_const_iterator_dec_(
    std::map<uint32_t, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt32, UInt8}, map::STL.StdMaps.StdMap{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint8_t_const_iterator_is_cbegin(
    const std::map<uint32_t, uint8_t>::const_iterator * restrict iter,
    const std::map<uint32_t, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt32, UInt8}, map::STL.StdMaps.StdMap{UInt32, UInt8})
    res = ccall(("std_map_uint32_t_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt32, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt32, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint32_t_uint8_t_const_iterator_is_cend(
    const std::map<uint32_t, uint8_t>::const_iterator * restrict iter,
    const std::map<uint32_t, uint8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{Bool})
    res = ccall(("std_map_uint64_t_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Bool}}, ())
    return StdMap{UInt64, Bool}(res)::STL.StdMaps.StdMap{UInt64, Bool}
end
*/
extern "C" std::map<uint64_t, bool> * std_map_uint64_t_bool_new(
    
) {
    return new std::map<uint64_t, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_bool_delete(
    std::map<uint64_t, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}},), map)
    return StdMap{UInt64, Bool}(res)::STL.StdMaps.StdMap{UInt64, Bool}
end
*/
extern "C" std::map<uint64_t, bool> * std_map_uint64_t_bool_copy(
    const std::map<uint64_t, bool> * restrict map
) {
    return new std::map<uint64_t, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_bool_length(
    const std::map<uint64_t, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, Bool}, key::Any)
    res = ccall(("std_map_uint64_t_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_bool_haskey(
    const std::map<uint64_t, bool> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, Bool}, key::Any)
    res = ccall(("std_map_uint64_t_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_uint64_t_bool_getindex(
    std::map<uint64_t, bool> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}}, Ptr{Bool}, Ptr{UInt64}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_bool_setindex_(
    std::map<uint64_t, bool> * restrict map,
    bool const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, Bool}, key::Any)
    res = ccall(("std_map_uint64_t_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, Bool}
end
*/
extern "C" void std_map_uint64_t_bool_delete_(
    std::map<uint64_t, bool> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, Bool}, map2::STL.StdMaps.StdMap{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}}, Ptr{STL.StdMaps.StdMap{UInt64, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_bool_equals(
    const std::map<uint64_t, bool> * restrict map1,
    const std::map<uint64_t, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}},), map)
    return StdMapIterator{UInt64, Bool}(res)::STL.StdMaps.StdMapIterator{UInt64, Bool}
end
*/
extern "C" std::map<uint64_t, bool>::const_iterator * std_map_uint64_t_bool_cbegin(
    const std::map<uint64_t, bool> * restrict map
) {
    return new std::map<uint64_t, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt64, Bool}},), map)
    return StdMapIterator{UInt64, Bool}(res)::STL.StdMaps.StdMapIterator{UInt64, Bool}
end
*/
extern "C" std::map<uint64_t, bool>::const_iterator * std_map_uint64_t_bool_cend(
    const std::map<uint64_t, bool> * restrict map
) {
    return new std::map<uint64_t, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{Bool})
    res = ccall(("std_map_uint64_t_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Bool}}, ())
    return StdMapIterator{UInt64, Bool}(res)::STL.StdMaps.StdMapIterator{UInt64, Bool}
end
*/
extern "C" std::map<uint64_t, bool>::const_iterator * std_map_uint64_t_bool_const_iterator_new(
    
) {
    return new std::map<uint64_t, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_bool_const_iterator_delete(
    std::map<uint64_t, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, Bool}, iter2::STL.StdMaps.StdMapIterator{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_bool_const_iterator_equals(
    const std::map<uint64_t, bool>::const_iterator * restrict iter1,
    const std::map<uint64_t, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}},), iter)
    return convert_result(Pair{UInt64, Bool}, res)::Pair{UInt64, Bool}
end
*/
extern "C" const std::pair<const uint64_t, bool> * std_map_uint64_t_bool_const_iterator_getindex(
    std::map<uint64_t, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_bool_const_iterator_inc_(
    std::map<uint64_t, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_bool_const_iterator_dec_(
    std::map<uint64_t, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, Bool}, map::STL.StdMaps.StdMap{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}}, Ptr{STL.StdMaps.StdMap{UInt64, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_bool_const_iterator_is_cbegin(
    const std::map<uint64_t, bool>::const_iterator * restrict iter,
    const std::map<uint64_t, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, Bool}, map::STL.StdMaps.StdMap{UInt64, Bool})
    res = ccall(("std_map_uint64_t_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Bool}}, Ptr{STL.StdMaps.StdMap{UInt64, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_bool_const_iterator_is_cend(
    const std::map<uint64_t, bool>::const_iterator * restrict iter,
    const std::map<uint64_t, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{Float32})
    res = ccall(("std_map_uint64_t_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Float32}}, ())
    return StdMap{UInt64, Float32}(res)::STL.StdMaps.StdMap{UInt64, Float32}
end
*/
extern "C" std::map<uint64_t, float> * std_map_uint64_t_float_new(
    
) {
    return new std::map<uint64_t, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_float_delete(
    std::map<uint64_t, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}},), map)
    return StdMap{UInt64, Float32}(res)::STL.StdMaps.StdMap{UInt64, Float32}
end
*/
extern "C" std::map<uint64_t, float> * std_map_uint64_t_float_copy(
    const std::map<uint64_t, float> * restrict map
) {
    return new std::map<uint64_t, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_float_length(
    const std::map<uint64_t, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, Float32}, key::Any)
    res = ccall(("std_map_uint64_t_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_float_haskey(
    const std::map<uint64_t, float> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, Float32}, key::Any)
    res = ccall(("std_map_uint64_t_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_uint64_t_float_getindex(
    std::map<uint64_t, float> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}}, Ptr{Float32}, Ptr{UInt64}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_float_setindex_(
    std::map<uint64_t, float> * restrict map,
    float const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, Float32}, key::Any)
    res = ccall(("std_map_uint64_t_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, Float32}
end
*/
extern "C" void std_map_uint64_t_float_delete_(
    std::map<uint64_t, float> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, Float32}, map2::STL.StdMaps.StdMap{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}}, Ptr{STL.StdMaps.StdMap{UInt64, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_float_equals(
    const std::map<uint64_t, float> * restrict map1,
    const std::map<uint64_t, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}},), map)
    return StdMapIterator{UInt64, Float32}(res)::STL.StdMaps.StdMapIterator{UInt64, Float32}
end
*/
extern "C" std::map<uint64_t, float>::const_iterator * std_map_uint64_t_float_cbegin(
    const std::map<uint64_t, float> * restrict map
) {
    return new std::map<uint64_t, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt64, Float32}},), map)
    return StdMapIterator{UInt64, Float32}(res)::STL.StdMaps.StdMapIterator{UInt64, Float32}
end
*/
extern "C" std::map<uint64_t, float>::const_iterator * std_map_uint64_t_float_cend(
    const std::map<uint64_t, float> * restrict map
) {
    return new std::map<uint64_t, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{Float32})
    res = ccall(("std_map_uint64_t_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Float32}}, ())
    return StdMapIterator{UInt64, Float32}(res)::STL.StdMaps.StdMapIterator{UInt64, Float32}
end
*/
extern "C" std::map<uint64_t, float>::const_iterator * std_map_uint64_t_float_const_iterator_new(
    
) {
    return new std::map<uint64_t, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_float_const_iterator_delete(
    std::map<uint64_t, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, Float32}, iter2::STL.StdMaps.StdMapIterator{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_float_const_iterator_equals(
    const std::map<uint64_t, float>::const_iterator * restrict iter1,
    const std::map<uint64_t, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}},), iter)
    return convert_result(Pair{UInt64, Float32}, res)::Pair{UInt64, Float32}
end
*/
extern "C" const std::pair<const uint64_t, float> * std_map_uint64_t_float_const_iterator_getindex(
    std::map<uint64_t, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_float_const_iterator_inc_(
    std::map<uint64_t, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_float_const_iterator_dec_(
    std::map<uint64_t, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, Float32}, map::STL.StdMaps.StdMap{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}}, Ptr{STL.StdMaps.StdMap{UInt64, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_float_const_iterator_is_cbegin(
    const std::map<uint64_t, float>::const_iterator * restrict iter,
    const std::map<uint64_t, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, Float32}, map::STL.StdMaps.StdMap{UInt64, Float32})
    res = ccall(("std_map_uint64_t_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float32}}, Ptr{STL.StdMaps.StdMap{UInt64, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_float_const_iterator_is_cend(
    const std::map<uint64_t, float>::const_iterator * restrict iter,
    const std::map<uint64_t, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{Float64})
    res = ccall(("std_map_uint64_t_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Float64}}, ())
    return StdMap{UInt64, Float64}(res)::STL.StdMaps.StdMap{UInt64, Float64}
end
*/
extern "C" std::map<uint64_t, double> * std_map_uint64_t_double_new(
    
) {
    return new std::map<uint64_t, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_double_delete(
    std::map<uint64_t, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}},), map)
    return StdMap{UInt64, Float64}(res)::STL.StdMaps.StdMap{UInt64, Float64}
end
*/
extern "C" std::map<uint64_t, double> * std_map_uint64_t_double_copy(
    const std::map<uint64_t, double> * restrict map
) {
    return new std::map<uint64_t, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_double_length(
    const std::map<uint64_t, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, Float64}, key::Any)
    res = ccall(("std_map_uint64_t_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_double_haskey(
    const std::map<uint64_t, double> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, Float64}, key::Any)
    res = ccall(("std_map_uint64_t_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_uint64_t_double_getindex(
    std::map<uint64_t, double> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}}, Ptr{Float64}, Ptr{UInt64}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_double_setindex_(
    std::map<uint64_t, double> * restrict map,
    double const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, Float64}, key::Any)
    res = ccall(("std_map_uint64_t_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, Float64}
end
*/
extern "C" void std_map_uint64_t_double_delete_(
    std::map<uint64_t, double> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, Float64}, map2::STL.StdMaps.StdMap{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}}, Ptr{STL.StdMaps.StdMap{UInt64, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_double_equals(
    const std::map<uint64_t, double> * restrict map1,
    const std::map<uint64_t, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}},), map)
    return StdMapIterator{UInt64, Float64}(res)::STL.StdMaps.StdMapIterator{UInt64, Float64}
end
*/
extern "C" std::map<uint64_t, double>::const_iterator * std_map_uint64_t_double_cbegin(
    const std::map<uint64_t, double> * restrict map
) {
    return new std::map<uint64_t, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt64, Float64}},), map)
    return StdMapIterator{UInt64, Float64}(res)::STL.StdMaps.StdMapIterator{UInt64, Float64}
end
*/
extern "C" std::map<uint64_t, double>::const_iterator * std_map_uint64_t_double_cend(
    const std::map<uint64_t, double> * restrict map
) {
    return new std::map<uint64_t, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{Float64})
    res = ccall(("std_map_uint64_t_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Float64}}, ())
    return StdMapIterator{UInt64, Float64}(res)::STL.StdMaps.StdMapIterator{UInt64, Float64}
end
*/
extern "C" std::map<uint64_t, double>::const_iterator * std_map_uint64_t_double_const_iterator_new(
    
) {
    return new std::map<uint64_t, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_double_const_iterator_delete(
    std::map<uint64_t, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, Float64}, iter2::STL.StdMaps.StdMapIterator{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_double_const_iterator_equals(
    const std::map<uint64_t, double>::const_iterator * restrict iter1,
    const std::map<uint64_t, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}},), iter)
    return convert_result(Pair{UInt64, Float64}, res)::Pair{UInt64, Float64}
end
*/
extern "C" const std::pair<const uint64_t, double> * std_map_uint64_t_double_const_iterator_getindex(
    std::map<uint64_t, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_double_const_iterator_inc_(
    std::map<uint64_t, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_double_const_iterator_dec_(
    std::map<uint64_t, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, Float64}, map::STL.StdMaps.StdMap{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}}, Ptr{STL.StdMaps.StdMap{UInt64, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_double_const_iterator_is_cbegin(
    const std::map<uint64_t, double>::const_iterator * restrict iter,
    const std::map<uint64_t, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, Float64}, map::STL.StdMaps.StdMap{UInt64, Float64})
    res = ccall(("std_map_uint64_t_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Float64}}, Ptr{STL.StdMaps.StdMap{UInt64, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_double_const_iterator_is_cend(
    const std::map<uint64_t, double>::const_iterator * restrict iter,
    const std::map<uint64_t, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{Int16})
    res = ccall(("std_map_uint64_t_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int16}}, ())
    return StdMap{UInt64, Int16}(res)::STL.StdMaps.StdMap{UInt64, Int16}
end
*/
extern "C" std::map<uint64_t, int16_t> * std_map_uint64_t_int16_t_new(
    
) {
    return new std::map<uint64_t, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int16_t_delete(
    std::map<uint64_t, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}},), map)
    return StdMap{UInt64, Int16}(res)::STL.StdMaps.StdMap{UInt64, Int16}
end
*/
extern "C" std::map<uint64_t, int16_t> * std_map_uint64_t_int16_t_copy(
    const std::map<uint64_t, int16_t> * restrict map
) {
    return new std::map<uint64_t, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_int16_t_length(
    const std::map<uint64_t, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, Int16}, key::Any)
    res = ccall(("std_map_uint64_t_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_int16_t_haskey(
    const std::map<uint64_t, int16_t> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, Int16}, key::Any)
    res = ccall(("std_map_uint64_t_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_uint64_t_int16_t_getindex(
    std::map<uint64_t, int16_t> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}}, Ptr{Int16}, Ptr{UInt64}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int16_t_setindex_(
    std::map<uint64_t, int16_t> * restrict map,
    int16_t const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, Int16}, key::Any)
    res = ccall(("std_map_uint64_t_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, Int16}
end
*/
extern "C" void std_map_uint64_t_int16_t_delete_(
    std::map<uint64_t, int16_t> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, Int16}, map2::STL.StdMaps.StdMap{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}}, Ptr{STL.StdMaps.StdMap{UInt64, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int16_t_equals(
    const std::map<uint64_t, int16_t> * restrict map1,
    const std::map<uint64_t, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}},), map)
    return StdMapIterator{UInt64, Int16}(res)::STL.StdMaps.StdMapIterator{UInt64, Int16}
end
*/
extern "C" std::map<uint64_t, int16_t>::const_iterator * std_map_uint64_t_int16_t_cbegin(
    const std::map<uint64_t, int16_t> * restrict map
) {
    return new std::map<uint64_t, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int16}},), map)
    return StdMapIterator{UInt64, Int16}(res)::STL.StdMaps.StdMapIterator{UInt64, Int16}
end
*/
extern "C" std::map<uint64_t, int16_t>::const_iterator * std_map_uint64_t_int16_t_cend(
    const std::map<uint64_t, int16_t> * restrict map
) {
    return new std::map<uint64_t, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{Int16})
    res = ccall(("std_map_uint64_t_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int16}}, ())
    return StdMapIterator{UInt64, Int16}(res)::STL.StdMaps.StdMapIterator{UInt64, Int16}
end
*/
extern "C" std::map<uint64_t, int16_t>::const_iterator * std_map_uint64_t_int16_t_const_iterator_new(
    
) {
    return new std::map<uint64_t, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int16_t_const_iterator_delete(
    std::map<uint64_t, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, Int16}, iter2::STL.StdMaps.StdMapIterator{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int16_t_const_iterator_equals(
    const std::map<uint64_t, int16_t>::const_iterator * restrict iter1,
    const std::map<uint64_t, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}},), iter)
    return convert_result(Pair{UInt64, Int16}, res)::Pair{UInt64, Int16}
end
*/
extern "C" const std::pair<const uint64_t, int16_t> * std_map_uint64_t_int16_t_const_iterator_getindex(
    std::map<uint64_t, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int16_t_const_iterator_inc_(
    std::map<uint64_t, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int16_t_const_iterator_dec_(
    std::map<uint64_t, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, Int16}, map::STL.StdMaps.StdMap{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}}, Ptr{STL.StdMaps.StdMap{UInt64, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int16_t_const_iterator_is_cbegin(
    const std::map<uint64_t, int16_t>::const_iterator * restrict iter,
    const std::map<uint64_t, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, Int16}, map::STL.StdMaps.StdMap{UInt64, Int16})
    res = ccall(("std_map_uint64_t_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int16}}, Ptr{STL.StdMaps.StdMap{UInt64, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int16_t_const_iterator_is_cend(
    const std::map<uint64_t, int16_t>::const_iterator * restrict iter,
    const std::map<uint64_t, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{Int32})
    res = ccall(("std_map_uint64_t_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int32}}, ())
    return StdMap{UInt64, Int32}(res)::STL.StdMaps.StdMap{UInt64, Int32}
end
*/
extern "C" std::map<uint64_t, int32_t> * std_map_uint64_t_int32_t_new(
    
) {
    return new std::map<uint64_t, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int32_t_delete(
    std::map<uint64_t, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}},), map)
    return StdMap{UInt64, Int32}(res)::STL.StdMaps.StdMap{UInt64, Int32}
end
*/
extern "C" std::map<uint64_t, int32_t> * std_map_uint64_t_int32_t_copy(
    const std::map<uint64_t, int32_t> * restrict map
) {
    return new std::map<uint64_t, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_int32_t_length(
    const std::map<uint64_t, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, Int32}, key::Any)
    res = ccall(("std_map_uint64_t_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_int32_t_haskey(
    const std::map<uint64_t, int32_t> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, Int32}, key::Any)
    res = ccall(("std_map_uint64_t_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_uint64_t_int32_t_getindex(
    std::map<uint64_t, int32_t> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}}, Ptr{Int32}, Ptr{UInt64}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int32_t_setindex_(
    std::map<uint64_t, int32_t> * restrict map,
    int32_t const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, Int32}, key::Any)
    res = ccall(("std_map_uint64_t_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, Int32}
end
*/
extern "C" void std_map_uint64_t_int32_t_delete_(
    std::map<uint64_t, int32_t> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, Int32}, map2::STL.StdMaps.StdMap{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}}, Ptr{STL.StdMaps.StdMap{UInt64, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int32_t_equals(
    const std::map<uint64_t, int32_t> * restrict map1,
    const std::map<uint64_t, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}},), map)
    return StdMapIterator{UInt64, Int32}(res)::STL.StdMaps.StdMapIterator{UInt64, Int32}
end
*/
extern "C" std::map<uint64_t, int32_t>::const_iterator * std_map_uint64_t_int32_t_cbegin(
    const std::map<uint64_t, int32_t> * restrict map
) {
    return new std::map<uint64_t, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int32}},), map)
    return StdMapIterator{UInt64, Int32}(res)::STL.StdMaps.StdMapIterator{UInt64, Int32}
end
*/
extern "C" std::map<uint64_t, int32_t>::const_iterator * std_map_uint64_t_int32_t_cend(
    const std::map<uint64_t, int32_t> * restrict map
) {
    return new std::map<uint64_t, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{Int32})
    res = ccall(("std_map_uint64_t_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int32}}, ())
    return StdMapIterator{UInt64, Int32}(res)::STL.StdMaps.StdMapIterator{UInt64, Int32}
end
*/
extern "C" std::map<uint64_t, int32_t>::const_iterator * std_map_uint64_t_int32_t_const_iterator_new(
    
) {
    return new std::map<uint64_t, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int32_t_const_iterator_delete(
    std::map<uint64_t, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, Int32}, iter2::STL.StdMaps.StdMapIterator{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int32_t_const_iterator_equals(
    const std::map<uint64_t, int32_t>::const_iterator * restrict iter1,
    const std::map<uint64_t, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}},), iter)
    return convert_result(Pair{UInt64, Int32}, res)::Pair{UInt64, Int32}
end
*/
extern "C" const std::pair<const uint64_t, int32_t> * std_map_uint64_t_int32_t_const_iterator_getindex(
    std::map<uint64_t, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int32_t_const_iterator_inc_(
    std::map<uint64_t, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int32_t_const_iterator_dec_(
    std::map<uint64_t, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, Int32}, map::STL.StdMaps.StdMap{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}}, Ptr{STL.StdMaps.StdMap{UInt64, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int32_t_const_iterator_is_cbegin(
    const std::map<uint64_t, int32_t>::const_iterator * restrict iter,
    const std::map<uint64_t, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, Int32}, map::STL.StdMaps.StdMap{UInt64, Int32})
    res = ccall(("std_map_uint64_t_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int32}}, Ptr{STL.StdMaps.StdMap{UInt64, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int32_t_const_iterator_is_cend(
    const std::map<uint64_t, int32_t>::const_iterator * restrict iter,
    const std::map<uint64_t, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{Int64})
    res = ccall(("std_map_uint64_t_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int64}}, ())
    return StdMap{UInt64, Int64}(res)::STL.StdMaps.StdMap{UInt64, Int64}
end
*/
extern "C" std::map<uint64_t, int64_t> * std_map_uint64_t_int64_t_new(
    
) {
    return new std::map<uint64_t, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int64_t_delete(
    std::map<uint64_t, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}},), map)
    return StdMap{UInt64, Int64}(res)::STL.StdMaps.StdMap{UInt64, Int64}
end
*/
extern "C" std::map<uint64_t, int64_t> * std_map_uint64_t_int64_t_copy(
    const std::map<uint64_t, int64_t> * restrict map
) {
    return new std::map<uint64_t, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_int64_t_length(
    const std::map<uint64_t, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, Int64}, key::Any)
    res = ccall(("std_map_uint64_t_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_int64_t_haskey(
    const std::map<uint64_t, int64_t> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, Int64}, key::Any)
    res = ccall(("std_map_uint64_t_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_uint64_t_int64_t_getindex(
    std::map<uint64_t, int64_t> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}}, Ptr{Int64}, Ptr{UInt64}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int64_t_setindex_(
    std::map<uint64_t, int64_t> * restrict map,
    int64_t const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, Int64}, key::Any)
    res = ccall(("std_map_uint64_t_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, Int64}
end
*/
extern "C" void std_map_uint64_t_int64_t_delete_(
    std::map<uint64_t, int64_t> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, Int64}, map2::STL.StdMaps.StdMap{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}}, Ptr{STL.StdMaps.StdMap{UInt64, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int64_t_equals(
    const std::map<uint64_t, int64_t> * restrict map1,
    const std::map<uint64_t, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}},), map)
    return StdMapIterator{UInt64, Int64}(res)::STL.StdMaps.StdMapIterator{UInt64, Int64}
end
*/
extern "C" std::map<uint64_t, int64_t>::const_iterator * std_map_uint64_t_int64_t_cbegin(
    const std::map<uint64_t, int64_t> * restrict map
) {
    return new std::map<uint64_t, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int64}},), map)
    return StdMapIterator{UInt64, Int64}(res)::STL.StdMaps.StdMapIterator{UInt64, Int64}
end
*/
extern "C" std::map<uint64_t, int64_t>::const_iterator * std_map_uint64_t_int64_t_cend(
    const std::map<uint64_t, int64_t> * restrict map
) {
    return new std::map<uint64_t, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{Int64})
    res = ccall(("std_map_uint64_t_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int64}}, ())
    return StdMapIterator{UInt64, Int64}(res)::STL.StdMaps.StdMapIterator{UInt64, Int64}
end
*/
extern "C" std::map<uint64_t, int64_t>::const_iterator * std_map_uint64_t_int64_t_const_iterator_new(
    
) {
    return new std::map<uint64_t, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int64_t_const_iterator_delete(
    std::map<uint64_t, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, Int64}, iter2::STL.StdMaps.StdMapIterator{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int64_t_const_iterator_equals(
    const std::map<uint64_t, int64_t>::const_iterator * restrict iter1,
    const std::map<uint64_t, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}},), iter)
    return convert_result(Pair{UInt64, Int64}, res)::Pair{UInt64, Int64}
end
*/
extern "C" const std::pair<const uint64_t, int64_t> * std_map_uint64_t_int64_t_const_iterator_getindex(
    std::map<uint64_t, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int64_t_const_iterator_inc_(
    std::map<uint64_t, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int64_t_const_iterator_dec_(
    std::map<uint64_t, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, Int64}, map::STL.StdMaps.StdMap{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}}, Ptr{STL.StdMaps.StdMap{UInt64, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int64_t_const_iterator_is_cbegin(
    const std::map<uint64_t, int64_t>::const_iterator * restrict iter,
    const std::map<uint64_t, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, Int64}, map::STL.StdMaps.StdMap{UInt64, Int64})
    res = ccall(("std_map_uint64_t_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int64}}, Ptr{STL.StdMaps.StdMap{UInt64, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int64_t_const_iterator_is_cend(
    const std::map<uint64_t, int64_t>::const_iterator * restrict iter,
    const std::map<uint64_t, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{Int8})
    res = ccall(("std_map_uint64_t_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int8}}, ())
    return StdMap{UInt64, Int8}(res)::STL.StdMaps.StdMap{UInt64, Int8}
end
*/
extern "C" std::map<uint64_t, int8_t> * std_map_uint64_t_int8_t_new(
    
) {
    return new std::map<uint64_t, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int8_t_delete(
    std::map<uint64_t, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}},), map)
    return StdMap{UInt64, Int8}(res)::STL.StdMaps.StdMap{UInt64, Int8}
end
*/
extern "C" std::map<uint64_t, int8_t> * std_map_uint64_t_int8_t_copy(
    const std::map<uint64_t, int8_t> * restrict map
) {
    return new std::map<uint64_t, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_int8_t_length(
    const std::map<uint64_t, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, Int8}, key::Any)
    res = ccall(("std_map_uint64_t_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_int8_t_haskey(
    const std::map<uint64_t, int8_t> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, Int8}, key::Any)
    res = ccall(("std_map_uint64_t_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_uint64_t_int8_t_getindex(
    std::map<uint64_t, int8_t> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}}, Ptr{Int8}, Ptr{UInt64}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int8_t_setindex_(
    std::map<uint64_t, int8_t> * restrict map,
    int8_t const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, Int8}, key::Any)
    res = ccall(("std_map_uint64_t_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, Int8}
end
*/
extern "C" void std_map_uint64_t_int8_t_delete_(
    std::map<uint64_t, int8_t> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, Int8}, map2::STL.StdMaps.StdMap{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}}, Ptr{STL.StdMaps.StdMap{UInt64, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int8_t_equals(
    const std::map<uint64_t, int8_t> * restrict map1,
    const std::map<uint64_t, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}},), map)
    return StdMapIterator{UInt64, Int8}(res)::STL.StdMaps.StdMapIterator{UInt64, Int8}
end
*/
extern "C" std::map<uint64_t, int8_t>::const_iterator * std_map_uint64_t_int8_t_cbegin(
    const std::map<uint64_t, int8_t> * restrict map
) {
    return new std::map<uint64_t, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt64, Int8}},), map)
    return StdMapIterator{UInt64, Int8}(res)::STL.StdMaps.StdMapIterator{UInt64, Int8}
end
*/
extern "C" std::map<uint64_t, int8_t>::const_iterator * std_map_uint64_t_int8_t_cend(
    const std::map<uint64_t, int8_t> * restrict map
) {
    return new std::map<uint64_t, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{Int8})
    res = ccall(("std_map_uint64_t_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Int8}}, ())
    return StdMapIterator{UInt64, Int8}(res)::STL.StdMaps.StdMapIterator{UInt64, Int8}
end
*/
extern "C" std::map<uint64_t, int8_t>::const_iterator * std_map_uint64_t_int8_t_const_iterator_new(
    
) {
    return new std::map<uint64_t, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int8_t_const_iterator_delete(
    std::map<uint64_t, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, Int8}, iter2::STL.StdMaps.StdMapIterator{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int8_t_const_iterator_equals(
    const std::map<uint64_t, int8_t>::const_iterator * restrict iter1,
    const std::map<uint64_t, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}},), iter)
    return convert_result(Pair{UInt64, Int8}, res)::Pair{UInt64, Int8}
end
*/
extern "C" const std::pair<const uint64_t, int8_t> * std_map_uint64_t_int8_t_const_iterator_getindex(
    std::map<uint64_t, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int8_t_const_iterator_inc_(
    std::map<uint64_t, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_int8_t_const_iterator_dec_(
    std::map<uint64_t, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, Int8}, map::STL.StdMaps.StdMap{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}}, Ptr{STL.StdMaps.StdMap{UInt64, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int8_t_const_iterator_is_cbegin(
    const std::map<uint64_t, int8_t>::const_iterator * restrict iter,
    const std::map<uint64_t, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, Int8}, map::STL.StdMaps.StdMap{UInt64, Int8})
    res = ccall(("std_map_uint64_t_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Int8}}, Ptr{STL.StdMaps.StdMap{UInt64, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_int8_t_const_iterator_is_cend(
    const std::map<uint64_t, int8_t>::const_iterator * restrict iter,
    const std::map<uint64_t, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}, ())
    return StdMap{UInt64, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}
end
*/
extern "C" std::map<uint64_t, void *> * std_map_uint64_t_void___new(
    
) {
    return new std::map<uint64_t, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_void___delete(
    std::map<uint64_t, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}},), map)
    return StdMap{UInt64, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}
end
*/
extern "C" std::map<uint64_t, void *> * std_map_uint64_t_void___copy(
    const std::map<uint64_t, void *> * restrict map
) {
    return new std::map<uint64_t, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_void___length(
    const std::map<uint64_t, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint64_t_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_void___haskey(
    const std::map<uint64_t, void *> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint64_t_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_uint64_t_void___getindex(
    std::map<uint64_t, void *> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{UInt64}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_void___setindex_(
    std::map<uint64_t, void *> * restrict map,
    void * const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint64_t_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}
end
*/
extern "C" void std_map_uint64_t_void___delete_(
    std::map<uint64_t, void *> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_void___equals(
    const std::map<uint64_t, void *> * restrict map1,
    const std::map<uint64_t, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}},), map)
    return StdMapIterator{UInt64, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}
end
*/
extern "C" std::map<uint64_t, void *>::const_iterator * std_map_uint64_t_void___cbegin(
    const std::map<uint64_t, void *> * restrict map
) {
    return new std::map<uint64_t, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}},), map)
    return StdMapIterator{UInt64, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}
end
*/
extern "C" std::map<uint64_t, void *>::const_iterator * std_map_uint64_t_void___cend(
    const std::map<uint64_t, void *> * restrict map
) {
    return new std::map<uint64_t, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}, ())
    return StdMapIterator{UInt64, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}
end
*/
extern "C" std::map<uint64_t, void *>::const_iterator * std_map_uint64_t_void___const_iterator_new(
    
) {
    return new std::map<uint64_t, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_void___const_iterator_delete(
    std::map<uint64_t, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_void___const_iterator_equals(
    const std::map<uint64_t, void *>::const_iterator * restrict iter1,
    const std::map<uint64_t, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}},), iter)
    return convert_result(Pair{UInt64, Ptr{Nothing}}, res)::Pair{UInt64, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const uint64_t, void *> * std_map_uint64_t_void___const_iterator_getindex(
    std::map<uint64_t, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_void___const_iterator_inc_(
    std::map<uint64_t, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_void___const_iterator_dec_(
    std::map<uint64_t, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}, map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_void___const_iterator_is_cbegin(
    const std::map<uint64_t, void *>::const_iterator * restrict iter,
    const std::map<uint64_t, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}, map::STL.StdMaps.StdMap{UInt64, Ptr{Nothing}})
    res = ccall(("std_map_uint64_t_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt64, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_void___const_iterator_is_cend(
    const std::map<uint64_t, void *>::const_iterator * restrict iter,
    const std::map<uint64_t, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}, ())
    return StdMap{UInt64, UInt16}(res)::STL.StdMaps.StdMap{UInt64, UInt16}
end
*/
extern "C" std::map<uint64_t, uint16_t> * std_map_uint64_t_uint16_t_new(
    
) {
    return new std::map<uint64_t, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint16_t_delete(
    std::map<uint64_t, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}},), map)
    return StdMap{UInt64, UInt16}(res)::STL.StdMaps.StdMap{UInt64, UInt16}
end
*/
extern "C" std::map<uint64_t, uint16_t> * std_map_uint64_t_uint16_t_copy(
    const std::map<uint64_t, uint16_t> * restrict map
) {
    return new std::map<uint64_t, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_uint16_t_length(
    const std::map<uint64_t, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, UInt16}, key::Any)
    res = ccall(("std_map_uint64_t_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_uint16_t_haskey(
    const std::map<uint64_t, uint16_t> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, UInt16}, key::Any)
    res = ccall(("std_map_uint64_t_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_uint64_t_uint16_t_getindex(
    std::map<uint64_t, uint16_t> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}, Ptr{UInt16}, Ptr{UInt64}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint16_t_setindex_(
    std::map<uint64_t, uint16_t> * restrict map,
    uint16_t const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, UInt16}, key::Any)
    res = ccall(("std_map_uint64_t_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, UInt16}
end
*/
extern "C" void std_map_uint64_t_uint16_t_delete_(
    std::map<uint64_t, uint16_t> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, UInt16}, map2::STL.StdMaps.StdMap{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint16_t_equals(
    const std::map<uint64_t, uint16_t> * restrict map1,
    const std::map<uint64_t, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}},), map)
    return StdMapIterator{UInt64, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt16}
end
*/
extern "C" std::map<uint64_t, uint16_t>::const_iterator * std_map_uint64_t_uint16_t_cbegin(
    const std::map<uint64_t, uint16_t> * restrict map
) {
    return new std::map<uint64_t, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt16}},), map)
    return StdMapIterator{UInt64, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt16}
end
*/
extern "C" std::map<uint64_t, uint16_t>::const_iterator * std_map_uint64_t_uint16_t_cend(
    const std::map<uint64_t, uint16_t> * restrict map
) {
    return new std::map<uint64_t, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}, ())
    return StdMapIterator{UInt64, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt16}
end
*/
extern "C" std::map<uint64_t, uint16_t>::const_iterator * std_map_uint64_t_uint16_t_const_iterator_new(
    
) {
    return new std::map<uint64_t, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint16_t_const_iterator_delete(
    std::map<uint64_t, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, UInt16}, iter2::STL.StdMaps.StdMapIterator{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint16_t_const_iterator_equals(
    const std::map<uint64_t, uint16_t>::const_iterator * restrict iter1,
    const std::map<uint64_t, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}},), iter)
    return convert_result(Pair{UInt64, UInt16}, res)::Pair{UInt64, UInt16}
end
*/
extern "C" const std::pair<const uint64_t, uint16_t> * std_map_uint64_t_uint16_t_const_iterator_getindex(
    std::map<uint64_t, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint16_t_const_iterator_inc_(
    std::map<uint64_t, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint16_t_const_iterator_dec_(
    std::map<uint64_t, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, UInt16}, map::STL.StdMaps.StdMap{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint16_t_const_iterator_is_cbegin(
    const std::map<uint64_t, uint16_t>::const_iterator * restrict iter,
    const std::map<uint64_t, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, UInt16}, map::STL.StdMaps.StdMap{UInt64, UInt16})
    res = ccall(("std_map_uint64_t_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint16_t_const_iterator_is_cend(
    const std::map<uint64_t, uint16_t>::const_iterator * restrict iter,
    const std::map<uint64_t, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}, ())
    return StdMap{UInt64, UInt32}(res)::STL.StdMaps.StdMap{UInt64, UInt32}
end
*/
extern "C" std::map<uint64_t, uint32_t> * std_map_uint64_t_uint32_t_new(
    
) {
    return new std::map<uint64_t, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint32_t_delete(
    std::map<uint64_t, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}},), map)
    return StdMap{UInt64, UInt32}(res)::STL.StdMaps.StdMap{UInt64, UInt32}
end
*/
extern "C" std::map<uint64_t, uint32_t> * std_map_uint64_t_uint32_t_copy(
    const std::map<uint64_t, uint32_t> * restrict map
) {
    return new std::map<uint64_t, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_uint32_t_length(
    const std::map<uint64_t, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, UInt32}, key::Any)
    res = ccall(("std_map_uint64_t_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_uint32_t_haskey(
    const std::map<uint64_t, uint32_t> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, UInt32}, key::Any)
    res = ccall(("std_map_uint64_t_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_uint64_t_uint32_t_getindex(
    std::map<uint64_t, uint32_t> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}, Ptr{UInt32}, Ptr{UInt64}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint32_t_setindex_(
    std::map<uint64_t, uint32_t> * restrict map,
    uint32_t const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, UInt32}, key::Any)
    res = ccall(("std_map_uint64_t_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, UInt32}
end
*/
extern "C" void std_map_uint64_t_uint32_t_delete_(
    std::map<uint64_t, uint32_t> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, UInt32}, map2::STL.StdMaps.StdMap{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint32_t_equals(
    const std::map<uint64_t, uint32_t> * restrict map1,
    const std::map<uint64_t, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}},), map)
    return StdMapIterator{UInt64, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt32}
end
*/
extern "C" std::map<uint64_t, uint32_t>::const_iterator * std_map_uint64_t_uint32_t_cbegin(
    const std::map<uint64_t, uint32_t> * restrict map
) {
    return new std::map<uint64_t, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt32}},), map)
    return StdMapIterator{UInt64, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt32}
end
*/
extern "C" std::map<uint64_t, uint32_t>::const_iterator * std_map_uint64_t_uint32_t_cend(
    const std::map<uint64_t, uint32_t> * restrict map
) {
    return new std::map<uint64_t, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}, ())
    return StdMapIterator{UInt64, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt32}
end
*/
extern "C" std::map<uint64_t, uint32_t>::const_iterator * std_map_uint64_t_uint32_t_const_iterator_new(
    
) {
    return new std::map<uint64_t, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint32_t_const_iterator_delete(
    std::map<uint64_t, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, UInt32}, iter2::STL.StdMaps.StdMapIterator{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint32_t_const_iterator_equals(
    const std::map<uint64_t, uint32_t>::const_iterator * restrict iter1,
    const std::map<uint64_t, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}},), iter)
    return convert_result(Pair{UInt64, UInt32}, res)::Pair{UInt64, UInt32}
end
*/
extern "C" const std::pair<const uint64_t, uint32_t> * std_map_uint64_t_uint32_t_const_iterator_getindex(
    std::map<uint64_t, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint32_t_const_iterator_inc_(
    std::map<uint64_t, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint32_t_const_iterator_dec_(
    std::map<uint64_t, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, UInt32}, map::STL.StdMaps.StdMap{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint32_t_const_iterator_is_cbegin(
    const std::map<uint64_t, uint32_t>::const_iterator * restrict iter,
    const std::map<uint64_t, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, UInt32}, map::STL.StdMaps.StdMap{UInt64, UInt32})
    res = ccall(("std_map_uint64_t_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint32_t_const_iterator_is_cend(
    const std::map<uint64_t, uint32_t>::const_iterator * restrict iter,
    const std::map<uint64_t, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}, ())
    return StdMap{UInt64, UInt64}(res)::STL.StdMaps.StdMap{UInt64, UInt64}
end
*/
extern "C" std::map<uint64_t, uint64_t> * std_map_uint64_t_uint64_t_new(
    
) {
    return new std::map<uint64_t, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint64_t_delete(
    std::map<uint64_t, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}},), map)
    return StdMap{UInt64, UInt64}(res)::STL.StdMaps.StdMap{UInt64, UInt64}
end
*/
extern "C" std::map<uint64_t, uint64_t> * std_map_uint64_t_uint64_t_copy(
    const std::map<uint64_t, uint64_t> * restrict map
) {
    return new std::map<uint64_t, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_uint64_t_length(
    const std::map<uint64_t, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, UInt64}, key::Any)
    res = ccall(("std_map_uint64_t_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_uint64_t_haskey(
    const std::map<uint64_t, uint64_t> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, UInt64}, key::Any)
    res = ccall(("std_map_uint64_t_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_uint64_t_uint64_t_getindex(
    std::map<uint64_t, uint64_t> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}, Ptr{UInt64}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint64_t_setindex_(
    std::map<uint64_t, uint64_t> * restrict map,
    uint64_t const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, UInt64}, key::Any)
    res = ccall(("std_map_uint64_t_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, UInt64}
end
*/
extern "C" void std_map_uint64_t_uint64_t_delete_(
    std::map<uint64_t, uint64_t> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, UInt64}, map2::STL.StdMaps.StdMap{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint64_t_equals(
    const std::map<uint64_t, uint64_t> * restrict map1,
    const std::map<uint64_t, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}},), map)
    return StdMapIterator{UInt64, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt64}
end
*/
extern "C" std::map<uint64_t, uint64_t>::const_iterator * std_map_uint64_t_uint64_t_cbegin(
    const std::map<uint64_t, uint64_t> * restrict map
) {
    return new std::map<uint64_t, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt64}},), map)
    return StdMapIterator{UInt64, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt64}
end
*/
extern "C" std::map<uint64_t, uint64_t>::const_iterator * std_map_uint64_t_uint64_t_cend(
    const std::map<uint64_t, uint64_t> * restrict map
) {
    return new std::map<uint64_t, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}, ())
    return StdMapIterator{UInt64, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt64}
end
*/
extern "C" std::map<uint64_t, uint64_t>::const_iterator * std_map_uint64_t_uint64_t_const_iterator_new(
    
) {
    return new std::map<uint64_t, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint64_t_const_iterator_delete(
    std::map<uint64_t, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, UInt64}, iter2::STL.StdMaps.StdMapIterator{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint64_t_const_iterator_equals(
    const std::map<uint64_t, uint64_t>::const_iterator * restrict iter1,
    const std::map<uint64_t, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}},), iter)
    return convert_result(Pair{UInt64, UInt64}, res)::Pair{UInt64, UInt64}
end
*/
extern "C" const std::pair<const uint64_t, uint64_t> * std_map_uint64_t_uint64_t_const_iterator_getindex(
    std::map<uint64_t, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint64_t_const_iterator_inc_(
    std::map<uint64_t, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint64_t_const_iterator_dec_(
    std::map<uint64_t, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, UInt64}, map::STL.StdMaps.StdMap{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint64_t_const_iterator_is_cbegin(
    const std::map<uint64_t, uint64_t>::const_iterator * restrict iter,
    const std::map<uint64_t, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, UInt64}, map::STL.StdMaps.StdMap{UInt64, UInt64})
    res = ccall(("std_map_uint64_t_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint64_t_const_iterator_is_cend(
    const std::map<uint64_t, uint64_t>::const_iterator * restrict iter,
    const std::map<uint64_t, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt64}, type::Type{UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}, ())
    return StdMap{UInt64, UInt8}(res)::STL.StdMaps.StdMap{UInt64, UInt8}
end
*/
extern "C" std::map<uint64_t, uint8_t> * std_map_uint64_t_uint8_t_new(
    
) {
    return new std::map<uint64_t, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint8_t_delete(
    std::map<uint64_t, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}},), map)
    return StdMap{UInt64, UInt8}(res)::STL.StdMaps.StdMap{UInt64, UInt8}
end
*/
extern "C" std::map<uint64_t, uint8_t> * std_map_uint64_t_uint8_t_copy(
    const std::map<uint64_t, uint8_t> * restrict map
) {
    return new std::map<uint64_t, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint64_t_uint8_t_length(
    const std::map<uint64_t, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt64, UInt8}, key::Any)
    res = ccall(("std_map_uint64_t_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint64_t_uint8_t_haskey(
    const std::map<uint64_t, uint8_t> * restrict map,
    uint64_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt64, UInt8}, key::Any)
    res = ccall(("std_map_uint64_t_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_uint64_t_uint8_t_getindex(
    std::map<uint64_t, uint8_t> * restrict map,
    uint64_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt64, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_uint64_t_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}, Ptr{UInt8}, Ptr{UInt64}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint8_t_setindex_(
    std::map<uint64_t, uint8_t> * restrict map,
    uint8_t const * elt,
    uint64_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt64, UInt8}, key::Any)
    res = ccall(("std_map_uint64_t_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}, Ptr{UInt64}), map, convert_arg(Ptr{UInt64}, convert(UInt64, key)))
    return map::STL.StdMaps.StdMap{UInt64, UInt8}
end
*/
extern "C" void std_map_uint64_t_uint8_t_delete_(
    std::map<uint64_t, uint8_t> * restrict map,
    uint64_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt64, UInt8}, map2::STL.StdMaps.StdMap{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint8_t_equals(
    const std::map<uint64_t, uint8_t> * restrict map1,
    const std::map<uint64_t, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}},), map)
    return StdMapIterator{UInt64, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt8}
end
*/
extern "C" std::map<uint64_t, uint8_t>::const_iterator * std_map_uint64_t_uint8_t_cbegin(
    const std::map<uint64_t, uint8_t> * restrict map
) {
    return new std::map<uint64_t, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt64, UInt8}},), map)
    return StdMapIterator{UInt64, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt8}
end
*/
extern "C" std::map<uint64_t, uint8_t>::const_iterator * std_map_uint64_t_uint8_t_cend(
    const std::map<uint64_t, uint8_t> * restrict map
) {
    return new std::map<uint64_t, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt64}, type::Type{UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}, ())
    return StdMapIterator{UInt64, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt64, UInt8}
end
*/
extern "C" std::map<uint64_t, uint8_t>::const_iterator * std_map_uint64_t_uint8_t_const_iterator_new(
    
) {
    return new std::map<uint64_t, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint8_t_const_iterator_delete(
    std::map<uint64_t, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt64, UInt8}, iter2::STL.StdMaps.StdMapIterator{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint8_t_const_iterator_equals(
    const std::map<uint64_t, uint8_t>::const_iterator * restrict iter1,
    const std::map<uint64_t, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt64, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}},), iter)
    return convert_result(Pair{UInt64, UInt8}, res)::Pair{UInt64, UInt8}
end
*/
extern "C" const std::pair<const uint64_t, uint8_t> * std_map_uint64_t_uint8_t_const_iterator_getindex(
    std::map<uint64_t, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint8_t_const_iterator_inc_(
    std::map<uint64_t, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint64_t_uint8_t_const_iterator_dec_(
    std::map<uint64_t, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt64, UInt8}, map::STL.StdMaps.StdMap{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint8_t_const_iterator_is_cbegin(
    const std::map<uint64_t, uint8_t>::const_iterator * restrict iter,
    const std::map<uint64_t, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt64, UInt8}, map::STL.StdMaps.StdMap{UInt64, UInt8})
    res = ccall(("std_map_uint64_t_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt64, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt64, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint64_t_uint8_t_const_iterator_is_cend(
    const std::map<uint64_t, uint8_t>::const_iterator * restrict iter,
    const std::map<uint64_t, uint8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{Bool})
    res = ccall(("std_map_uint8_t_bool_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Bool}}, ())
    return StdMap{UInt8, Bool}(res)::STL.StdMaps.StdMap{UInt8, Bool}
end
*/
extern "C" std::map<uint8_t, bool> * std_map_uint8_t_bool_new(
    
) {
    return new std::map<uint8_t, bool>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_bool_delete(
    std::map<uint8_t, bool> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}},), map)
    return StdMap{UInt8, Bool}(res)::STL.StdMaps.StdMap{UInt8, Bool}
end
*/
extern "C" std::map<uint8_t, bool> * std_map_uint8_t_bool_copy(
    const std::map<uint8_t, bool> * restrict map
) {
    return new std::map<uint8_t, bool>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_bool_length(
    const std::map<uint8_t, bool> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, Bool}, key::Any)
    res = ccall(("std_map_uint8_t_bool_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_bool_haskey(
    const std::map<uint8_t, bool> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, Bool}, key::Any)
    res = ccall(("std_map_uint8_t_bool_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Bool}, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(Bool, res)::Bool
end
*/
extern "C" bool * std_map_uint8_t_bool_getindex(
    std::map<uint8_t, bool> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, Bool}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_bool_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}}, Ptr{Bool}, Ptr{UInt8}), map, convert_arg(Ptr{Bool}, convert(Bool, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_bool_setindex_(
    std::map<uint8_t, bool> * restrict map,
    bool const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, Bool}, key::Any)
    res = ccall(("std_map_uint8_t_bool_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, Bool}
end
*/
extern "C" void std_map_uint8_t_bool_delete_(
    std::map<uint8_t, bool> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, Bool}, map2::STL.StdMaps.StdMap{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}}, Ptr{STL.StdMaps.StdMap{UInt8, Bool}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_bool_equals(
    const std::map<uint8_t, bool> * restrict map1,
    const std::map<uint8_t, bool> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}},), map)
    return StdMapIterator{UInt8, Bool}(res)::STL.StdMaps.StdMapIterator{UInt8, Bool}
end
*/
extern "C" std::map<uint8_t, bool>::const_iterator * std_map_uint8_t_bool_cbegin(
    const std::map<uint8_t, bool> * restrict map
) {
    return new std::map<uint8_t, bool>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}}, (Ptr{STL.StdMaps.StdMap{UInt8, Bool}},), map)
    return StdMapIterator{UInt8, Bool}(res)::STL.StdMaps.StdMapIterator{UInt8, Bool}
end
*/
extern "C" std::map<uint8_t, bool>::const_iterator * std_map_uint8_t_bool_cend(
    const std::map<uint8_t, bool> * restrict map
) {
    return new std::map<uint8_t, bool>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{Bool})
    res = ccall(("std_map_uint8_t_bool_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Bool}}, ())
    return StdMapIterator{UInt8, Bool}(res)::STL.StdMaps.StdMapIterator{UInt8, Bool}
end
*/
extern "C" std::map<uint8_t, bool>::const_iterator * std_map_uint8_t_bool_const_iterator_new(
    
) {
    return new std::map<uint8_t, bool>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_bool_const_iterator_delete(
    std::map<uint8_t, bool>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, Bool}, iter2::STL.StdMaps.StdMapIterator{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_bool_const_iterator_equals(
    const std::map<uint8_t, bool>::const_iterator * restrict iter1,
    const std::map<uint8_t, bool>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, Bool}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}},), iter)
    return convert_result(Pair{UInt8, Bool}, res)::Pair{UInt8, Bool}
end
*/
extern "C" const std::pair<const uint8_t, bool> * std_map_uint8_t_bool_const_iterator_getindex(
    std::map<uint8_t, bool>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_bool_const_iterator_inc_(
    std::map<uint8_t, bool>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_bool_const_iterator_dec_(
    std::map<uint8_t, bool>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, Bool}, map::STL.StdMaps.StdMap{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}}, Ptr{STL.StdMaps.StdMap{UInt8, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_bool_const_iterator_is_cbegin(
    const std::map<uint8_t, bool>::const_iterator * restrict iter,
    const std::map<uint8_t, bool> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, Bool}, map::STL.StdMaps.StdMap{UInt8, Bool})
    res = ccall(("std_map_uint8_t_bool_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Bool}}, Ptr{STL.StdMaps.StdMap{UInt8, Bool}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_bool_const_iterator_is_cend(
    const std::map<uint8_t, bool>::const_iterator * restrict iter,
    const std::map<uint8_t, bool> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{Float32})
    res = ccall(("std_map_uint8_t_float_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Float32}}, ())
    return StdMap{UInt8, Float32}(res)::STL.StdMaps.StdMap{UInt8, Float32}
end
*/
extern "C" std::map<uint8_t, float> * std_map_uint8_t_float_new(
    
) {
    return new std::map<uint8_t, float>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_float_delete(
    std::map<uint8_t, float> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}},), map)
    return StdMap{UInt8, Float32}(res)::STL.StdMaps.StdMap{UInt8, Float32}
end
*/
extern "C" std::map<uint8_t, float> * std_map_uint8_t_float_copy(
    const std::map<uint8_t, float> * restrict map
) {
    return new std::map<uint8_t, float>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_float_length(
    const std::map<uint8_t, float> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, Float32}, key::Any)
    res = ccall(("std_map_uint8_t_float_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_float_haskey(
    const std::map<uint8_t, float> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, Float32}, key::Any)
    res = ccall(("std_map_uint8_t_float_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float32}, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(Float32, res)::Float32
end
*/
extern "C" float * std_map_uint8_t_float_getindex(
    std::map<uint8_t, float> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, Float32}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_float_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}}, Ptr{Float32}, Ptr{UInt8}), map, convert_arg(Ptr{Float32}, convert(Float32, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_float_setindex_(
    std::map<uint8_t, float> * restrict map,
    float const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, Float32}, key::Any)
    res = ccall(("std_map_uint8_t_float_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, Float32}
end
*/
extern "C" void std_map_uint8_t_float_delete_(
    std::map<uint8_t, float> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, Float32}, map2::STL.StdMaps.StdMap{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}}, Ptr{STL.StdMaps.StdMap{UInt8, Float32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_float_equals(
    const std::map<uint8_t, float> * restrict map1,
    const std::map<uint8_t, float> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}},), map)
    return StdMapIterator{UInt8, Float32}(res)::STL.StdMaps.StdMapIterator{UInt8, Float32}
end
*/
extern "C" std::map<uint8_t, float>::const_iterator * std_map_uint8_t_float_cbegin(
    const std::map<uint8_t, float> * restrict map
) {
    return new std::map<uint8_t, float>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}}, (Ptr{STL.StdMaps.StdMap{UInt8, Float32}},), map)
    return StdMapIterator{UInt8, Float32}(res)::STL.StdMaps.StdMapIterator{UInt8, Float32}
end
*/
extern "C" std::map<uint8_t, float>::const_iterator * std_map_uint8_t_float_cend(
    const std::map<uint8_t, float> * restrict map
) {
    return new std::map<uint8_t, float>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{Float32})
    res = ccall(("std_map_uint8_t_float_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Float32}}, ())
    return StdMapIterator{UInt8, Float32}(res)::STL.StdMaps.StdMapIterator{UInt8, Float32}
end
*/
extern "C" std::map<uint8_t, float>::const_iterator * std_map_uint8_t_float_const_iterator_new(
    
) {
    return new std::map<uint8_t, float>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_float_const_iterator_delete(
    std::map<uint8_t, float>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, Float32}, iter2::STL.StdMaps.StdMapIterator{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_float_const_iterator_equals(
    const std::map<uint8_t, float>::const_iterator * restrict iter1,
    const std::map<uint8_t, float>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, Float32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}},), iter)
    return convert_result(Pair{UInt8, Float32}, res)::Pair{UInt8, Float32}
end
*/
extern "C" const std::pair<const uint8_t, float> * std_map_uint8_t_float_const_iterator_getindex(
    std::map<uint8_t, float>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_float_const_iterator_inc_(
    std::map<uint8_t, float>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_float_const_iterator_dec_(
    std::map<uint8_t, float>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, Float32}, map::STL.StdMaps.StdMap{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}}, Ptr{STL.StdMaps.StdMap{UInt8, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_float_const_iterator_is_cbegin(
    const std::map<uint8_t, float>::const_iterator * restrict iter,
    const std::map<uint8_t, float> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, Float32}, map::STL.StdMaps.StdMap{UInt8, Float32})
    res = ccall(("std_map_uint8_t_float_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float32}}, Ptr{STL.StdMaps.StdMap{UInt8, Float32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_float_const_iterator_is_cend(
    const std::map<uint8_t, float>::const_iterator * restrict iter,
    const std::map<uint8_t, float> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{Float64})
    res = ccall(("std_map_uint8_t_double_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Float64}}, ())
    return StdMap{UInt8, Float64}(res)::STL.StdMaps.StdMap{UInt8, Float64}
end
*/
extern "C" std::map<uint8_t, double> * std_map_uint8_t_double_new(
    
) {
    return new std::map<uint8_t, double>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_double_delete(
    std::map<uint8_t, double> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}},), map)
    return StdMap{UInt8, Float64}(res)::STL.StdMaps.StdMap{UInt8, Float64}
end
*/
extern "C" std::map<uint8_t, double> * std_map_uint8_t_double_copy(
    const std::map<uint8_t, double> * restrict map
) {
    return new std::map<uint8_t, double>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_double_length(
    const std::map<uint8_t, double> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, Float64}, key::Any)
    res = ccall(("std_map_uint8_t_double_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_double_haskey(
    const std::map<uint8_t, double> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, Float64}, key::Any)
    res = ccall(("std_map_uint8_t_double_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Float64}, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(Float64, res)::Float64
end
*/
extern "C" double * std_map_uint8_t_double_getindex(
    std::map<uint8_t, double> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, Float64}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_double_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}}, Ptr{Float64}, Ptr{UInt8}), map, convert_arg(Ptr{Float64}, convert(Float64, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_double_setindex_(
    std::map<uint8_t, double> * restrict map,
    double const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, Float64}, key::Any)
    res = ccall(("std_map_uint8_t_double_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, Float64}
end
*/
extern "C" void std_map_uint8_t_double_delete_(
    std::map<uint8_t, double> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, Float64}, map2::STL.StdMaps.StdMap{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}}, Ptr{STL.StdMaps.StdMap{UInt8, Float64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_double_equals(
    const std::map<uint8_t, double> * restrict map1,
    const std::map<uint8_t, double> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}},), map)
    return StdMapIterator{UInt8, Float64}(res)::STL.StdMaps.StdMapIterator{UInt8, Float64}
end
*/
extern "C" std::map<uint8_t, double>::const_iterator * std_map_uint8_t_double_cbegin(
    const std::map<uint8_t, double> * restrict map
) {
    return new std::map<uint8_t, double>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}}, (Ptr{STL.StdMaps.StdMap{UInt8, Float64}},), map)
    return StdMapIterator{UInt8, Float64}(res)::STL.StdMaps.StdMapIterator{UInt8, Float64}
end
*/
extern "C" std::map<uint8_t, double>::const_iterator * std_map_uint8_t_double_cend(
    const std::map<uint8_t, double> * restrict map
) {
    return new std::map<uint8_t, double>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{Float64})
    res = ccall(("std_map_uint8_t_double_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Float64}}, ())
    return StdMapIterator{UInt8, Float64}(res)::STL.StdMaps.StdMapIterator{UInt8, Float64}
end
*/
extern "C" std::map<uint8_t, double>::const_iterator * std_map_uint8_t_double_const_iterator_new(
    
) {
    return new std::map<uint8_t, double>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_double_const_iterator_delete(
    std::map<uint8_t, double>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, Float64}, iter2::STL.StdMaps.StdMapIterator{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_double_const_iterator_equals(
    const std::map<uint8_t, double>::const_iterator * restrict iter1,
    const std::map<uint8_t, double>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, Float64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}},), iter)
    return convert_result(Pair{UInt8, Float64}, res)::Pair{UInt8, Float64}
end
*/
extern "C" const std::pair<const uint8_t, double> * std_map_uint8_t_double_const_iterator_getindex(
    std::map<uint8_t, double>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_double_const_iterator_inc_(
    std::map<uint8_t, double>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_double_const_iterator_dec_(
    std::map<uint8_t, double>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, Float64}, map::STL.StdMaps.StdMap{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}}, Ptr{STL.StdMaps.StdMap{UInt8, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_double_const_iterator_is_cbegin(
    const std::map<uint8_t, double>::const_iterator * restrict iter,
    const std::map<uint8_t, double> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, Float64}, map::STL.StdMaps.StdMap{UInt8, Float64})
    res = ccall(("std_map_uint8_t_double_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Float64}}, Ptr{STL.StdMaps.StdMap{UInt8, Float64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_double_const_iterator_is_cend(
    const std::map<uint8_t, double>::const_iterator * restrict iter,
    const std::map<uint8_t, double> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{Int16})
    res = ccall(("std_map_uint8_t_int16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int16}}, ())
    return StdMap{UInt8, Int16}(res)::STL.StdMaps.StdMap{UInt8, Int16}
end
*/
extern "C" std::map<uint8_t, int16_t> * std_map_uint8_t_int16_t_new(
    
) {
    return new std::map<uint8_t, int16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int16_t_delete(
    std::map<uint8_t, int16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}},), map)
    return StdMap{UInt8, Int16}(res)::STL.StdMaps.StdMap{UInt8, Int16}
end
*/
extern "C" std::map<uint8_t, int16_t> * std_map_uint8_t_int16_t_copy(
    const std::map<uint8_t, int16_t> * restrict map
) {
    return new std::map<uint8_t, int16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_int16_t_length(
    const std::map<uint8_t, int16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, Int16}, key::Any)
    res = ccall(("std_map_uint8_t_int16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_int16_t_haskey(
    const std::map<uint8_t, int16_t> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, Int16}, key::Any)
    res = ccall(("std_map_uint8_t_int16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int16}, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(Int16, res)::Int16
end
*/
extern "C" int16_t * std_map_uint8_t_int16_t_getindex(
    std::map<uint8_t, int16_t> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, Int16}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_int16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}}, Ptr{Int16}, Ptr{UInt8}), map, convert_arg(Ptr{Int16}, convert(Int16, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int16_t_setindex_(
    std::map<uint8_t, int16_t> * restrict map,
    int16_t const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, Int16}, key::Any)
    res = ccall(("std_map_uint8_t_int16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, Int16}
end
*/
extern "C" void std_map_uint8_t_int16_t_delete_(
    std::map<uint8_t, int16_t> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, Int16}, map2::STL.StdMaps.StdMap{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}}, Ptr{STL.StdMaps.StdMap{UInt8, Int16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int16_t_equals(
    const std::map<uint8_t, int16_t> * restrict map1,
    const std::map<uint8_t, int16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}},), map)
    return StdMapIterator{UInt8, Int16}(res)::STL.StdMaps.StdMapIterator{UInt8, Int16}
end
*/
extern "C" std::map<uint8_t, int16_t>::const_iterator * std_map_uint8_t_int16_t_cbegin(
    const std::map<uint8_t, int16_t> * restrict map
) {
    return new std::map<uint8_t, int16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int16}},), map)
    return StdMapIterator{UInt8, Int16}(res)::STL.StdMaps.StdMapIterator{UInt8, Int16}
end
*/
extern "C" std::map<uint8_t, int16_t>::const_iterator * std_map_uint8_t_int16_t_cend(
    const std::map<uint8_t, int16_t> * restrict map
) {
    return new std::map<uint8_t, int16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{Int16})
    res = ccall(("std_map_uint8_t_int16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int16}}, ())
    return StdMapIterator{UInt8, Int16}(res)::STL.StdMaps.StdMapIterator{UInt8, Int16}
end
*/
extern "C" std::map<uint8_t, int16_t>::const_iterator * std_map_uint8_t_int16_t_const_iterator_new(
    
) {
    return new std::map<uint8_t, int16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int16_t_const_iterator_delete(
    std::map<uint8_t, int16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, Int16}, iter2::STL.StdMaps.StdMapIterator{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int16_t_const_iterator_equals(
    const std::map<uint8_t, int16_t>::const_iterator * restrict iter1,
    const std::map<uint8_t, int16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, Int16}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}},), iter)
    return convert_result(Pair{UInt8, Int16}, res)::Pair{UInt8, Int16}
end
*/
extern "C" const std::pair<const uint8_t, int16_t> * std_map_uint8_t_int16_t_const_iterator_getindex(
    std::map<uint8_t, int16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int16_t_const_iterator_inc_(
    std::map<uint8_t, int16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int16_t_const_iterator_dec_(
    std::map<uint8_t, int16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, Int16}, map::STL.StdMaps.StdMap{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}}, Ptr{STL.StdMaps.StdMap{UInt8, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int16_t_const_iterator_is_cbegin(
    const std::map<uint8_t, int16_t>::const_iterator * restrict iter,
    const std::map<uint8_t, int16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, Int16}, map::STL.StdMaps.StdMap{UInt8, Int16})
    res = ccall(("std_map_uint8_t_int16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int16}}, Ptr{STL.StdMaps.StdMap{UInt8, Int16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int16_t_const_iterator_is_cend(
    const std::map<uint8_t, int16_t>::const_iterator * restrict iter,
    const std::map<uint8_t, int16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{Int32})
    res = ccall(("std_map_uint8_t_int32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int32}}, ())
    return StdMap{UInt8, Int32}(res)::STL.StdMaps.StdMap{UInt8, Int32}
end
*/
extern "C" std::map<uint8_t, int32_t> * std_map_uint8_t_int32_t_new(
    
) {
    return new std::map<uint8_t, int32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int32_t_delete(
    std::map<uint8_t, int32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}},), map)
    return StdMap{UInt8, Int32}(res)::STL.StdMaps.StdMap{UInt8, Int32}
end
*/
extern "C" std::map<uint8_t, int32_t> * std_map_uint8_t_int32_t_copy(
    const std::map<uint8_t, int32_t> * restrict map
) {
    return new std::map<uint8_t, int32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_int32_t_length(
    const std::map<uint8_t, int32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, Int32}, key::Any)
    res = ccall(("std_map_uint8_t_int32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_int32_t_haskey(
    const std::map<uint8_t, int32_t> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, Int32}, key::Any)
    res = ccall(("std_map_uint8_t_int32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int32}, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(Int32, res)::Int32
end
*/
extern "C" int32_t * std_map_uint8_t_int32_t_getindex(
    std::map<uint8_t, int32_t> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, Int32}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_int32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}}, Ptr{Int32}, Ptr{UInt8}), map, convert_arg(Ptr{Int32}, convert(Int32, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int32_t_setindex_(
    std::map<uint8_t, int32_t> * restrict map,
    int32_t const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, Int32}, key::Any)
    res = ccall(("std_map_uint8_t_int32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, Int32}
end
*/
extern "C" void std_map_uint8_t_int32_t_delete_(
    std::map<uint8_t, int32_t> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, Int32}, map2::STL.StdMaps.StdMap{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}}, Ptr{STL.StdMaps.StdMap{UInt8, Int32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int32_t_equals(
    const std::map<uint8_t, int32_t> * restrict map1,
    const std::map<uint8_t, int32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}},), map)
    return StdMapIterator{UInt8, Int32}(res)::STL.StdMaps.StdMapIterator{UInt8, Int32}
end
*/
extern "C" std::map<uint8_t, int32_t>::const_iterator * std_map_uint8_t_int32_t_cbegin(
    const std::map<uint8_t, int32_t> * restrict map
) {
    return new std::map<uint8_t, int32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int32}},), map)
    return StdMapIterator{UInt8, Int32}(res)::STL.StdMaps.StdMapIterator{UInt8, Int32}
end
*/
extern "C" std::map<uint8_t, int32_t>::const_iterator * std_map_uint8_t_int32_t_cend(
    const std::map<uint8_t, int32_t> * restrict map
) {
    return new std::map<uint8_t, int32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{Int32})
    res = ccall(("std_map_uint8_t_int32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int32}}, ())
    return StdMapIterator{UInt8, Int32}(res)::STL.StdMaps.StdMapIterator{UInt8, Int32}
end
*/
extern "C" std::map<uint8_t, int32_t>::const_iterator * std_map_uint8_t_int32_t_const_iterator_new(
    
) {
    return new std::map<uint8_t, int32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int32_t_const_iterator_delete(
    std::map<uint8_t, int32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, Int32}, iter2::STL.StdMaps.StdMapIterator{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int32_t_const_iterator_equals(
    const std::map<uint8_t, int32_t>::const_iterator * restrict iter1,
    const std::map<uint8_t, int32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, Int32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}},), iter)
    return convert_result(Pair{UInt8, Int32}, res)::Pair{UInt8, Int32}
end
*/
extern "C" const std::pair<const uint8_t, int32_t> * std_map_uint8_t_int32_t_const_iterator_getindex(
    std::map<uint8_t, int32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int32_t_const_iterator_inc_(
    std::map<uint8_t, int32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int32_t_const_iterator_dec_(
    std::map<uint8_t, int32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, Int32}, map::STL.StdMaps.StdMap{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}}, Ptr{STL.StdMaps.StdMap{UInt8, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int32_t_const_iterator_is_cbegin(
    const std::map<uint8_t, int32_t>::const_iterator * restrict iter,
    const std::map<uint8_t, int32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, Int32}, map::STL.StdMaps.StdMap{UInt8, Int32})
    res = ccall(("std_map_uint8_t_int32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int32}}, Ptr{STL.StdMaps.StdMap{UInt8, Int32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int32_t_const_iterator_is_cend(
    const std::map<uint8_t, int32_t>::const_iterator * restrict iter,
    const std::map<uint8_t, int32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{Int64})
    res = ccall(("std_map_uint8_t_int64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int64}}, ())
    return StdMap{UInt8, Int64}(res)::STL.StdMaps.StdMap{UInt8, Int64}
end
*/
extern "C" std::map<uint8_t, int64_t> * std_map_uint8_t_int64_t_new(
    
) {
    return new std::map<uint8_t, int64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int64_t_delete(
    std::map<uint8_t, int64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}},), map)
    return StdMap{UInt8, Int64}(res)::STL.StdMaps.StdMap{UInt8, Int64}
end
*/
extern "C" std::map<uint8_t, int64_t> * std_map_uint8_t_int64_t_copy(
    const std::map<uint8_t, int64_t> * restrict map
) {
    return new std::map<uint8_t, int64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_int64_t_length(
    const std::map<uint8_t, int64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, Int64}, key::Any)
    res = ccall(("std_map_uint8_t_int64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_int64_t_haskey(
    const std::map<uint8_t, int64_t> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, Int64}, key::Any)
    res = ccall(("std_map_uint8_t_int64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int64}, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(Int64, res)::Int64
end
*/
extern "C" int64_t * std_map_uint8_t_int64_t_getindex(
    std::map<uint8_t, int64_t> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, Int64}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_int64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}}, Ptr{Int64}, Ptr{UInt8}), map, convert_arg(Ptr{Int64}, convert(Int64, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int64_t_setindex_(
    std::map<uint8_t, int64_t> * restrict map,
    int64_t const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, Int64}, key::Any)
    res = ccall(("std_map_uint8_t_int64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, Int64}
end
*/
extern "C" void std_map_uint8_t_int64_t_delete_(
    std::map<uint8_t, int64_t> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, Int64}, map2::STL.StdMaps.StdMap{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}}, Ptr{STL.StdMaps.StdMap{UInt8, Int64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int64_t_equals(
    const std::map<uint8_t, int64_t> * restrict map1,
    const std::map<uint8_t, int64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}},), map)
    return StdMapIterator{UInt8, Int64}(res)::STL.StdMaps.StdMapIterator{UInt8, Int64}
end
*/
extern "C" std::map<uint8_t, int64_t>::const_iterator * std_map_uint8_t_int64_t_cbegin(
    const std::map<uint8_t, int64_t> * restrict map
) {
    return new std::map<uint8_t, int64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int64}},), map)
    return StdMapIterator{UInt8, Int64}(res)::STL.StdMaps.StdMapIterator{UInt8, Int64}
end
*/
extern "C" std::map<uint8_t, int64_t>::const_iterator * std_map_uint8_t_int64_t_cend(
    const std::map<uint8_t, int64_t> * restrict map
) {
    return new std::map<uint8_t, int64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{Int64})
    res = ccall(("std_map_uint8_t_int64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int64}}, ())
    return StdMapIterator{UInt8, Int64}(res)::STL.StdMaps.StdMapIterator{UInt8, Int64}
end
*/
extern "C" std::map<uint8_t, int64_t>::const_iterator * std_map_uint8_t_int64_t_const_iterator_new(
    
) {
    return new std::map<uint8_t, int64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int64_t_const_iterator_delete(
    std::map<uint8_t, int64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, Int64}, iter2::STL.StdMaps.StdMapIterator{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int64_t_const_iterator_equals(
    const std::map<uint8_t, int64_t>::const_iterator * restrict iter1,
    const std::map<uint8_t, int64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, Int64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}},), iter)
    return convert_result(Pair{UInt8, Int64}, res)::Pair{UInt8, Int64}
end
*/
extern "C" const std::pair<const uint8_t, int64_t> * std_map_uint8_t_int64_t_const_iterator_getindex(
    std::map<uint8_t, int64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int64_t_const_iterator_inc_(
    std::map<uint8_t, int64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int64_t_const_iterator_dec_(
    std::map<uint8_t, int64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, Int64}, map::STL.StdMaps.StdMap{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}}, Ptr{STL.StdMaps.StdMap{UInt8, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int64_t_const_iterator_is_cbegin(
    const std::map<uint8_t, int64_t>::const_iterator * restrict iter,
    const std::map<uint8_t, int64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, Int64}, map::STL.StdMaps.StdMap{UInt8, Int64})
    res = ccall(("std_map_uint8_t_int64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int64}}, Ptr{STL.StdMaps.StdMap{UInt8, Int64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int64_t_const_iterator_is_cend(
    const std::map<uint8_t, int64_t>::const_iterator * restrict iter,
    const std::map<uint8_t, int64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{Int8})
    res = ccall(("std_map_uint8_t_int8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int8}}, ())
    return StdMap{UInt8, Int8}(res)::STL.StdMaps.StdMap{UInt8, Int8}
end
*/
extern "C" std::map<uint8_t, int8_t> * std_map_uint8_t_int8_t_new(
    
) {
    return new std::map<uint8_t, int8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int8_t_delete(
    std::map<uint8_t, int8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}},), map)
    return StdMap{UInt8, Int8}(res)::STL.StdMaps.StdMap{UInt8, Int8}
end
*/
extern "C" std::map<uint8_t, int8_t> * std_map_uint8_t_int8_t_copy(
    const std::map<uint8_t, int8_t> * restrict map
) {
    return new std::map<uint8_t, int8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_int8_t_length(
    const std::map<uint8_t, int8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, Int8}, key::Any)
    res = ccall(("std_map_uint8_t_int8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_int8_t_haskey(
    const std::map<uint8_t, int8_t> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, Int8}, key::Any)
    res = ccall(("std_map_uint8_t_int8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Int8}, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(Int8, res)::Int8
end
*/
extern "C" int8_t * std_map_uint8_t_int8_t_getindex(
    std::map<uint8_t, int8_t> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, Int8}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_int8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}}, Ptr{Int8}, Ptr{UInt8}), map, convert_arg(Ptr{Int8}, convert(Int8, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int8_t_setindex_(
    std::map<uint8_t, int8_t> * restrict map,
    int8_t const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, Int8}, key::Any)
    res = ccall(("std_map_uint8_t_int8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, Int8}
end
*/
extern "C" void std_map_uint8_t_int8_t_delete_(
    std::map<uint8_t, int8_t> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, Int8}, map2::STL.StdMaps.StdMap{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}}, Ptr{STL.StdMaps.StdMap{UInt8, Int8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int8_t_equals(
    const std::map<uint8_t, int8_t> * restrict map1,
    const std::map<uint8_t, int8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}},), map)
    return StdMapIterator{UInt8, Int8}(res)::STL.StdMaps.StdMapIterator{UInt8, Int8}
end
*/
extern "C" std::map<uint8_t, int8_t>::const_iterator * std_map_uint8_t_int8_t_cbegin(
    const std::map<uint8_t, int8_t> * restrict map
) {
    return new std::map<uint8_t, int8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}}, (Ptr{STL.StdMaps.StdMap{UInt8, Int8}},), map)
    return StdMapIterator{UInt8, Int8}(res)::STL.StdMaps.StdMapIterator{UInt8, Int8}
end
*/
extern "C" std::map<uint8_t, int8_t>::const_iterator * std_map_uint8_t_int8_t_cend(
    const std::map<uint8_t, int8_t> * restrict map
) {
    return new std::map<uint8_t, int8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{Int8})
    res = ccall(("std_map_uint8_t_int8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Int8}}, ())
    return StdMapIterator{UInt8, Int8}(res)::STL.StdMaps.StdMapIterator{UInt8, Int8}
end
*/
extern "C" std::map<uint8_t, int8_t>::const_iterator * std_map_uint8_t_int8_t_const_iterator_new(
    
) {
    return new std::map<uint8_t, int8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int8_t_const_iterator_delete(
    std::map<uint8_t, int8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, Int8}, iter2::STL.StdMaps.StdMapIterator{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int8_t_const_iterator_equals(
    const std::map<uint8_t, int8_t>::const_iterator * restrict iter1,
    const std::map<uint8_t, int8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, Int8}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}},), iter)
    return convert_result(Pair{UInt8, Int8}, res)::Pair{UInt8, Int8}
end
*/
extern "C" const std::pair<const uint8_t, int8_t> * std_map_uint8_t_int8_t_const_iterator_getindex(
    std::map<uint8_t, int8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int8_t_const_iterator_inc_(
    std::map<uint8_t, int8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_int8_t_const_iterator_dec_(
    std::map<uint8_t, int8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, Int8}, map::STL.StdMaps.StdMap{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}}, Ptr{STL.StdMaps.StdMap{UInt8, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int8_t_const_iterator_is_cbegin(
    const std::map<uint8_t, int8_t>::const_iterator * restrict iter,
    const std::map<uint8_t, int8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, Int8}, map::STL.StdMaps.StdMap{UInt8, Int8})
    res = ccall(("std_map_uint8_t_int8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Int8}}, Ptr{STL.StdMaps.StdMap{UInt8, Int8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_int8_t_const_iterator_is_cend(
    const std::map<uint8_t, int8_t>::const_iterator * restrict iter,
    const std::map<uint8_t, int8_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}, ())
    return StdMap{UInt8, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}
end
*/
extern "C" std::map<uint8_t, void *> * std_map_uint8_t_void___new(
    
) {
    return new std::map<uint8_t, void *>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_void___delete(
    std::map<uint8_t, void *> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}},), map)
    return StdMap{UInt8, Ptr{Nothing}}(res)::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}
end
*/
extern "C" std::map<uint8_t, void *> * std_map_uint8_t_void___copy(
    const std::map<uint8_t, void *> * restrict map
) {
    return new std::map<uint8_t, void *>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_void___length(
    const std::map<uint8_t, void *> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint8_t_void___haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_void___haskey(
    const std::map<uint8_t, void *> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint8_t_void___getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Ptr{Nothing}}, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(Ptr{Nothing}, res)::Ptr{Nothing}
end
*/
extern "C" void * * std_map_uint8_t_void___getindex(
    std::map<uint8_t, void *> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_void___setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}, Ptr{Ptr{Nothing}}, Ptr{UInt8}), map, convert_arg(Ptr{Ptr{Nothing}}, convert(Ptr{Nothing}, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_void___setindex_(
    std::map<uint8_t, void *> * restrict map,
    void * const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}, key::Any)
    res = ccall(("std_map_uint8_t_void___delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}
end
*/
extern "C" void std_map_uint8_t_void___delete_(
    std::map<uint8_t, void *> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}, map2::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_void___equals(
    const std::map<uint8_t, void *> * restrict map1,
    const std::map<uint8_t, void *> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}},), map)
    return StdMapIterator{UInt8, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}
end
*/
extern "C" std::map<uint8_t, void *>::const_iterator * std_map_uint8_t_void___cbegin(
    const std::map<uint8_t, void *> * restrict map
) {
    return new std::map<uint8_t, void *>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}},), map)
    return StdMapIterator{UInt8, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}
end
*/
extern "C" std::map<uint8_t, void *>::const_iterator * std_map_uint8_t_void___cend(
    const std::map<uint8_t, void *> * restrict map
) {
    return new std::map<uint8_t, void *>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}, ())
    return StdMapIterator{UInt8, Ptr{Nothing}}(res)::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}
end
*/
extern "C" std::map<uint8_t, void *>::const_iterator * std_map_uint8_t_void___const_iterator_new(
    
) {
    return new std::map<uint8_t, void *>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_void___const_iterator_delete(
    std::map<uint8_t, void *>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}, iter2::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_void___const_iterator_equals(
    const std::map<uint8_t, void *>::const_iterator * restrict iter1,
    const std::map<uint8_t, void *>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, Ptr{Nothing}}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}},), iter)
    return convert_result(Pair{UInt8, Ptr{Nothing}}, res)::Pair{UInt8, Ptr{Nothing}}
end
*/
extern "C" const std::pair<const uint8_t, void *> * std_map_uint8_t_void___const_iterator_getindex(
    std::map<uint8_t, void *>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_void___const_iterator_inc_(
    std::map<uint8_t, void *>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_void___const_iterator_dec_(
    std::map<uint8_t, void *>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}, map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_void___const_iterator_is_cbegin(
    const std::map<uint8_t, void *>::const_iterator * restrict iter,
    const std::map<uint8_t, void *> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}, map::STL.StdMaps.StdMap{UInt8, Ptr{Nothing}})
    res = ccall(("std_map_uint8_t_void___const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, Ptr{Nothing}}}, Ptr{STL.StdMaps.StdMap{UInt8, Ptr{Nothing}}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_void___const_iterator_is_cend(
    const std::map<uint8_t, void *>::const_iterator * restrict iter,
    const std::map<uint8_t, void *> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}, ())
    return StdMap{UInt8, UInt16}(res)::STL.StdMaps.StdMap{UInt8, UInt16}
end
*/
extern "C" std::map<uint8_t, uint16_t> * std_map_uint8_t_uint16_t_new(
    
) {
    return new std::map<uint8_t, uint16_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint16_t_delete(
    std::map<uint8_t, uint16_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}},), map)
    return StdMap{UInt8, UInt16}(res)::STL.StdMaps.StdMap{UInt8, UInt16}
end
*/
extern "C" std::map<uint8_t, uint16_t> * std_map_uint8_t_uint16_t_copy(
    const std::map<uint8_t, uint16_t> * restrict map
) {
    return new std::map<uint8_t, uint16_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_uint16_t_length(
    const std::map<uint8_t, uint16_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, UInt16}, key::Any)
    res = ccall(("std_map_uint8_t_uint16_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_uint16_t_haskey(
    const std::map<uint8_t, uint16_t> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, UInt16}, key::Any)
    res = ccall(("std_map_uint8_t_uint16_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt16}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(UInt16, res)::UInt16
end
*/
extern "C" uint16_t * std_map_uint8_t_uint16_t_getindex(
    std::map<uint8_t, uint16_t> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, UInt16}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_uint16_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}, Ptr{UInt16}, Ptr{UInt8}), map, convert_arg(Ptr{UInt16}, convert(UInt16, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint16_t_setindex_(
    std::map<uint8_t, uint16_t> * restrict map,
    uint16_t const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, UInt16}, key::Any)
    res = ccall(("std_map_uint8_t_uint16_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, UInt16}
end
*/
extern "C" void std_map_uint8_t_uint16_t_delete_(
    std::map<uint8_t, uint16_t> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, UInt16}, map2::STL.StdMaps.StdMap{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint16_t_equals(
    const std::map<uint8_t, uint16_t> * restrict map1,
    const std::map<uint8_t, uint16_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}},), map)
    return StdMapIterator{UInt8, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt16}
end
*/
extern "C" std::map<uint8_t, uint16_t>::const_iterator * std_map_uint8_t_uint16_t_cbegin(
    const std::map<uint8_t, uint16_t> * restrict map
) {
    return new std::map<uint8_t, uint16_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt16}},), map)
    return StdMapIterator{UInt8, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt16}
end
*/
extern "C" std::map<uint8_t, uint16_t>::const_iterator * std_map_uint8_t_uint16_t_cend(
    const std::map<uint8_t, uint16_t> * restrict map
) {
    return new std::map<uint8_t, uint16_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}, ())
    return StdMapIterator{UInt8, UInt16}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt16}
end
*/
extern "C" std::map<uint8_t, uint16_t>::const_iterator * std_map_uint8_t_uint16_t_const_iterator_new(
    
) {
    return new std::map<uint8_t, uint16_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint16_t_const_iterator_delete(
    std::map<uint8_t, uint16_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, UInt16}, iter2::STL.StdMaps.StdMapIterator{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint16_t_const_iterator_equals(
    const std::map<uint8_t, uint16_t>::const_iterator * restrict iter1,
    const std::map<uint8_t, uint16_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, UInt16}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}},), iter)
    return convert_result(Pair{UInt8, UInt16}, res)::Pair{UInt8, UInt16}
end
*/
extern "C" const std::pair<const uint8_t, uint16_t> * std_map_uint8_t_uint16_t_const_iterator_getindex(
    std::map<uint8_t, uint16_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint16_t_const_iterator_inc_(
    std::map<uint8_t, uint16_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint16_t_const_iterator_dec_(
    std::map<uint8_t, uint16_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, UInt16}, map::STL.StdMaps.StdMap{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint16_t_const_iterator_is_cbegin(
    const std::map<uint8_t, uint16_t>::const_iterator * restrict iter,
    const std::map<uint8_t, uint16_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, UInt16}, map::STL.StdMaps.StdMap{UInt8, UInt16})
    res = ccall(("std_map_uint8_t_uint16_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt16}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt16}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint16_t_const_iterator_is_cend(
    const std::map<uint8_t, uint16_t>::const_iterator * restrict iter,
    const std::map<uint8_t, uint16_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}, ())
    return StdMap{UInt8, UInt32}(res)::STL.StdMaps.StdMap{UInt8, UInt32}
end
*/
extern "C" std::map<uint8_t, uint32_t> * std_map_uint8_t_uint32_t_new(
    
) {
    return new std::map<uint8_t, uint32_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint32_t_delete(
    std::map<uint8_t, uint32_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}},), map)
    return StdMap{UInt8, UInt32}(res)::STL.StdMaps.StdMap{UInt8, UInt32}
end
*/
extern "C" std::map<uint8_t, uint32_t> * std_map_uint8_t_uint32_t_copy(
    const std::map<uint8_t, uint32_t> * restrict map
) {
    return new std::map<uint8_t, uint32_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_uint32_t_length(
    const std::map<uint8_t, uint32_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, UInt32}, key::Any)
    res = ccall(("std_map_uint8_t_uint32_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_uint32_t_haskey(
    const std::map<uint8_t, uint32_t> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, UInt32}, key::Any)
    res = ccall(("std_map_uint8_t_uint32_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt32}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(UInt32, res)::UInt32
end
*/
extern "C" uint32_t * std_map_uint8_t_uint32_t_getindex(
    std::map<uint8_t, uint32_t> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, UInt32}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_uint32_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}, Ptr{UInt32}, Ptr{UInt8}), map, convert_arg(Ptr{UInt32}, convert(UInt32, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint32_t_setindex_(
    std::map<uint8_t, uint32_t> * restrict map,
    uint32_t const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, UInt32}, key::Any)
    res = ccall(("std_map_uint8_t_uint32_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, UInt32}
end
*/
extern "C" void std_map_uint8_t_uint32_t_delete_(
    std::map<uint8_t, uint32_t> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, UInt32}, map2::STL.StdMaps.StdMap{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint32_t_equals(
    const std::map<uint8_t, uint32_t> * restrict map1,
    const std::map<uint8_t, uint32_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}},), map)
    return StdMapIterator{UInt8, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt32}
end
*/
extern "C" std::map<uint8_t, uint32_t>::const_iterator * std_map_uint8_t_uint32_t_cbegin(
    const std::map<uint8_t, uint32_t> * restrict map
) {
    return new std::map<uint8_t, uint32_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt32}},), map)
    return StdMapIterator{UInt8, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt32}
end
*/
extern "C" std::map<uint8_t, uint32_t>::const_iterator * std_map_uint8_t_uint32_t_cend(
    const std::map<uint8_t, uint32_t> * restrict map
) {
    return new std::map<uint8_t, uint32_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}, ())
    return StdMapIterator{UInt8, UInt32}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt32}
end
*/
extern "C" std::map<uint8_t, uint32_t>::const_iterator * std_map_uint8_t_uint32_t_const_iterator_new(
    
) {
    return new std::map<uint8_t, uint32_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint32_t_const_iterator_delete(
    std::map<uint8_t, uint32_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, UInt32}, iter2::STL.StdMaps.StdMapIterator{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint32_t_const_iterator_equals(
    const std::map<uint8_t, uint32_t>::const_iterator * restrict iter1,
    const std::map<uint8_t, uint32_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, UInt32}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}},), iter)
    return convert_result(Pair{UInt8, UInt32}, res)::Pair{UInt8, UInt32}
end
*/
extern "C" const std::pair<const uint8_t, uint32_t> * std_map_uint8_t_uint32_t_const_iterator_getindex(
    std::map<uint8_t, uint32_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint32_t_const_iterator_inc_(
    std::map<uint8_t, uint32_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint32_t_const_iterator_dec_(
    std::map<uint8_t, uint32_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, UInt32}, map::STL.StdMaps.StdMap{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint32_t_const_iterator_is_cbegin(
    const std::map<uint8_t, uint32_t>::const_iterator * restrict iter,
    const std::map<uint8_t, uint32_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, UInt32}, map::STL.StdMaps.StdMap{UInt8, UInt32})
    res = ccall(("std_map_uint8_t_uint32_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt32}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt32}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint32_t_const_iterator_is_cend(
    const std::map<uint8_t, uint32_t>::const_iterator * restrict iter,
    const std::map<uint8_t, uint32_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}, ())
    return StdMap{UInt8, UInt64}(res)::STL.StdMaps.StdMap{UInt8, UInt64}
end
*/
extern "C" std::map<uint8_t, uint64_t> * std_map_uint8_t_uint64_t_new(
    
) {
    return new std::map<uint8_t, uint64_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint64_t_delete(
    std::map<uint8_t, uint64_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}},), map)
    return StdMap{UInt8, UInt64}(res)::STL.StdMaps.StdMap{UInt8, UInt64}
end
*/
extern "C" std::map<uint8_t, uint64_t> * std_map_uint8_t_uint64_t_copy(
    const std::map<uint8_t, uint64_t> * restrict map
) {
    return new std::map<uint8_t, uint64_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_uint64_t_length(
    const std::map<uint8_t, uint64_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, UInt64}, key::Any)
    res = ccall(("std_map_uint8_t_uint64_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_uint64_t_haskey(
    const std::map<uint8_t, uint64_t> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, UInt64}, key::Any)
    res = ccall(("std_map_uint8_t_uint64_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt64}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(UInt64, res)::UInt64
end
*/
extern "C" uint64_t * std_map_uint8_t_uint64_t_getindex(
    std::map<uint8_t, uint64_t> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, UInt64}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_uint64_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}, Ptr{UInt64}, Ptr{UInt8}), map, convert_arg(Ptr{UInt64}, convert(UInt64, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint64_t_setindex_(
    std::map<uint8_t, uint64_t> * restrict map,
    uint64_t const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, UInt64}, key::Any)
    res = ccall(("std_map_uint8_t_uint64_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, UInt64}
end
*/
extern "C" void std_map_uint8_t_uint64_t_delete_(
    std::map<uint8_t, uint64_t> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, UInt64}, map2::STL.StdMaps.StdMap{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint64_t_equals(
    const std::map<uint8_t, uint64_t> * restrict map1,
    const std::map<uint8_t, uint64_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}},), map)
    return StdMapIterator{UInt8, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt64}
end
*/
extern "C" std::map<uint8_t, uint64_t>::const_iterator * std_map_uint8_t_uint64_t_cbegin(
    const std::map<uint8_t, uint64_t> * restrict map
) {
    return new std::map<uint8_t, uint64_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt64}},), map)
    return StdMapIterator{UInt8, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt64}
end
*/
extern "C" std::map<uint8_t, uint64_t>::const_iterator * std_map_uint8_t_uint64_t_cend(
    const std::map<uint8_t, uint64_t> * restrict map
) {
    return new std::map<uint8_t, uint64_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}, ())
    return StdMapIterator{UInt8, UInt64}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt64}
end
*/
extern "C" std::map<uint8_t, uint64_t>::const_iterator * std_map_uint8_t_uint64_t_const_iterator_new(
    
) {
    return new std::map<uint8_t, uint64_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint64_t_const_iterator_delete(
    std::map<uint8_t, uint64_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, UInt64}, iter2::STL.StdMaps.StdMapIterator{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint64_t_const_iterator_equals(
    const std::map<uint8_t, uint64_t>::const_iterator * restrict iter1,
    const std::map<uint8_t, uint64_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, UInt64}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}},), iter)
    return convert_result(Pair{UInt8, UInt64}, res)::Pair{UInt8, UInt64}
end
*/
extern "C" const std::pair<const uint8_t, uint64_t> * std_map_uint8_t_uint64_t_const_iterator_getindex(
    std::map<uint8_t, uint64_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint64_t_const_iterator_inc_(
    std::map<uint8_t, uint64_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint64_t_const_iterator_dec_(
    std::map<uint8_t, uint64_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, UInt64}, map::STL.StdMaps.StdMap{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint64_t_const_iterator_is_cbegin(
    const std::map<uint8_t, uint64_t>::const_iterator * restrict iter,
    const std::map<uint8_t, uint64_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, UInt64}, map::STL.StdMaps.StdMap{UInt8, UInt64})
    res = ccall(("std_map_uint8_t_uint64_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt64}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt64}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint64_t_const_iterator_is_cend(
    const std::map<uint8_t, uint64_t>::const_iterator * restrict iter,
    const std::map<uint8_t, uint64_t> * restrict map
) {
    return *iter == map->cend();
}

/*
function StdMap_new(key::Type{UInt8}, type::Type{UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}, ())
    return StdMap{UInt8, UInt8}(res)::STL.StdMaps.StdMap{UInt8, UInt8}
end
*/
extern "C" std::map<uint8_t, uint8_t> * std_map_uint8_t_uint8_t_new(
    
) {
    return new std::map<uint8_t, uint8_t>;
}

/*
function StdMap_delete(map::STL.StdMaps.StdMap{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}},), map)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint8_t_delete(
    std::map<uint8_t, uint8_t> * restrict map
) {
    delete map;
}

/*
function Base.copy(map::STL.StdMaps.StdMap{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_copy", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}},), map)
    return StdMap{UInt8, UInt8}(res)::STL.StdMaps.StdMap{UInt8, UInt8}
end
*/
extern "C" std::map<uint8_t, uint8_t> * std_map_uint8_t_uint8_t_copy(
    const std::map<uint8_t, uint8_t> * restrict map
) {
    return new std::map<uint8_t, uint8_t>(*map);
}

/*
function Base.length(map::STL.StdMaps.StdMap{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_length", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}},), map)
    return convert(Int, res)::Int64
end
*/
extern "C" std::size_t std_map_uint8_t_uint8_t_length(
    const std::map<uint8_t, uint8_t> * restrict map
) {
    return map->size();
}

/*
function Base.haskey(map::STL.StdMaps.StdMap{UInt8, UInt8}, key::Any)
    res = ccall(("std_map_uint8_t_uint8_t_haskey", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), UInt64, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert(Bool, res)::Bool
end
*/
extern "C" std::size_t std_map_uint8_t_uint8_t_haskey(
    const std::map<uint8_t, uint8_t> * restrict map,
    uint8_t const * key
) {
    return map->count(*key);
}

/*
function Base.getindex(map::STL.StdMaps.StdMap{UInt8, UInt8}, key::Any)
    res = ccall(("std_map_uint8_t_uint8_t_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{UInt8}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return convert_result(UInt8, res)::UInt8
end
*/
extern "C" uint8_t * std_map_uint8_t_uint8_t_getindex(
    std::map<uint8_t, uint8_t> * restrict map,
    uint8_t const * key
) {
    return &map->at(*key);
}

/*
function Base.setindex!(map::STL.StdMaps.StdMap{UInt8, UInt8}, elt::Any, key::Any)
    res = ccall(("std_map_uint8_t_uint8_t_setindex_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}, Ptr{UInt8}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, elt)), convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint8_t_setindex_(
    std::map<uint8_t, uint8_t> * restrict map,
    uint8_t const * elt,
    uint8_t const * key
) {
    (*map)[*key] = *elt;
}

/*
function Base.delete!(map::STL.StdMaps.StdMap{UInt8, UInt8}, key::Any)
    res = ccall(("std_map_uint8_t_uint8_t_delete_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}, Ptr{UInt8}), map, convert_arg(Ptr{UInt8}, convert(UInt8, key)))
    return map::STL.StdMaps.StdMap{UInt8, UInt8}
end
*/
extern "C" void std_map_uint8_t_uint8_t_delete_(
    std::map<uint8_t, uint8_t> * restrict map,
    uint8_t const * key
) {
    map->erase(*key);
}

/*
function Base.:(==)(map1::STL.StdMaps.StdMap{UInt8, UInt8}, map2::STL.StdMaps.StdMap{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}), map1, map2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint8_t_equals(
    const std::map<uint8_t, uint8_t> * restrict map1,
    const std::map<uint8_t, uint8_t> * restrict map2
) {
    return *map1 == *map2;
}

/*
function cbegin(map::STL.StdMaps.StdMap{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}},), map)
    return StdMapIterator{UInt8, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt8}
end
*/
extern "C" std::map<uint8_t, uint8_t>::const_iterator * std_map_uint8_t_uint8_t_cbegin(
    const std::map<uint8_t, uint8_t> * restrict map
) {
    return new std::map<uint8_t, uint8_t>::const_iterator(map->cbegin());
}

/*
function cend(map::STL.StdMaps.StdMap{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}}, (Ptr{STL.StdMaps.StdMap{UInt8, UInt8}},), map)
    return StdMapIterator{UInt8, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt8}
end
*/
extern "C" std::map<uint8_t, uint8_t>::const_iterator * std_map_uint8_t_uint8_t_cend(
    const std::map<uint8_t, uint8_t> * restrict map
) {
    return new std::map<uint8_t, uint8_t>::const_iterator(map->cend());
}

/*
function StdMapIterator_new(key::Type{UInt8}, type::Type{UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_const_iterator_new", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}, ())
    return StdMapIterator{UInt8, UInt8}(res)::STL.StdMaps.StdMapIterator{UInt8, UInt8}
end
*/
extern "C" std::map<uint8_t, uint8_t>::const_iterator * std_map_uint8_t_uint8_t_const_iterator_new(
    
) {
    return new std::map<uint8_t, uint8_t>::const_iterator;
}

/*
function StdMapIterator_delete(iter::STL.StdMaps.StdMapIterator{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_const_iterator_delete", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint8_t_const_iterator_delete(
    std::map<uint8_t, uint8_t>::const_iterator * restrict iter
) {
    delete iter;
}

/*
function Base.:(==)(iter1::STL.StdMaps.StdMapIterator{UInt8, UInt8}, iter2::STL.StdMaps.StdMapIterator{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_const_iterator_equals", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}}, Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}}), iter1, iter2)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint8_t_const_iterator_equals(
    const std::map<uint8_t, uint8_t>::const_iterator * restrict iter1,
    const std::map<uint8_t, uint8_t>::const_iterator * restrict iter2
) {
    return *iter1 == *iter2;
}

/*
function Base.getindex(iter::STL.StdMaps.StdMapIterator{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_const_iterator_getindex", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Ptr{Pair{UInt8, UInt8}}, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}},), iter)
    return convert_result(Pair{UInt8, UInt8}, res)::Pair{UInt8, UInt8}
end
*/
extern "C" const std::pair<const uint8_t, uint8_t> * std_map_uint8_t_uint8_t_const_iterator_getindex(
    std::map<uint8_t, uint8_t>::const_iterator * restrict iter
) {
    return &**iter;
}

/*
function inc!(iter::STL.StdMaps.StdMapIterator{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_const_iterator_inc_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint8_t_const_iterator_inc_(
    std::map<uint8_t, uint8_t>::const_iterator * restrict iter
) {
    ++*iter;
}

/*
function dec!(iter::STL.StdMaps.StdMapIterator{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_const_iterator_dec_", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Nothing, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}},), iter)
    return res::Nothing
end
*/
extern "C" void std_map_uint8_t_uint8_t_const_iterator_dec_(
    std::map<uint8_t, uint8_t>::const_iterator * restrict iter
) {
    --*iter;
}

/*
function is_cbegin(iter::STL.StdMaps.StdMapIterator{UInt8, UInt8}, map::STL.StdMaps.StdMap{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_const_iterator_is_cbegin", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint8_t_const_iterator_is_cbegin(
    const std::map<uint8_t, uint8_t>::const_iterator * restrict iter,
    const std::map<uint8_t, uint8_t> * restrict map
) {
    return *iter == map->cbegin();
}

/*
function is_cend(iter::STL.StdMaps.StdMapIterator{UInt8, UInt8}, map::STL.StdMaps.StdMap{UInt8, UInt8})
    res = ccall(("std_map_uint8_t_uint8_t_const_iterator_is_cend", "/Users/eschnett/.julia/artifacts/4fe33bb541fedaadf6a56f15890dfacf89808500/lib/libSTL.dylib"), Bool, (Ptr{STL.StdMaps.StdMapIterator{UInt8, UInt8}}, Ptr{STL.StdMaps.StdMap{UInt8, UInt8}}), iter, map)
    return res::Bool
end
*/
extern "C" bool std_map_uint8_t_uint8_t_const_iterator_is_cend(
    const std::map<uint8_t, uint8_t>::const_iterator * restrict iter,
    const std::map<uint8_t, uint8_t> * restrict map
) {
    return *iter == map->cend();
}


